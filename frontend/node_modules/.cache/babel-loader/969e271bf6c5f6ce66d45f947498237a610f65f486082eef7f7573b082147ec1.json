{"ast":null,"code":"var _jsxFileName = \"D:\\\\Harvy\\\\Dev\\\\ProjectManagementSystem\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\TasksTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../../context/AuthContext';\nimport { API_BASE_URL } from '../../App';\nimport { Modal, Button, Form, Badge, Table, Spinner, Alert, Row, Col } from 'react-bootstrap';\nimport { formatDate } from '../../utils/formatting'; // Using formatDate\n// --- ADDED Comment Component Imports ---\nimport CommentList from './CommentList'; // Assuming it's in the same directory\nimport CommentForm from './CommentForm'; // Assuming it's in the same directory\n// --- END Imports ---\n\n// Helper functions\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTaskStatusColor = status => {/* ... */};\nconst getTaskPriorityColor = priority => {/* ... */};\nfunction TaskTable() {\n  _s();\n  const {\n    token\n  } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [modalError, setModalError] = useState(null);\n\n  // State for Edit/Create Task Modal\n  const [showModal, setShowModal] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [formData, setFormData] = useState({/* ... */});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Loading states for row actions\n  const [markingDoneTaskId, setMarkingDoneTaskId] = useState(null);\n  const [undoingTaskId, setUndoingTaskId] = useState(null);\n\n  // --- State for Comments ---\n  const [selectedTaskForDetails, setSelectedTaskForDetails] = useState(null); // Stores { id, title }\n  const [comments, setComments] = useState([]);\n  const [commentsLoading, setCommentsLoading] = useState(false);\n  const [commentsError, setCommentsError] = useState(null);\n  // --- END State for Comments ---\n\n  const taskStatuses = ['pending', 'in progress', 'completed'];\n  const taskPriorities = ['low', 'medium', 'high'];\n\n  // --- Data Fetching ---\n  // Fetches main task list, projects, users\n  const fetchData = useCallback(async () => {/* ... (remains same) ... */}, [token]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  // --- Fetch Comments for Selected Task ---\n  const fetchComments = useCallback(async taskId => {\n    if (!taskId) {\n      setComments([]);\n      return; // Clear if no task ID\n    }\n    setCommentsLoading(true);\n    setCommentsError(null);\n    console.log(`Comments: Fetching for task ${taskId}`);\n    try {\n      const response = await fetch(`${API_BASE_URL}/tasks/${taskId}/comments`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: Could not fetch comments.`);\n      }\n      const data = await response.json();\n      // Handle pagination or direct array from backend\n      setComments(data.data ? data.data : Array.isArray(data) ? data : []);\n    } catch (e) {\n      console.error(\"Fetch comments error:\", e);\n      setCommentsError(e.message || 'Failed to load comments.');\n      setComments([]);\n    } finally {\n      setCommentsLoading(false);\n    }\n  }, [token]); // Depends only on token\n\n  // --- Effect to fetch comments when selected task changes ---\n  useEffect(() => {\n    if (selectedTaskForDetails !== null && selectedTaskForDetails !== void 0 && selectedTaskForDetails.id) {\n      fetchComments(selectedTaskForDetails.id);\n    } else {\n      setComments([]); // Clear comments when no task is selected\n    }\n  }, [selectedTaskForDetails, fetchComments]); // Re-run if selected task or fetch function changes\n  // --- END Comment Fetching ---\n\n  // --- Edit/Create Modal Handlers ---\n  const handleShowCreateModal = () => {/* ... */};\n  const handleShowEditModal = task => {/* ... */};\n  const handleCloseModal = () => {/* ... */};\n  const handleInputChange = e => {/* ... */};\n  const handleSubmit = async e => {/* ... */};\n  const handleDelete = async taskId => {/* ... */};\n\n  // --- Mark Complete/Undo Handlers ---\n  const handleMarkAsComplete = async taskId => {/* ... */};\n  const handleUndoComplete = async taskId => {/* ... */};\n\n  // --- NEW: Handler to Select Task for Details/Comments ---\n  const handleSelectTaskForDetails = task => {\n    if ((selectedTaskForDetails === null || selectedTaskForDetails === void 0 ? void 0 : selectedTaskForDetails.id) === task.id) {\n      setSelectedTaskForDetails(null); // Toggle off if same task clicked\n    } else {\n      setSelectedTaskForDetails({\n        id: task.id,\n        title: task.title\n      }); // Select new task\n      // Fetching comments is handled by the useEffect above\n    }\n  };\n  // --- END NEW ---\n\n  // --- Callback for CommentForm: Refreshes comments list ---\n  const handleCommentAdded = () => {\n    if (selectedTaskForDetails !== null && selectedTaskForDetails !== void 0 && selectedTaskForDetails.id) {\n      fetchComments(selectedTaskForDetails.id);\n    }\n  };\n  // --- END Callback ---\n\n  // --- Render Logic ---\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center align-items-center text-light vh-100\",\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      className: \"me-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 109\n    }, this), \" Loading...\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 25\n  }, this);\n  if (error && !showModal) return /*#__PURE__*/_jsxDEV(Alert, {\n    variant: \"danger\",\n    className: \"bg-dark text-light border-danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 37\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-md-4\",\n    style: {\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #232323, #1a1a1a)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark p-4 rounded shadow mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3 flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-light mb-2 mb-md-0\",\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleShowCreateModal,\n          disabled: projects.length === 0 && !loading,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-plus-lg me-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), \" Create New Task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), error && !showModal && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 34\n      }, this), !loading && projects.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"warning\",\n        children: \"Create a project first.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 48\n      }, this), !loading && tasks.length === 0 && projects.length > 0 && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"info\",\n        children: \"No tasks found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 68\n      }, this), tasks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          variant: \"dark\",\n          striped: true,\n          hover: true,\n          responsive: \"sm\",\n          className: \"align-middle\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 64\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 81\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Assignee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 98\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-end\",\n                children: \"Created\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-end\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tasks.map(task => {\n              var _task$project, _task$assigned_user;\n              const isCompleted = task.status === 'completed';\n              const isLoadingComplete = markingDoneTaskId === task.id;\n              const isLoadingUndo = undoingTaskId === task.id;\n              const isSelectedForDetails = (selectedTaskForDetails === null || selectedTaskForDetails === void 0 ? void 0 : selectedTaskForDetails.id) === task.id; // Check if this row is selected\n\n              return (\n                /*#__PURE__*/\n                // Wrap row and conditional details row in Fragment\n                _jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"fw-bold\",\n                      children: task.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: ((_task$project = task.project) === null || _task$project === void 0 ? void 0 : _task$project.name) || /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-muted\",\n                        children: \"N/A\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 161,\n                        columnNumber: 56\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(Badge, {\n                        bg: getTaskStatusColor(task.status),\n                        className: \"text-capitalize p-2\",\n                        children: task.status || 'N/A'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(Badge, {\n                        bg: getTaskPriorityColor(task.priority),\n                        className: \"text-capitalize p-2\",\n                        children: task.priority || 'N/A'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 163,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.due_date ? new Date(task.due_date).toLocaleDateString() : /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-muted\",\n                        children: \"N/A\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 164,\n                        columnNumber: 97\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: ((_task$assigned_user = task.assigned_user) === null || _task$assigned_user === void 0 ? void 0 : _task$assigned_user.name) || /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-muted\",\n                        children: \"Unassigned\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 165,\n                        columnNumber: 62\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"text-end\",\n                      children: formatDate(task.created_at)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"text-end\",\n                      children: formatDate(task.completed_at)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"text-center\",\n                      children: [!isCompleted ? /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"outline-success\",\n                        size: \"sm\",\n                        onClick: () => handleMarkAsComplete(task.id),\n                        className: \"me-2 py-1 px-2\",\n                        title: \"Mark Done\",\n                        disabled: isLoadingComplete || isLoadingUndo,\n                        children: [\" \", isLoadingComplete ? /*#__PURE__*/_jsxDEV(Spinner, {\n                          size: \"sm\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 171,\n                          columnNumber: 253\n                        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-check2-circle me-1\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 171,\n                            columnNumber: 278\n                          }, this), \" Done\"]\n                        }, void 0, true), \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 50\n                      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"outline-warning\",\n                        size: \"sm\",\n                        onClick: () => handleUndoComplete(task.id),\n                        className: \"me-2 py-1 px-2\",\n                        title: \"Undo\",\n                        disabled: isLoadingComplete || isLoadingUndo,\n                        children: [\" \", isLoadingUndo ? /*#__PURE__*/_jsxDEV(Spinner, {\n                          size: \"sm\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 172,\n                          columnNumber: 229\n                        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-arrow-counterclockwise me-1\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 172,\n                            columnNumber: 254\n                          }, this), \" Undo\"]\n                        }, void 0, true), \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"outline-light\",\n                        size: \"sm\",\n                        onClick: () => handleShowEditModal(task),\n                        className: \"me-2 py-1 px-2\",\n                        title: \"Edit Task\",\n                        disabled: isLoadingComplete || isLoadingUndo,\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"bi bi-pencil-fill me-1\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 175,\n                          columnNumber: 207\n                        }, this), \" Edit\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 32\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        variant: isSelectedForDetails ? \"info\" : \"outline-secondary\" // Highlight if selected\n                        ,\n                        size: \"sm\",\n                        onClick: () => handleSelectTaskForDetails(task) // Call select handler\n                        ,\n                        className: \"me-2 py-1 px-2\",\n                        title: isSelectedForDetails ? \"Hide Comments\" : \"View/Add Comments\",\n                        disabled: isLoadingComplete || isLoadingUndo // Disable during other actions\n                        ,\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: `bi ${isSelectedForDetails ? 'bi-chat-dots-fill' : 'bi-chat-dots'} me-1`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 186,\n                          columnNumber: 36\n                        }, this), \" Comments\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 178,\n                        columnNumber: 32\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"outline-danger\",\n                        size: \"sm\",\n                        onClick: () => handleDelete(task.id),\n                        title: \"Delete Task\",\n                        className: \"py-1 px-2\",\n                        disabled: isLoadingComplete || isLoadingUndo,\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"bi bi-trash-fill me-1\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 191,\n                          columnNumber: 201\n                        }, this), \" Delete\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 191,\n                        columnNumber: 32\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 27\n                  }, this), isSelectedForDetails && /*#__PURE__*/_jsxDEV(\"tr\", {\n                    className: \"task-comments-row\",\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: \"9\",\n                      className: \"p-3\",\n                      style: {\n                        backgroundColor: '#3a3f44'\n                      },\n                      children: [\" \", /*#__PURE__*/_jsxDEV(\"h6\", {\n                        className: \"text-light mb-2\",\n                        children: [\"Comments for: \", selectedTaskForDetails.title]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 199,\n                        columnNumber: 39\n                      }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n                        comments: comments,\n                        isLoading: commentsLoading,\n                        error: commentsError\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 39\n                      }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n                        taskId: selectedTaskForDetails.id,\n                        onCommentAdded: handleCommentAdded\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 205,\n                        columnNumber: 39\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 31\n                  }, this)]\n                }, task.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 23\n                }, this)\n              );\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      backdrop: \"static\",\n      keyboard: false,\n      centered: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskTable, \"5twMfX+ui4OlZb6e7LGJMAp5VBo=\", false, function () {\n  return [useAuth];\n});\n_c = TaskTable;\nexport default TaskTable;\nvar _c;\n$RefreshReg$(_c, \"TaskTable\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useAuth","API_BASE_URL","Modal","Button","Form","Badge","Table","Spinner","Alert","Row","Col","formatDate","CommentList","CommentForm","jsxDEV","_jsxDEV","Fragment","_Fragment","getTaskStatusColor","status","getTaskPriorityColor","priority","TaskTable","_s","token","tasks","setTasks","projects","setProjects","users","setUsers","loading","setLoading","error","setError","modalError","setModalError","showModal","setShowModal","isEditing","setIsEditing","currentTask","setCurrentTask","formData","setFormData","isSubmitting","setIsSubmitting","markingDoneTaskId","setMarkingDoneTaskId","undoingTaskId","setUndoingTaskId","selectedTaskForDetails","setSelectedTaskForDetails","comments","setComments","commentsLoading","setCommentsLoading","commentsError","setCommentsError","taskStatuses","taskPriorities","fetchData","fetchComments","taskId","console","log","response","fetch","headers","Authorization","Accept","ok","Error","data","json","Array","isArray","e","message","id","handleShowCreateModal","handleShowEditModal","task","handleCloseModal","handleInputChange","handleSubmit","handleDelete","handleMarkAsComplete","handleUndoComplete","handleSelectTaskForDetails","title","handleCommentAdded","className","children","animation","fileName","_jsxFileName","lineNumber","columnNumber","variant","style","minHeight","background","onClick","disabled","length","striped","hover","responsive","map","_task$project","_task$assigned_user","isCompleted","isLoadingComplete","isLoadingUndo","isSelectedForDetails","project","name","bg","due_date","Date","toLocaleDateString","assigned_user","created_at","completed_at","size","colSpan","backgroundColor","isLoading","onCommentAdded","show","onHide","backdrop","keyboard","centered","_c","$RefreshReg$"],"sources":["D:/Harvy/Dev/ProjectManagementSystem/frontend/src/components/Dashboard/TasksTable.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { API_BASE_URL } from '../../App';\r\nimport { Modal, Button, Form, Badge, Table, Spinner, Alert, Row, Col } from 'react-bootstrap';\r\nimport { formatDate } from '../../utils/formatting'; // Using formatDate\r\n// --- ADDED Comment Component Imports ---\r\nimport CommentList from './CommentList'; // Assuming it's in the same directory\r\nimport CommentForm from './CommentForm'; // Assuming it's in the same directory\r\n// --- END Imports ---\r\n\r\n// Helper functions\r\nconst getTaskStatusColor = (status) => { /* ... */ };\r\nconst getTaskPriorityColor = (priority) => { /* ... */ };\r\n\r\nfunction TaskTable() {\r\n  const { token } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [modalError, setModalError] = useState(null);\r\n\r\n  // State for Edit/Create Task Modal\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentTask, setCurrentTask] = useState(null);\r\n  const [formData, setFormData] = useState({ /* ... */ });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // Loading states for row actions\r\n  const [markingDoneTaskId, setMarkingDoneTaskId] = useState(null);\r\n  const [undoingTaskId, setUndoingTaskId] = useState(null);\r\n\r\n  // --- State for Comments ---\r\n  const [selectedTaskForDetails, setSelectedTaskForDetails] = useState(null); // Stores { id, title }\r\n  const [comments, setComments] = useState([]);\r\n  const [commentsLoading, setCommentsLoading] = useState(false);\r\n  const [commentsError, setCommentsError] = useState(null);\r\n  // --- END State for Comments ---\r\n\r\n  const taskStatuses = ['pending', 'in progress', 'completed'];\r\n  const taskPriorities = ['low', 'medium', 'high'];\r\n\r\n  // --- Data Fetching ---\r\n  // Fetches main task list, projects, users\r\n  const fetchData = useCallback(async () => { /* ... (remains same) ... */ }, [token]);\r\n  useEffect(() => { fetchData(); }, [fetchData]);\r\n\r\n  // --- Fetch Comments for Selected Task ---\r\n  const fetchComments = useCallback(async (taskId) => {\r\n      if (!taskId) {\r\n          setComments([]); return; // Clear if no task ID\r\n      }\r\n      setCommentsLoading(true); setCommentsError(null);\r\n      console.log(`Comments: Fetching for task ${taskId}`);\r\n      try {\r\n          const response = await fetch(`${API_BASE_URL}/tasks/${taskId}/comments`, {\r\n              headers: { Authorization: `Bearer ${token}`, Accept: 'application/json' },\r\n          });\r\n          if (!response.ok) { throw new Error(`HTTP ${response.status}: Could not fetch comments.`); }\r\n          const data = await response.json();\r\n          // Handle pagination or direct array from backend\r\n          setComments(data.data ? data.data : (Array.isArray(data) ? data : []));\r\n      } catch (e) {\r\n          console.error(\"Fetch comments error:\", e);\r\n          setCommentsError(e.message || 'Failed to load comments.');\r\n          setComments([]);\r\n      } finally {\r\n          setCommentsLoading(false);\r\n      }\r\n  }, [token]); // Depends only on token\r\n\r\n  // --- Effect to fetch comments when selected task changes ---\r\n  useEffect(() => {\r\n      if (selectedTaskForDetails?.id) {\r\n          fetchComments(selectedTaskForDetails.id);\r\n      } else {\r\n          setComments([]); // Clear comments when no task is selected\r\n      }\r\n  }, [selectedTaskForDetails, fetchComments]); // Re-run if selected task or fetch function changes\r\n  // --- END Comment Fetching ---\r\n\r\n\r\n  // --- Edit/Create Modal Handlers ---\r\n  const handleShowCreateModal = () => { /* ... */ };\r\n  const handleShowEditModal = (task) => { /* ... */ };\r\n  const handleCloseModal = () => { /* ... */ };\r\n  const handleInputChange = (e) => { /* ... */ };\r\n  const handleSubmit = async (e) => { /* ... */ };\r\n  const handleDelete = async (taskId) => { /* ... */ };\r\n\r\n  // --- Mark Complete/Undo Handlers ---\r\n  const handleMarkAsComplete = async (taskId) => { /* ... */ };\r\n  const handleUndoComplete = async (taskId) => { /* ... */ };\r\n\r\n  // --- NEW: Handler to Select Task for Details/Comments ---\r\n  const handleSelectTaskForDetails = (task) => {\r\n      if (selectedTaskForDetails?.id === task.id) {\r\n          setSelectedTaskForDetails(null); // Toggle off if same task clicked\r\n      } else {\r\n          setSelectedTaskForDetails({ id: task.id, title: task.title }); // Select new task\r\n          // Fetching comments is handled by the useEffect above\r\n      }\r\n  };\r\n  // --- END NEW ---\r\n\r\n  // --- Callback for CommentForm: Refreshes comments list ---\r\n  const handleCommentAdded = () => {\r\n      if (selectedTaskForDetails?.id) {\r\n          fetchComments(selectedTaskForDetails.id);\r\n      }\r\n  };\r\n  // --- END Callback ---\r\n\r\n\r\n  // --- Render Logic ---\r\n  if (loading) return ( <div className=\"d-flex justify-content-center align-items-center text-light vh-100\"><Spinner animation=\"border\" className=\"me-2\"/> Loading...</div> );\r\n  if (error && !showModal) return ( <Alert variant=\"danger\" className=\"bg-dark text-light border-danger\">{error}</Alert> );\r\n\r\n  return (\r\n    <div className=\"p-md-4\" style={{ minHeight: '100vh', background: 'linear-gradient(135deg, #232323, #1a1a1a)' }}>\r\n      <div className=\"bg-dark p-4 rounded shadow mb-4\">\r\n        {/* Header and Create Button */}\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3 flex-wrap\">\r\n          <h2 className=\"text-light mb-2 mb-md-0\">Tasks</h2>\r\n          <Button variant=\"primary\" onClick={handleShowCreateModal} disabled={projects.length === 0 && !loading}>\r\n            <i className=\"bi bi-plus-lg me-1\"></i> Create New Task\r\n          </Button>\r\n        </div>\r\n\r\n         {/* Display Errors/Info Messages */}\r\n         {error && !showModal && <Alert variant=\"danger\">{error}</Alert>}\r\n         {!loading && projects.length === 0 && <Alert variant=\"warning\">Create a project first.</Alert>}\r\n         {!loading && tasks.length === 0 && projects.length > 0 && <Alert variant=\"info\">No tasks found.</Alert>}\r\n\r\n        {/* Task Table */}\r\n        {tasks.length > 0 && (\r\n          <div className=\"table-responsive\">\r\n            <Table variant=\"dark\" striped hover responsive=\"sm\" className=\"align-middle\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Title</th><th>Project</th><th>Status</th><th>Priority</th><th>Due Date</th><th>Assignee</th>\r\n                  <th className=\"text-end\">Created</th>\r\n                  <th className=\"text-end\">Completed</th>\r\n                  <th className=\"text-center\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tasks.map(task => {\r\n                  const isCompleted = task.status === 'completed';\r\n                  const isLoadingComplete = markingDoneTaskId === task.id;\r\n                  const isLoadingUndo = undoingTaskId === task.id;\r\n                  const isSelectedForDetails = selectedTaskForDetails?.id === task.id; // Check if this row is selected\r\n\r\n                  return (\r\n                      // Wrap row and conditional details row in Fragment\r\n                      <React.Fragment key={task.id}>\r\n                          <tr>\r\n                            <td className=\"fw-bold\">{task.title}</td>\r\n                            <td>{task.project?.name || <span className=\"text-muted\">N/A</span>}</td>\r\n                            <td><Badge bg={getTaskStatusColor(task.status)} className=\"text-capitalize p-2\">{task.status || 'N/A'}</Badge></td>\r\n                            <td><Badge bg={getTaskPriorityColor(task.priority)} className=\"text-capitalize p-2\">{task.priority || 'N/A'}</Badge></td>\r\n                            <td>{task.due_date ? new Date(task.due_date).toLocaleDateString() : <span className=\"text-muted\">N/A</span>}</td>\r\n                            <td>{task.assigned_user?.name || <span className=\"text-muted\">Unassigned</span>}</td>\r\n                            <td className=\"text-end\">{formatDate(task.created_at)}</td>\r\n                            <td className=\"text-end\">{formatDate(task.completed_at)}</td>\r\n                            {/* Actions Cell */}\r\n                            <td className=\"text-center\">\r\n                               {/* Conditional \"Mark as Done\" / \"Undo\" Button */}\r\n                               {!isCompleted ? ( <Button variant=\"outline-success\" size=\"sm\" onClick={() => handleMarkAsComplete(task.id)} className=\"me-2 py-1 px-2\" title=\"Mark Done\" disabled={isLoadingComplete || isLoadingUndo}> {isLoadingComplete ? <Spinner size=\"sm\"/> : <><i className=\"bi bi-check2-circle me-1\"></i> Done</>} </Button>)\r\n                                : ( <Button variant=\"outline-warning\" size=\"sm\" onClick={() => handleUndoComplete(task.id)} className=\"me-2 py-1 px-2\" title=\"Undo\" disabled={isLoadingComplete || isLoadingUndo}> {isLoadingUndo ? <Spinner size=\"sm\"/> : <><i className=\"bi bi-arrow-counterclockwise me-1\"></i> Undo</>} </Button> )}\r\n\r\n                               {/* Edit Button */}\r\n                               <Button variant=\"outline-light\" size=\"sm\" onClick={() => handleShowEditModal(task)} className=\"me-2 py-1 px-2\" title=\"Edit Task\" disabled={isLoadingComplete || isLoadingUndo}><i className=\"bi bi-pencil-fill me-1\"></i> Edit</Button>\r\n\r\n                               {/* --- NEW: Comments/Details Button --- */}\r\n                               <Button\r\n                                   variant={isSelectedForDetails ? \"info\" : \"outline-secondary\"} // Highlight if selected\r\n                                   size=\"sm\"\r\n                                   onClick={() => handleSelectTaskForDetails(task)} // Call select handler\r\n                                   className=\"me-2 py-1 px-2\"\r\n                                   title={isSelectedForDetails ? \"Hide Comments\" : \"View/Add Comments\"}\r\n                                   disabled={isLoadingComplete || isLoadingUndo} // Disable during other actions\r\n                               >\r\n                                   <i className={`bi ${isSelectedForDetails ? 'bi-chat-dots-fill' : 'bi-chat-dots'} me-1`}></i> Comments\r\n                               </Button>\r\n                               {/* --- END Button --- */}\r\n\r\n                               {/* Delete Button */}\r\n                               <Button variant=\"outline-danger\" size=\"sm\" onClick={() => handleDelete(task.id)} title=\"Delete Task\" className=\"py-1 px-2\" disabled={isLoadingComplete || isLoadingUndo}><i className=\"bi bi-trash-fill me-1\"></i> Delete</Button>\r\n                            </td>\r\n                          </tr>\r\n                          {/* --- Conditionally Render Comments Below Row --- */}\r\n                          {isSelectedForDetails && (\r\n                              <tr className=\"task-comments-row\">\r\n                                  {/* colspan should match number of columns in the main table header */}\r\n                                  <td colSpan=\"9\" className=\"p-3\" style={{backgroundColor: '#3a3f44'}}> {/* Adjusted colspan and background */}\r\n                                      <h6 className=\"text-light mb-2\">Comments for: {selectedTaskForDetails.title}</h6>\r\n                                      <CommentList\r\n                                          comments={comments}\r\n                                          isLoading={commentsLoading}\r\n                                          error={commentsError}\r\n                                      />\r\n                                      <CommentForm\r\n                                          taskId={selectedTaskForDetails.id}\r\n                                          onCommentAdded={handleCommentAdded}\r\n                                      />\r\n                                  </td>\r\n                              </tr>\r\n                          )}\r\n                          {/* --- End Conditional Comments --- */}\r\n                      </React.Fragment>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* --- Task Edit/Create Modal --- */}\r\n      <Modal show={showModal} onHide={handleCloseModal} backdrop=\"static\" keyboard={false} centered>\r\n        {/* ... Modal Content ... */}\r\n      </Modal>\r\n\r\n      {/* Time Log Modal REMOVED */}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}