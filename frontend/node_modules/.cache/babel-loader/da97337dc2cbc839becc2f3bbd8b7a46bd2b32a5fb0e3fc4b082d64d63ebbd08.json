{"ast":null,"code":"var _jsxFileName = \"D:\\\\Harvy\\\\Dev\\\\ProjectManagementSystem\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\TasksTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../../context/AuthContext';\nimport { API_BASE_URL } from '../../App';\nimport { Modal, Button, Form, Badge, Table, Spinner, Alert, Row, Col } from 'react-bootstrap';\n// Utils for formatting time and potentially currency (if needed elsewhere)\nimport { formatDuration, formatDate } from '../../utils/formatting'; // Removed formatCurrency if not used here\n\n// Helper functions\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTaskStatusColor = status => {\n  switch (status === null || status === void 0 ? void 0 : status.toLowerCase()) {\n    case 'pending':\n      return 'secondary';\n    case 'in progress':\n      return 'info';\n    case 'completed':\n      return 'success';\n    default:\n      return 'light';\n  }\n};\nconst getTaskPriorityColor = priority => {\n  switch (priority) {\n    case 'low':\n      return 'success';\n    case 'medium':\n      return 'warning';\n    case 'high':\n      return 'danger';\n    default:\n      return 'light';\n  }\n};\nfunction TaskTable() {\n  _s();\n  const {\n    token\n  } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null); // For general fetch/delete/timer errors\n  const [modalError, setModalError] = useState(null); // Separate state for modal errors\n\n  // State for Edit/Create Task Modal\n  const [showModal, setShowModal] = useState(false);\n  const [isEditing, setIsEditing] = useState(false); // Controls modal mode and conditional fields\n  const [currentTask, setCurrentTask] = useState(null);\n  // formData no longer includes actual_cost\n  const [formData, setFormData] = useState({\n    project_id: '',\n    title: '',\n    description: '',\n    status: 'pending',\n    priority: 'medium',\n    assigned_user_id: '',\n    due_date: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false); // For modal submit button\n\n  // State for Start/Stop Button Loading\n  const [timerLoadingTaskId, setTimerLoadingTaskId] = useState(null);\n  const taskStatuses = ['pending', 'in progress', 'completed'];\n  const taskPriorities = ['low', 'medium', 'high'];\n\n  // Data Fetching Logic (ensure backend sends started_at, ended_at, and calculated duration)\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      var _tasksData$data, _tasksData$data2, _projectsData$data, _usersData$data;\n      const [tRes, pRes, uRes] = await Promise.all([\n      // Ensure API includes started_at, ended_at, duration (appended), project, assignedUser, owner\n      fetch(`${API_BASE_URL}/tasks`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Accept': 'application/json'\n        }\n      }), fetch(`${API_BASE_URL}/projects`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Accept': 'application/json'\n        }\n      }), fetch(`${API_BASE_URL}/users`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Accept': 'application/json'\n        }\n      })]);\n      if (!tRes.ok) throw new Error(`Task fetch failed: ${tRes.status} ${tRes.statusText}`);\n      if (!pRes.ok) throw new Error(`Project fetch failed: ${pRes.status} ${pRes.statusText}`);\n      if (!uRes.ok) throw new Error(`User fetch failed: ${uRes.status} ${uRes.statusText}`);\n      const tasksData = await tRes.json();\n      const projectsData = await pRes.json();\n      const usersData = await uRes.json();\n      console.log(\"DEBUG: First Task Received:\", tasksData[0] || (tasksData === null || tasksData === void 0 ? void 0 : (_tasksData$data = tasksData.data) === null || _tasksData$data === void 0 ? void 0 : _tasksData$data[0])); // Check data structure\n      setTasks(Array.isArray(tasksData) ? tasksData : (_tasksData$data2 = tasksData === null || tasksData === void 0 ? void 0 : tasksData.data) !== null && _tasksData$data2 !== void 0 ? _tasksData$data2 : []);\n      setProjects((_projectsData$data = projectsData === null || projectsData === void 0 ? void 0 : projectsData.data) !== null && _projectsData$data !== void 0 ? _projectsData$data : Array.isArray(projectsData) ? projectsData : []);\n      setUsers((_usersData$data = usersData === null || usersData === void 0 ? void 0 : usersData.data) !== null && _usersData$data !== void 0 ? _usersData$data : Array.isArray(usersData) ? usersData : []);\n    } catch (e) {\n      console.error('Failed to fetch data:', e);\n      setError(`Failed to load data: ${e.message}.`);\n      // Clear data on error to avoid stale display\n      setTasks([]);\n      setProjects([]);\n      setUsers([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [token]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]); // Dependency on fetchData is correct due to useCallback\n\n  // --- Edit/Create Modal Handlers ---\n  const handleShowCreateModal = () => {\n    if (projects.length === 0 && !loading) {\n      setError('Cannot add tasks: No projects available.');\n      return;\n    }\n    if (projects.length > 0) {\n      var _projects$;\n      setIsEditing(false); // Set mode to Create\n      setCurrentTask(null);\n      setModalError(null);\n      setIsSubmitting(false);\n      setFormData({\n        // Reset form (no actual_cost)\n        project_id: ((_projects$ = projects[0]) === null || _projects$ === void 0 ? void 0 : _projects$.id) || '',\n        title: '',\n        description: '',\n        status: 'pending',\n        priority: 'medium',\n        assigned_user_id: '',\n        due_date: ''\n      });\n      setShowModal(true);\n    } else if (!loading) {\n      setError('No projects found to assign tasks to.');\n    }\n  };\n  const handleShowEditModal = task => {\n    setIsEditing(true); // Set mode to Edit\n    setCurrentTask(task);\n    setModalError(null);\n    setIsSubmitting(false);\n    setFormData({\n      // Populate form (no actual_cost)\n      project_id: task.project_id,\n      title: task.title,\n      description: task.description || '',\n      status: task.status || 'pending',\n      // Populate status for editing\n      priority: task.priority || 'medium',\n      assigned_user_id: task.assigned_user_id || '',\n      due_date: task.due_date ? task.due_date.split('T')[0] : ''\n    });\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    if (isSubmitting) return;\n    setShowModal(false);\n    setCurrentTask(null);\n    setModalError(null);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // --- Form Submission ---\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setModalError(null);\n\n    // Validation (no cost validation)\n    if (!formData.title.trim()) {\n      setModalError('Task title cannot be empty.');\n      return;\n    }\n    if (!formData.project_id) {\n      setModalError('Please select a project.');\n      return;\n    }\n    if (formData.due_date && isNaN(Date.parse(formData.due_date))) {\n      setModalError('Invalid Due Date format.');\n      return;\n    }\n    setIsSubmitting(true);\n    const url = isEditing ? `${API_BASE_URL}/tasks/${currentTask.id}` : `${API_BASE_URL}/tasks`;\n    const method = isEditing ? 'PUT' : 'POST';\n\n    // Payload (no actual_cost)\n    const payload = {\n      ...formData\n    };\n    payload.assigned_user_id = formData.assigned_user_id === '' || formData.assigned_user_id === null ? null : parseInt(formData.assigned_user_id, 10);\n    payload.project_id = parseInt(formData.project_id, 10);\n    if (!formData.due_date) delete payload.due_date;\n    payload.description = formData.description || '';\n    // Backend handles default status if creating\n\n    console.log('Payload sending:', JSON.stringify(payload, null, 2));\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: {/*...*/},\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        /* ... error handling ... */throw new Error(message);\n      }\n      fetchData();\n      handleCloseModal();\n    } catch (e) {\n      /* ... error handling ... */setModalError(`Failed to save task: ${e.message}`);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // --- Deletion Handler ---\n  const handleDelete = async taskId => {\n    if (!window.confirm('Are you sure you want to permanently delete this task?')) return;\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {/*...*/}\n      });\n      if (!response.ok && response.status !== 204) {\n        /* ... error handling ... */throw new Error(message);\n      }\n      fetchData();\n    } catch (e) {\n      /* ... error handling ... */setError(`Failed to delete task: ${e.message}`);\n    }\n  };\n\n  // --- Start/Stop Timer Handler ---\n  const handleTimerAction = async (taskId, action) => {\n    setTimerLoadingTaskId(taskId);\n    setError(null);\n    const url = `${API_BASE_URL}/tasks/${taskId}/${action}-timer`;\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        /* ... error handling ... */throw new Error(message);\n      }\n      fetchData(); // Refresh data to show updated timer state\n    } catch (e) {\n      /* ... error handling ... */setError(`Failed to ${action} timer: ${e.message}`);\n    } finally {\n      setTimerLoadingTaskId(null);\n    }\n  };\n\n  // --- Render Logic ---\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center align-items-center text-light vh-100\",\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      className: \"me-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 109\n    }, this), \" Loading...\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 25\n  }, this);\n  if (error && !showModal) return /*#__PURE__*/_jsxDEV(Alert, {\n    variant: \"danger\",\n    className: \"bg-dark text-light border-danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 37\n  }, this); // Hide general error if modal is open\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-md-4\",\n    style: {\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #232323, #1a1a1a)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark p-4 rounded shadow mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3 flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-light mb-2 mb-md-0\",\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleShowCreateModal,\n          disabled: projects.length === 0 && !loading,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-plus-lg me-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), \" Create New Task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), error && !showModal && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        className: \"bg-dark text-light border-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 33\n      }, this), projects.length === 0 && !loading && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"warning\",\n        className: \"bg-dark text-warning border-warning\",\n        children: \"Create a project before adding tasks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 47\n      }, this), tasks.length === 0 && projects.length > 0 && !loading && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"info\",\n        className: \"bg-dark text-info border-info mt-3\",\n        children: \"No tasks found. Click 'Create New Task' to add one.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 67\n      }, this), tasks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          variant: \"dark\",\n          striped: true,\n          hover: true,\n          responsive: \"sm\",\n          className: \"align-middle\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 64\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 81\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Assignee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 98\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-end\",\n                children: \"Started\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-end\",\n                children: \"Ended\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-end\",\n                children: \"Duration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tasks.map(task => {\n              var _task$project, _task$assigned_user;\n              // Determine button states based on task timestamps\n              const isTimerRunning = task.started_at && !task.ended_at;\n              const canStart = !task.started_at;\n              const canStop = isTimerRunning;\n              const isLoading = timerLoadingTaskId === task.id; // Is this specific task's timer action loading?\n\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"fw-bold\",\n                  children: task.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ((_task$project = task.project) === null || _task$project === void 0 ? void 0 : _task$project.name) || /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-muted\",\n                    children: \"N/A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 52\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Badge, {\n                    bg: getTaskStatusColor(task.status),\n                    className: \"text-capitalize p-2\",\n                    children: task.status || 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Badge, {\n                    bg: getTaskPriorityColor(task.priority),\n                    className: \"text-capitalize p-2\",\n                    children: task.priority || 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.due_date ? new Date(task.due_date).toLocaleDateString() : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-muted\",\n                    children: \"N/A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 93\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ((_task$assigned_user = task.assigned_user) === null || _task$assigned_user === void 0 ? void 0 : _task$assigned_user.name) || /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-muted\",\n                    children: \"Unassigned\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 58\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-end\",\n                  children: formatDate(task.started_at)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-end\",\n                  children: formatDate(task.ended_at)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-end\",\n                  children: formatDuration(task.duration)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-center\",\n                  children: [!isTimerRunning && canStart && /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-success\",\n                    size: \"sm\",\n                    onClick: () => handleTimerAction(task.id, 'start'),\n                    className: \"me-2 py-1 px-2\",\n                    title: \"Start Timer\",\n                    disabled: isLoading,\n                    children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n                      as: \"span\",\n                      animation: \"border\",\n                      size: \"sm\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 49\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-play-fill me-1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 240,\n                        columnNumber: 104\n                      }, this), \" Start\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 32\n                  }, this), isTimerRunning && canStop && /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-warning\",\n                    size: \"sm\",\n                    onClick: () => handleTimerAction(task.id, 'stop'),\n                    className: \"me-2 py-1 px-2\",\n                    title: \"Stop Timer\",\n                    disabled: isLoading,\n                    children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n                      as: \"span\",\n                      animation: \"border\",\n                      size: \"sm\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 49\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-stop-fill me-1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 104\n                      }, this), \" Stop\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 32\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-light\",\n                    size: \"sm\",\n                    onClick: () => handleShowEditModal(task),\n                    className: \"me-2 py-1 px-2\",\n                    title: \"Edit Task\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-pencil-fill me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 157\n                    }, this), \" Edit\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 28\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-danger\",\n                    size: \"sm\",\n                    onClick: () => handleDelete(task.id),\n                    title: \"Delete Task\",\n                    className: \"py-1 px-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-trash-fill me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 151\n                    }, this), \" Delete\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 28\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 25\n                }, this)]\n              }, task.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      backdrop: \"static\",\n      keyboard: false,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: !isSubmitting,\n        closeVariant: \"white\",\n        className: \"bg-dark border-secondary\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          className: \"text-light\",\n          children: isEditing ? 'Edit Task' : 'Create New Task'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          className: \"bg-dark text-light\",\n          children: [modalError && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            className: \"bg-dark text-light border-danger\",\n            onClose: () => setModalError(null),\n            dismissible: true,\n            children: modalError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"taskProjectId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"taskTitle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"taskDescription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-3\",\n            children: [isEditing && /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"taskStatus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: isEditing ? 6 : 12,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"taskPriority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-3\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"taskDueDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 37\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"taskAssignee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 143\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 131\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          className: \"bg-dark border-secondary\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleCloseModal,\n            disabled: isSubmitting,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: isSubmitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"...\"\n            }, void 0, false) : isEditing ? 'Save Changes' : 'Create Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskTable, \"DJsyAvPvVW4DDxIzN+ZkPIdWAtE=\", false, function () {\n  return [useAuth];\n});\n_c = TaskTable;\nexport default TaskTable;\nvar _c;\n$RefreshReg$(_c, \"TaskTable\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useAuth","API_BASE_URL","Modal","Button","Form","Badge","Table","Spinner","Alert","Row","Col","formatDuration","formatDate","jsxDEV","_jsxDEV","Fragment","_Fragment","getTaskStatusColor","status","toLowerCase","getTaskPriorityColor","priority","TaskTable","_s","token","tasks","setTasks","projects","setProjects","users","setUsers","loading","setLoading","error","setError","modalError","setModalError","showModal","setShowModal","isEditing","setIsEditing","currentTask","setCurrentTask","formData","setFormData","project_id","title","description","assigned_user_id","due_date","isSubmitting","setIsSubmitting","timerLoadingTaskId","setTimerLoadingTaskId","taskStatuses","taskPriorities","fetchData","_tasksData$data","_tasksData$data2","_projectsData$data","_usersData$data","tRes","pRes","uRes","Promise","all","fetch","headers","ok","Error","statusText","tasksData","json","projectsData","usersData","console","log","data","Array","isArray","e","message","handleShowCreateModal","length","_projects$","id","handleShowEditModal","task","split","handleCloseModal","handleInputChange","name","value","target","prev","handleSubmit","preventDefault","trim","isNaN","Date","parse","url","method","payload","parseInt","JSON","stringify","response","body","handleDelete","taskId","window","confirm","handleTimerAction","action","Authorization","Accept","className","children","animation","fileName","_jsxFileName","lineNumber","columnNumber","variant","style","minHeight","background","onClick","disabled","striped","hover","responsive","map","_task$project","_task$assigned_user","isTimerRunning","started_at","ended_at","canStart","canStop","isLoading","project","bg","toLocaleDateString","assigned_user","duration","size","as","show","onHide","backdrop","keyboard","centered","Header","closeButton","closeVariant","Title","onSubmit","Body","onClose","dismissible","Group","controlId","md","Footer","type","_c","$RefreshReg$"],"sources":["D:/Harvy/Dev/ProjectManagementSystem/frontend/src/components/Dashboard/TasksTable.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { API_BASE_URL } from '../../App';\r\nimport { Modal, Button, Form, Badge, Table, Spinner, Alert, Row, Col } from 'react-bootstrap';\r\n// Utils for formatting time and potentially currency (if needed elsewhere)\r\nimport { formatDuration, formatDate } from '../../utils/formatting'; // Removed formatCurrency if not used here\r\n\r\n// Helper functions\r\nconst getTaskStatusColor = (status) => {\r\n  switch (status?.toLowerCase()) {\r\n    case 'pending': return 'secondary';\r\n    case 'in progress': return 'info';\r\n    case 'completed': return 'success';\r\n    default: return 'light';\r\n  }\r\n};\r\nconst getTaskPriorityColor = (priority) => {\r\n  switch (priority) {\r\n    case 'low': return 'success';\r\n    case 'medium': return 'warning';\r\n    case 'high': return 'danger';\r\n    default: return 'light';\r\n  }\r\n};\r\n\r\n\r\nfunction TaskTable() {\r\n  const { token } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null); // For general fetch/delete/timer errors\r\n  const [modalError, setModalError] = useState(null); // Separate state for modal errors\r\n\r\n  // State for Edit/Create Task Modal\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false); // Controls modal mode and conditional fields\r\n  const [currentTask, setCurrentTask] = useState(null);\r\n  // formData no longer includes actual_cost\r\n  const [formData, setFormData] = useState({\r\n    project_id: '', title: '', description: '', status: 'pending', priority: 'medium',\r\n    assigned_user_id: '', due_date: '',\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false); // For modal submit button\r\n\r\n  // State for Start/Stop Button Loading\r\n  const [timerLoadingTaskId, setTimerLoadingTaskId] = useState(null);\r\n\r\n  const taskStatuses = ['pending', 'in progress', 'completed'];\r\n  const taskPriorities = ['low', 'medium', 'high'];\r\n\r\n  // Data Fetching Logic (ensure backend sends started_at, ended_at, and calculated duration)\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true); setError(null);\r\n    try {\r\n        const [tRes, pRes, uRes] = await Promise.all([\r\n            // Ensure API includes started_at, ended_at, duration (appended), project, assignedUser, owner\r\n            fetch(`${API_BASE_URL}/tasks`, { headers: { 'Authorization': `Bearer ${token}`, 'Accept': 'application/json' } }),\r\n            fetch(`${API_BASE_URL}/projects`, { headers: { 'Authorization': `Bearer ${token}`, 'Accept': 'application/json' } }),\r\n            fetch(`${API_BASE_URL}/users`, { headers: { 'Authorization': `Bearer ${token}`, 'Accept': 'application/json' } }),\r\n        ]);\r\n\r\n        if (!tRes.ok) throw new Error(`Task fetch failed: ${tRes.status} ${tRes.statusText}`);\r\n        if (!pRes.ok) throw new Error(`Project fetch failed: ${pRes.status} ${pRes.statusText}`);\r\n        if (!uRes.ok) throw new Error(`User fetch failed: ${uRes.status} ${uRes.statusText}`);\r\n\r\n        const tasksData = await tRes.json();\r\n        const projectsData = await pRes.json();\r\n        const usersData = await uRes.json();\r\n\r\n        console.log(\"DEBUG: First Task Received:\", tasksData[0] || tasksData?.data?.[0]); // Check data structure\r\n        setTasks(Array.isArray(tasksData) ? tasksData : (tasksData?.data ?? []));\r\n        setProjects(projectsData?.data ?? (Array.isArray(projectsData) ? projectsData : []));\r\n        setUsers(usersData?.data ?? (Array.isArray(usersData) ? usersData : []));\r\n\r\n    } catch (e) {\r\n        console.error('Failed to fetch data:', e);\r\n        setError(`Failed to load data: ${e.message}.`);\r\n        // Clear data on error to avoid stale display\r\n        setTasks([]);\r\n        setProjects([]);\r\n        setUsers([]);\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]); // Dependency on fetchData is correct due to useCallback\r\n\r\n  // --- Edit/Create Modal Handlers ---\r\n  const handleShowCreateModal = () => {\r\n      if (projects.length === 0 && !loading) { setError('Cannot add tasks: No projects available.'); return; }\r\n      if (projects.length > 0) {\r\n          setIsEditing(false); // Set mode to Create\r\n          setCurrentTask(null); setModalError(null); setIsSubmitting(false);\r\n          setFormData({ // Reset form (no actual_cost)\r\n              project_id: projects[0]?.id || '', title: '', description: '', status: 'pending',\r\n              priority: 'medium', assigned_user_id: '', due_date: '',\r\n          });\r\n          setShowModal(true);\r\n      } else if (!loading) { setError('No projects found to assign tasks to.'); }\r\n  };\r\n  const handleShowEditModal = (task) => {\r\n      setIsEditing(true); // Set mode to Edit\r\n      setCurrentTask(task); setModalError(null); setIsSubmitting(false);\r\n      setFormData({ // Populate form (no actual_cost)\r\n          project_id: task.project_id, title: task.title, description: task.description || '',\r\n          status: task.status || 'pending', // Populate status for editing\r\n          priority: task.priority || 'medium',\r\n          assigned_user_id: task.assigned_user_id || '',\r\n          due_date: task.due_date ? task.due_date.split('T')[0] : '',\r\n      });\r\n      setShowModal(true);\r\n  };\r\n  const handleCloseModal = () => {\r\n      if (isSubmitting) return;\r\n      setShowModal(false); setCurrentTask(null); setModalError(null);\r\n  };\r\n  const handleInputChange = (e) => {\r\n      const { name, value } = e.target;\r\n      setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // --- Form Submission ---\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); setModalError(null);\r\n\r\n    // Validation (no cost validation)\r\n    if (!formData.title.trim()) { setModalError('Task title cannot be empty.'); return; }\r\n    if (!formData.project_id) { setModalError('Please select a project.'); return; }\r\n    if (formData.due_date && isNaN(Date.parse(formData.due_date))) { setModalError('Invalid Due Date format.'); return; }\r\n\r\n    setIsSubmitting(true);\r\n    const url = isEditing ? `${API_BASE_URL}/tasks/${currentTask.id}` : `${API_BASE_URL}/tasks`;\r\n    const method = isEditing ? 'PUT' : 'POST';\r\n\r\n    // Payload (no actual_cost)\r\n    const payload = { ...formData };\r\n    payload.assigned_user_id = formData.assigned_user_id === '' || formData.assigned_user_id === null ? null : parseInt(formData.assigned_user_id, 10);\r\n    payload.project_id = parseInt(formData.project_id, 10);\r\n    if (!formData.due_date) delete payload.due_date;\r\n    payload.description = formData.description || '';\r\n    // Backend handles default status if creating\r\n\r\n    console.log('Payload sending:', JSON.stringify(payload, null, 2));\r\n\r\n    try {\r\n      const response = await fetch(url, { method, headers: { /*...*/ }, body: JSON.stringify(payload) });\r\n      if (!response.ok) { /* ... error handling ... */ throw new Error(message); }\r\n      fetchData(); handleCloseModal();\r\n    } catch (e) { /* ... error handling ... */ setModalError(`Failed to save task: ${e.message}`); }\r\n    finally { setIsSubmitting(false); }\r\n  };\r\n\r\n  // --- Deletion Handler ---\r\n  const handleDelete = async (taskId) => {\r\n      if (!window.confirm('Are you sure you want to permanently delete this task?')) return;\r\n      setError(null);\r\n      try {\r\n          const response = await fetch(`${API_BASE_URL}/tasks/${taskId}`, { method: 'DELETE', headers: { /*...*/ } });\r\n          if (!response.ok && response.status !== 204) { /* ... error handling ... */ throw new Error(message); }\r\n          fetchData();\r\n      } catch (e) { /* ... error handling ... */ setError(`Failed to delete task: ${e.message}`); }\r\n  };\r\n\r\n  // --- Start/Stop Timer Handler ---\r\n  const handleTimerAction = async (taskId, action) => {\r\n      setTimerLoadingTaskId(taskId); setError(null);\r\n      const url = `${API_BASE_URL}/tasks/${taskId}/${action}-timer`;\r\n      try {\r\n          const response = await fetch(url, { method: 'POST', headers: { Authorization: `Bearer ${token}`, Accept: 'application/json', 'Content-Type': 'application/json' } });\r\n          if (!response.ok) { /* ... error handling ... */ throw new Error(message); }\r\n          fetchData(); // Refresh data to show updated timer state\r\n      } catch (e) { /* ... error handling ... */ setError(`Failed to ${action} timer: ${e.message}`); }\r\n      finally { setTimerLoadingTaskId(null); }\r\n  };\r\n\r\n  // --- Render Logic ---\r\n  if (loading) return ( <div className=\"d-flex justify-content-center align-items-center text-light vh-100\"><Spinner animation=\"border\" className=\"me-2\"/> Loading...</div> );\r\n  if (error && !showModal) return ( <Alert variant=\"danger\" className=\"bg-dark text-light border-danger\">{error}</Alert> ); // Hide general error if modal is open\r\n\r\n  return (\r\n    <div className=\"p-md-4\" style={{ minHeight: '100vh', background: 'linear-gradient(135deg, #232323, #1a1a1a)' }}>\r\n      <div className=\"bg-dark p-4 rounded shadow mb-4\">\r\n        {/* Header and Create Button */}\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3 flex-wrap\">\r\n          <h2 className=\"text-light mb-2 mb-md-0\">Tasks</h2>\r\n          <Button variant=\"primary\" onClick={handleShowCreateModal} disabled={projects.length === 0 && !loading}>\r\n            <i className=\"bi bi-plus-lg me-1\"></i> Create New Task\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Display Errors/Info Messages */}\r\n        {error && !showModal && <Alert variant=\"danger\" className=\"bg-dark text-light border-danger\">{error}</Alert>}\r\n        {projects.length === 0 && !loading && <Alert variant=\"warning\" className=\"bg-dark text-warning border-warning\">Create a project before adding tasks.</Alert>}\r\n        {tasks.length === 0 && projects.length > 0 && !loading && <Alert variant=\"info\" className=\"bg-dark text-info border-info mt-3\">No tasks found. Click 'Create New Task' to add one.</Alert>}\r\n\r\n        {/* Task Table */}\r\n        {tasks.length > 0 && (\r\n          <div className=\"table-responsive\">\r\n            <Table variant=\"dark\" striped hover responsive=\"sm\" className=\"align-middle\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Title</th><th>Project</th><th>Status</th><th>Priority</th><th>Due Date</th><th>Assignee</th>\r\n                  {/* ADDED Columns */}\r\n                  <th className=\"text-end\">Started</th>\r\n                  <th className=\"text-end\">Ended</th>\r\n                  <th className=\"text-end\">Duration</th>\r\n                  <th className=\"text-center\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tasks.map(task => {\r\n                  // Determine button states based on task timestamps\r\n                  const isTimerRunning = task.started_at && !task.ended_at;\r\n                  const canStart = !task.started_at;\r\n                  const canStop = isTimerRunning;\r\n                  const isLoading = timerLoadingTaskId === task.id; // Is this specific task's timer action loading?\r\n\r\n                  return (\r\n                      <tr key={task.id}>\r\n                        <td className=\"fw-bold\">{task.title}</td>\r\n                        <td>{task.project?.name || <span className=\"text-muted\">N/A</span>}</td>\r\n                        <td><Badge bg={getTaskStatusColor(task.status)} className=\"text-capitalize p-2\">{task.status || 'N/A'}</Badge></td>\r\n                        <td><Badge bg={getTaskPriorityColor(task.priority)} className=\"text-capitalize p-2\">{task.priority || 'N/A'}</Badge></td>\r\n                        <td>{task.due_date ? new Date(task.due_date).toLocaleDateString() : <span className=\"text-muted\">N/A</span>}</td>\r\n                        <td>{task.assigned_user?.name || <span className=\"text-muted\">Unassigned</span>}</td>\r\n                        {/* Display Timestamps & Duration */}\r\n                        <td className=\"text-end\">{formatDate(task.started_at)}</td>\r\n                        <td className=\"text-end\">{formatDate(task.ended_at)}</td>\r\n                        <td className=\"text-end\">{formatDuration(task.duration)}</td>{/* Uses accessor */}\r\n                        {/* Actions Cell */}\r\n                        <td className=\"text-center\">\r\n                           {/* Conditional Start/Stop Button */}\r\n                           {!isTimerRunning && canStart && (\r\n                               <Button variant=\"outline-success\" size=\"sm\" onClick={() => handleTimerAction(task.id, 'start')} className=\"me-2 py-1 px-2\" title=\"Start Timer\" disabled={isLoading}>\r\n                                   {isLoading ? <Spinner as=\"span\" animation=\"border\" size=\"sm\" /> : <><i className=\"bi bi-play-fill me-1\"></i> Start</>}\r\n                               </Button>\r\n                           )}\r\n                           {isTimerRunning && canStop && (\r\n                               <Button variant=\"outline-warning\" size=\"sm\" onClick={() => handleTimerAction(task.id, 'stop')} className=\"me-2 py-1 px-2\" title=\"Stop Timer\" disabled={isLoading}>\r\n                                   {isLoading ? <Spinner as=\"span\" animation=\"border\" size=\"sm\" /> : <><i className=\"bi bi-stop-fill me-1\"></i> Stop</>}\r\n                               </Button>\r\n                           )}\r\n                           {/* Edit Button */}\r\n                           <Button variant=\"outline-light\" size=\"sm\" onClick={() => handleShowEditModal(task)} className=\"me-2 py-1 px-2\" title=\"Edit Task\"><i className=\"bi bi-pencil-fill me-1\"></i> Edit</Button>\r\n                           {/* Delete Button */}\r\n                           <Button variant=\"outline-danger\" size=\"sm\" onClick={() => handleDelete(task.id)} title=\"Delete Task\" className=\"py-1 px-2\"><i className=\"bi bi-trash-fill me-1\"></i> Delete</Button>\r\n                        </td>\r\n                      </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* --- Task Edit/Create Modal --- */}\r\n      <Modal show={showModal} onHide={handleCloseModal} backdrop=\"static\" keyboard={false} centered>\r\n        <Modal.Header closeButton={!isSubmitting} closeVariant=\"white\" className=\"bg-dark border-secondary\">\r\n          <Modal.Title className=\"text-light\">{isEditing ? 'Edit Task' : 'Create New Task'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Modal.Body className=\"bg-dark text-light\">\r\n             {modalError && <Alert variant=\"danger\" className=\"bg-dark text-light border-danger\" onClose={() => setModalError(null)} dismissible>{modalError}</Alert>}\r\n\r\n             {/* Project Select */}\r\n             <Form.Group className=\"mb-3\" controlId=\"taskProjectId\">{/* ... Select options ... */}</Form.Group>\r\n             {/* Title Input */}\r\n             <Form.Group className=\"mb-3\" controlId=\"taskTitle\">{/* ... Input ... */}</Form.Group>\r\n             {/* Description Textarea */}\r\n             <Form.Group className=\"mb-3\" controlId=\"taskDescription\">{/* ... Textarea ... */}</Form.Group>\r\n\r\n             {/* Status (Conditional) & Priority Row */}\r\n             <Row className=\"mb-3\">\r\n                {isEditing && ( <Col md={6}><Form.Group controlId=\"taskStatus\">{/* Status Select */}</Form.Group></Col> )}\r\n                 <Col md={isEditing ? 6 : 12}><Form.Group controlId=\"taskPriority\">{/* Priority Select */}</Form.Group></Col>\r\n             </Row>\r\n\r\n             {/* Due Date & Assignee Row */}\r\n             <Row className=\"mb-3\"> <Col md={6}><Form.Group controlId=\"taskDueDate\">{/* ... Date Input ... */}</Form.Group></Col> <Col md={6}><Form.Group controlId=\"taskAssignee\">{/* ... Assignee Select ... */}</Form.Group></Col> </Row>\r\n\r\n             {/* Actual Cost Row REMOVED */}\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer className=\"bg-dark border-secondary\">\r\n            <Button variant=\"secondary\" onClick={handleCloseModal} disabled={isSubmitting}>Cancel</Button>\r\n            <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\r\n               {isSubmitting ? (<>...</>) : (isEditing ? 'Save Changes' : 'Create Task')}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n      {/* --- End Task Edit/Create Modal --- */}\r\n\r\n      {/* --- Time Log Modal REMOVED --- */}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}