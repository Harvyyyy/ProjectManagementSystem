{"ast":null,"code":"var _jsxFileName = \"D:\\\\Harvy\\\\Dev\\\\ProjectManagementSystem\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\TasksTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../../context/AuthContext';\nimport { API_BASE_URL } from '../../App';\n// Ensure Row and Col are imported\nimport { Modal, Button, Form, Badge, Table, Spinner, Alert, Row, Col } from 'react-bootstrap';\n// --- UPDATED Import: Only need formatDate ---\nimport { formatDate } from '../../utils/formatting'; // Adjust path if needed.\n// --- REMOVED Imports ---\n// import { formatCurrency, formatDuration } from '../../utils/formatting';\n// import TimeLogForm from './TimeLogForm';\n// --- END REMOVAL ---\n\n// Helper functions (define outside or import)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTaskStatusColor = status => {\n  switch (status === null || status === void 0 ? void 0 : status.toLowerCase()) {\n    case 'pending':\n      return 'secondary';\n    case 'in progress':\n      return 'info';\n    case 'completed':\n      return 'success';\n    default:\n      return 'light';\n  }\n};\nconst getTaskPriorityColor = priority => {\n  switch (priority) {\n    case 'low':\n      return 'success';\n    case 'medium':\n      return 'warning';\n    case 'high':\n      return 'danger';\n    default:\n      return 'light';\n  }\n};\nfunction TaskTable() {\n  _s();\n  const {\n    token\n  } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null); // For general fetch/delete errors\n  const [modalError, setModalError] = useState(null); // Separate state for modal errors\n\n  const [showModal, setShowModal] = useState(false);\n  const [isEditing, setIsEditing] = useState(false); // Flag to control form mode\n  const [currentTask, setCurrentTask] = useState(null);\n  const [formData, setFormData] = useState({\n    project_id: '',\n    title: '',\n    description: '',\n    status: 'pending',\n    priority: 'medium',\n    assigned_user_id: '',\n    // Use empty string for select default\n    due_date: ''\n    // REMOVED actual_cost state\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // --- REMOVED Time Log Modal State ---\n  // const [showTimeLogModal, setShowTimeLogModal] = useState(false);\n  // const [selectedTaskForLog, setSelectedTaskForLog] = useState(null);\n  // --- END REMOVAL ---\n\n  // --- REMOVED Start/Stop Timer Loading State ---\n  // const [timerLoadingTaskId, setTimerLoadingTaskId] = useState(null);\n\n  // --- ADDED State for Mark/Undo Button Loading ---\n  const [markingDoneTaskId, setMarkingDoneTaskId] = useState(null);\n  const [undoingTaskId, setUndoingTaskId] = useState(null);\n  // --- END ADDED State ---\n\n  // --- Arrays are USED below ---\n  const taskStatuses = ['pending', 'in progress', 'completed'];\n  const taskPriorities = ['low', 'medium', 'high'];\n  // ---\n\n  // --- Data Fetching ---\n  // Ensure backend sends created_at and completed_at\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      var _tasksData$data, _tasksData$data2, _projectsData$data, _usersData$data;\n      const fetchOptions = {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Accept': 'application/json'\n        }\n      };\n      const [tRes, pRes, uRes] = await Promise.all([fetch(`${API_BASE_URL}/tasks`, fetchOptions), fetch(`${API_BASE_URL}/projects`, fetchOptions), fetch(`${API_BASE_URL}/users`, fetchOptions)]);\n      if (!tRes.ok) throw new Error(`Task fetch failed: ${tRes.status} ${tRes.statusText}`);\n      if (!pRes.ok) throw new Error(`Project fetch failed: ${pRes.status} ${pRes.statusText}`);\n      if (!uRes.ok) throw new Error(`User fetch failed: ${uRes.status} ${uRes.statusText}`);\n      const tasksData = await tRes.json();\n      const projectsData = await pRes.json();\n      const usersData = await uRes.json();\n      console.log(\"DEBUG TaskTable (MarkAsDone/Undo): First Task Received:\", tasksData[0] || (tasksData === null || tasksData === void 0 ? void 0 : (_tasksData$data = tasksData.data) === null || _tasksData$data === void 0 ? void 0 : _tasksData$data[0])); // Check for created_at, completed_at\n\n      setTasks(Array.isArray(tasksData) ? tasksData : (_tasksData$data2 = tasksData === null || tasksData === void 0 ? void 0 : tasksData.data) !== null && _tasksData$data2 !== void 0 ? _tasksData$data2 : []);\n      setProjects((_projectsData$data = projectsData === null || projectsData === void 0 ? void 0 : projectsData.data) !== null && _projectsData$data !== void 0 ? _projectsData$data : Array.isArray(projectsData) ? projectsData : []);\n      setUsers((_usersData$data = usersData === null || usersData === void 0 ? void 0 : usersData.data) !== null && _usersData$data !== void 0 ? _usersData$data : Array.isArray(usersData) ? usersData : []);\n    } catch (e) {\n      console.error('TaskTable: Failed to fetch data:', e);\n      setError(`Failed to load data: ${e.message}.`);\n      setTasks([]);\n      setProjects([]);\n      setUsers([]); // Clear data on error\n    } finally {\n      setLoading(false);\n    }\n  }, [token]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  // --- Modal Handlers ---\n  const handleShowCreateModal = () => {\n    if (projects.length === 0 && !loading) {\n      setError('Cannot add tasks: No projects available.');\n      return;\n    }\n    if (projects.length > 0) {\n      var _projects$;\n      setIsEditing(false);\n      setCurrentTask(null);\n      setModalError(null);\n      setIsSubmitting(false);\n      setFormData({\n        project_id: ((_projects$ = projects[0]) === null || _projects$ === void 0 ? void 0 : _projects$.id) || '',\n        title: '',\n        description: '',\n        status: 'pending',\n        priority: 'medium',\n        assigned_user_id: '',\n        due_date: ''\n      });\n      setShowModal(true);\n    } else if (!loading) {\n      setError('No projects found to assign tasks to.');\n    }\n  };\n  const handleShowEditModal = task => {\n    setIsEditing(true);\n    setCurrentTask(task);\n    setModalError(null);\n    setIsSubmitting(false);\n    setFormData({\n      project_id: task.project_id,\n      title: task.title,\n      description: task.description || '',\n      status: task.status || 'pending',\n      priority: task.priority || 'medium',\n      assigned_user_id: task.assigned_user_id || '',\n      due_date: task.due_date ? task.due_date.split('T')[0] : ''\n    });\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    if (isSubmitting) return;\n    setShowModal(false);\n    setCurrentTask(null);\n    setModalError(null);\n    setIsEditing(false); // Reset editing mode on close\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // --- Form Submission ---\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setModalError(null);\n    // Validation...\n    if (!formData.title.trim()) {\n      setModalError('Task title cannot be empty.');\n      return;\n    }\n    if (!formData.project_id) {\n      setModalError('Please select a project.');\n      return;\n    }\n    if (formData.due_date && isNaN(Date.parse(formData.due_date))) {\n      setModalError('Invalid Due Date format.');\n      return;\n    }\n    setIsSubmitting(true);\n    const url = isEditing ? `${API_BASE_URL}/tasks/${currentTask.id}` : `${API_BASE_URL}/tasks`;\n    const method = isEditing ? 'PUT' : 'POST';\n    // Payload...\n    const payload = {\n      ...formData\n    };\n    payload.assigned_user_id = formData.assigned_user_id === '' || formData.assigned_user_id === null ? null : parseInt(formData.assigned_user_id, 10);\n    payload.project_id = parseInt(formData.project_id, 10);\n    if (!formData.due_date) delete payload.due_date;\n    payload.description = formData.description || '';\n    // Backend handles default status if creating\n\n    console.log('Payload sending:', JSON.stringify(payload, null, 2));\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: {/*...*/},\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        /* ... error handling ... */throw new Error(message);\n      }\n      fetchData();\n      handleCloseModal();\n    } catch (e) {\n      /* ... error handling ... */setModalError(`Failed to save task: ${e.message}`);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // --- Deletion Handler ---\n  const handleDelete = async taskId => {\n    if (!window.confirm('Are you sure you want to permanently delete this task?')) return;\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {/*...*/}\n      });\n      if (!response.ok && response.status !== 204) {\n        /* ... error handling ... */throw new Error(message);\n      }\n      fetchData();\n    } catch (e) {\n      /* ... error handling ... */setError(`Failed to delete task: ${e.message}`);\n    }\n  };\n\n  // --- REMOVED Time Log Modal Handlers ---\n  // const handleShowTimeLogModal = ...\n  // const handleCloseTimeLogModal = ...\n  // const handleTimeLogSaveSuccess = ...\n\n  // --- REMOVED Start/Stop Timer Handler ---\n  // const handleTimerAction = ...\n\n  // --- ADDED Mark as Complete Handler ---\n  const handleMarkAsComplete = async taskId => {\n    setMarkingDoneTaskId(taskId); // Show spinner on button\n    setError(null);\n    const url = `${API_BASE_URL}/tasks/${taskId}/complete`; // Use the complete endpoint\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        // Use POST as defined in api.php\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        let message = `HTTP error ${response.status}`;\n        try {\n          const err = await response.json();\n          message = err.message || message;\n        } catch (e) {}\n        throw new Error(message);\n      }\n      fetchData(); // Refresh data to show updated status and completed_at\n    } catch (e) {\n      console.error(`Failed to mark task ${taskId} complete:`, e);\n      setError(`Failed to complete task: ${e.message}`); // Show general error\n    } finally {\n      setMarkingDoneTaskId(null); // Hide spinner regardless of success/fail\n    }\n  };\n\n  // --- ADDED Undo Complete Handler ---\n  const handleUndoComplete = async taskId => {\n    setUndoingTaskId(taskId); // Use separate loading state\n    setError(null);\n    const url = `${API_BASE_URL}/tasks/${taskId}/undo-complete`; // New endpoint\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        let message = `HTTP error ${response.status}`;\n        try {\n          const err = await response.json();\n          message = err.message || message;\n        } catch (e) {}\n        throw new Error(message);\n      }\n      fetchData(); // Refresh data to show reverted status\n    } catch (e) {\n      console.error(`Failed to undo task ${taskId}:`, e);\n      setError(`Failed to undo task completion: ${e.message}`);\n    } finally {\n      setUndoingTaskId(null); // Clear undo loading state\n    }\n  };\n  // --- END ADDED Handlers ---\n\n  // --- Render Logic ---\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center align-items-center text-light vh-100\",\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      className: \"me-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 109\n    }, this), \" Loading...\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 25\n  }, this);\n  if (error && !showModal) return /*#__PURE__*/_jsxDEV(Alert, {\n    variant: \"danger\",\n    className: \"bg-dark text-light border-danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 37\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-md-4\",\n    style: {\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #232323, #1a1a1a)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark p-4 rounded shadow mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3 flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-light mb-2 mb-md-0\",\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleShowCreateModal,\n          disabled: projects.length === 0 && !loading,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-plus-lg me-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), \" Create New Task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), error && !showModal && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        className: \"bg-dark text-light border-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 34\n      }, this), projects.length === 0 && !loading && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"warning\",\n        className: \"bg-dark text-warning border-warning\",\n        children: \"Create a project before adding tasks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 48\n      }, this), tasks.length === 0 && projects.length > 0 && !loading && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"info\",\n        className: \"bg-dark text-info border-info mt-3\",\n        children: \"No tasks found. Click 'Create New Task' to add one.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 68\n      }, this), tasks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          variant: \"dark\",\n          striped: true,\n          hover: true,\n          responsive: \"sm\",\n          className: \"align-middle\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 64\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 81\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Assignee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 98\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-end\",\n                children: \"Created\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-end\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tasks.map(task => {\n              var _task$project, _task$assigned_user;\n              const isCompleted = task.status === 'completed';\n              // Use separate loading states\n              const isLoadingComplete = markingDoneTaskId === task.id;\n              const isLoadingUndo = undoingTaskId === task.id;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"fw-bold\",\n                  children: task.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ((_task$project = task.project) === null || _task$project === void 0 ? void 0 : _task$project.name) || /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-muted\",\n                    children: \"N/A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 52\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Badge, {\n                    bg: getTaskStatusColor(task.status),\n                    className: \"text-capitalize p-2\",\n                    children: task.status || 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Badge, {\n                    bg: getTaskPriorityColor(task.priority),\n                    className: \"text-capitalize p-2\",\n                    children: task.priority || 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.due_date ? new Date(task.due_date).toLocaleDateString() : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-muted\",\n                    children: \"N/A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 93\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ((_task$assigned_user = task.assigned_user) === null || _task$assigned_user === void 0 ? void 0 : _task$assigned_user.name) || /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-muted\",\n                    children: \"Unassigned\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 58\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-end\",\n                  children: formatDate(task.created_at)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-end\",\n                  children: formatDate(task.completed_at)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-center\",\n                  children: [!isCompleted ?\n                  /*#__PURE__*/\n                  // Show \"Done\" if not completed\n                  _jsxDEV(Button, {\n                    variant: \"outline-success\",\n                    size: \"sm\",\n                    onClick: () => handleMarkAsComplete(task.id),\n                    className: \"me-2 py-1 px-2\",\n                    title: \"Mark Task as Done\",\n                    disabled: isLoadingComplete || isLoadingUndo // Disable if any action loading\n                    ,\n                    children: isLoadingComplete ? /*#__PURE__*/_jsxDEV(Spinner, {\n                      as: \"span\",\n                      animation: \"border\",\n                      size: \"sm\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 57\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-check2-circle me-1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 308,\n                        columnNumber: 112\n                      }, this), \" Done\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 32\n                  }, this) :\n                  /*#__PURE__*/\n                  // Show \"Undo\" if completed\n                  _jsxDEV(Button, {\n                    variant: \"outline-warning\" // Different color for Undo\n                    ,\n                    size: \"sm\",\n                    onClick: () => handleUndoComplete(task.id) // Call undo handler\n                    ,\n                    className: \"me-2 py-1 px-2\",\n                    title: \"Undo Completion\",\n                    disabled: isLoadingComplete || isLoadingUndo // Disable if any action loading\n                    ,\n                    children: isLoadingUndo ? /*#__PURE__*/_jsxDEV(Spinner, {\n                      as: \"span\",\n                      animation: \"border\",\n                      size: \"sm\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 53\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-arrow-counterclockwise me-1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 319,\n                        columnNumber: 108\n                      }, this), \" Undo\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 32\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-light\",\n                    size: \"sm\",\n                    onClick: () => handleShowEditModal(task),\n                    className: \"me-2 py-1 px-2\",\n                    title: \"Edit Task\",\n                    disabled: isLoadingComplete || isLoadingUndo,\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-pencil-fill me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 203\n                    }, this), \" Edit\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 28\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-danger\",\n                    size: \"sm\",\n                    onClick: () => handleDelete(task.id),\n                    title: \"Delete Task\",\n                    className: \"py-1 px-2\",\n                    disabled: isLoadingComplete || isLoadingUndo,\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-trash-fill me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 197\n                    }, this), \" Delete\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 28\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 25\n                }, this)]\n              }, task.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      backdrop: \"static\",\n      keyboard: false,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: !isSubmitting,\n        closeVariant: \"white\",\n        className: \"bg-dark border-secondary\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          className: \"text-light\",\n          children: isEditing ? 'Edit Task' : 'Create New Task'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          className: \"bg-dark text-light\",\n          children: [modalError && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            className: \"bg-dark text-light border-danger\",\n            onClose: () => setModalError(null),\n            dismissible: true,\n            children: modalError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"taskProjectId\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Project \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"project_id\",\n              value: formData.project_id,\n              onChange: handleInputChange,\n              required: true,\n              className: \"bg-secondary text-white border-secondary focus-ring focus-ring-primary\",\n              disabled: isSubmitting || isEditing,\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: formData.project_id !== '',\n                children: \"-- Select a project --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 22\n              }, this), projects.map(proj => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: proj.id,\n                children: proj.name\n              }, proj.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"taskTitle\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Title \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"title\",\n              value: formData.title,\n              onChange: handleInputChange,\n              required: true,\n              placeholder: \"Enter task title\",\n              className: \"bg-secondary text-white border-secondary focus-ring focus-ring-primary\",\n              disabled: isSubmitting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"taskDescription\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              name: \"description\",\n              rows: 3,\n              value: formData.description,\n              onChange: handleInputChange,\n              placeholder: \"Enter task description (optional)\",\n              className: \"bg-secondary text-white border-secondary\",\n              disabled: isSubmitting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-3\",\n            children: [isEditing && /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"taskStatus\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 30\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  name: \"status\",\n                  value: formData.status,\n                  onChange: handleInputChange,\n                  className: \"bg-secondary text-white border-secondary\",\n                  disabled: isSubmitting,\n                  children: taskStatuses.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: s,\n                    className: \"text-capitalize\",\n                    children: s\n                  }, s, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 58\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: isEditing ? 6 : 12,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"taskPriority\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Priority\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 26\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  name: \"priority\",\n                  value: formData.priority,\n                  onChange: handleInputChange,\n                  className: \"bg-secondary text-white border-secondary\",\n                  disabled: isSubmitting,\n                  children: taskPriorities.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: p,\n                    className: \"text-capitalize\",\n                    children: p\n                  }, p, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 56\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 26\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"taskDueDate\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Due Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 66\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  name: \"due_date\",\n                  value: formData.due_date,\n                  onChange: handleInputChange,\n                  className: \"bg-secondary text-white border-secondary\",\n                  disabled: isSubmitting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 99\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 30\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"taskAssignee\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Assignee\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 67\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  name: \"assigned_user_id\",\n                  value: formData.assigned_user_id || '',\n                  onChange: handleInputChange,\n                  className: \"bg-secondary text-white border-secondary\",\n                  disabled: isSubmitting,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"-- Unassigned --\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 283\n                  }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: user.id,\n                    children: user.name\n                  }, user.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 344\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 100\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 30\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          className: \"bg-dark border-secondary\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleCloseModal,\n            disabled: isSubmitting,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: isSubmitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                as: \"span\",\n                animation: \"border\",\n                size: \"sm\",\n                role: \"status\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 35\n              }, this), \" Saving...\"]\n            }, void 0, true) : isEditing ? 'Save Changes' : 'Create Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskTable, \"uADwCP7FbS/EKLDs175YDSkFGgc=\", false, function () {\n  return [useAuth];\n});\n_c = TaskTable;\nexport default TaskTable;\nvar _c;\n$RefreshReg$(_c, \"TaskTable\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useAuth","API_BASE_URL","Modal","Button","Form","Badge","Table","Spinner","Alert","Row","Col","formatDate","jsxDEV","_jsxDEV","Fragment","_Fragment","getTaskStatusColor","status","toLowerCase","getTaskPriorityColor","priority","TaskTable","_s","token","tasks","setTasks","projects","setProjects","users","setUsers","loading","setLoading","error","setError","modalError","setModalError","showModal","setShowModal","isEditing","setIsEditing","currentTask","setCurrentTask","formData","setFormData","project_id","title","description","assigned_user_id","due_date","isSubmitting","setIsSubmitting","markingDoneTaskId","setMarkingDoneTaskId","undoingTaskId","setUndoingTaskId","taskStatuses","taskPriorities","fetchData","_tasksData$data","_tasksData$data2","_projectsData$data","_usersData$data","fetchOptions","headers","tRes","pRes","uRes","Promise","all","fetch","ok","Error","statusText","tasksData","json","projectsData","usersData","console","log","data","Array","isArray","e","message","handleShowCreateModal","length","_projects$","id","handleShowEditModal","task","split","handleCloseModal","handleInputChange","name","value","target","prev","handleSubmit","preventDefault","trim","isNaN","Date","parse","url","method","payload","parseInt","JSON","stringify","response","body","handleDelete","taskId","window","confirm","handleMarkAsComplete","Authorization","Accept","err","handleUndoComplete","className","children","animation","fileName","_jsxFileName","lineNumber","columnNumber","variant","style","minHeight","background","onClick","disabled","striped","hover","responsive","map","_task$project","_task$assigned_user","isCompleted","isLoadingComplete","isLoadingUndo","project","bg","toLocaleDateString","assigned_user","created_at","completed_at","size","as","show","onHide","backdrop","keyboard","centered","Header","closeButton","closeVariant","Title","onSubmit","Body","onClose","dismissible","Group","controlId","Label","Select","onChange","required","proj","Control","type","placeholder","rows","md","s","p","user","Footer","role","_c","$RefreshReg$"],"sources":["D:/Harvy/Dev/ProjectManagementSystem/frontend/src/components/Dashboard/TasksTable.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { API_BASE_URL } from '../../App';\r\n// Ensure Row and Col are imported\r\nimport { Modal, Button, Form, Badge, Table, Spinner, Alert, Row, Col } from 'react-bootstrap';\r\n// --- UPDATED Import: Only need formatDate ---\r\nimport { formatDate } from '../../utils/formatting'; // Adjust path if needed.\r\n// --- REMOVED Imports ---\r\n// import { formatCurrency, formatDuration } from '../../utils/formatting';\r\n// import TimeLogForm from './TimeLogForm';\r\n// --- END REMOVAL ---\r\n\r\n\r\n// Helper functions (define outside or import)\r\nconst getTaskStatusColor = (status) => {\r\n  switch (status?.toLowerCase()) {\r\n    case 'pending': return 'secondary';\r\n    case 'in progress': return 'info';\r\n    case 'completed': return 'success';\r\n    default: return 'light';\r\n  }\r\n};\r\n\r\nconst getTaskPriorityColor = (priority) => {\r\n  switch (priority) {\r\n    case 'low': return 'success';\r\n    case 'medium': return 'warning';\r\n    case 'high': return 'danger';\r\n    default: return 'light';\r\n  }\r\n};\r\n\r\n\r\nfunction TaskTable() {\r\n  const { token } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null); // For general fetch/delete errors\r\n  const [modalError, setModalError] = useState(null); // Separate state for modal errors\r\n\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false); // Flag to control form mode\r\n  const [currentTask, setCurrentTask] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    project_id: '',\r\n    title: '',\r\n    description: '',\r\n    status: 'pending',\r\n    priority: 'medium',\r\n    assigned_user_id: '', // Use empty string for select default\r\n    due_date: '',\r\n    // REMOVED actual_cost state\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // --- REMOVED Time Log Modal State ---\r\n  // const [showTimeLogModal, setShowTimeLogModal] = useState(false);\r\n  // const [selectedTaskForLog, setSelectedTaskForLog] = useState(null);\r\n  // --- END REMOVAL ---\r\n\r\n  // --- REMOVED Start/Stop Timer Loading State ---\r\n  // const [timerLoadingTaskId, setTimerLoadingTaskId] = useState(null);\r\n\r\n  // --- ADDED State for Mark/Undo Button Loading ---\r\n  const [markingDoneTaskId, setMarkingDoneTaskId] = useState(null);\r\n  const [undoingTaskId, setUndoingTaskId] = useState(null);\r\n  // --- END ADDED State ---\r\n\r\n  // --- Arrays are USED below ---\r\n  const taskStatuses = ['pending', 'in progress', 'completed'];\r\n  const taskPriorities = ['low', 'medium', 'high'];\r\n  // ---\r\n\r\n  // --- Data Fetching ---\r\n  // Ensure backend sends created_at and completed_at\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true); setError(null);\r\n    try {\r\n        const fetchOptions = { headers: { 'Authorization': `Bearer ${token}`, 'Accept': 'application/json' } };\r\n        const [tRes, pRes, uRes] = await Promise.all([\r\n            fetch(`${API_BASE_URL}/tasks`, fetchOptions),\r\n            fetch(`${API_BASE_URL}/projects`, fetchOptions),\r\n            fetch(`${API_BASE_URL}/users`, fetchOptions),\r\n        ]);\r\n\r\n        if (!tRes.ok) throw new Error(`Task fetch failed: ${tRes.status} ${tRes.statusText}`);\r\n        if (!pRes.ok) throw new Error(`Project fetch failed: ${pRes.status} ${pRes.statusText}`);\r\n        if (!uRes.ok) throw new Error(`User fetch failed: ${uRes.status} ${uRes.statusText}`);\r\n\r\n        const tasksData = await tRes.json();\r\n        const projectsData = await pRes.json();\r\n        const usersData = await uRes.json();\r\n\r\n        console.log(\"DEBUG TaskTable (MarkAsDone/Undo): First Task Received:\", tasksData[0] || tasksData?.data?.[0]); // Check for created_at, completed_at\r\n\r\n        setTasks(Array.isArray(tasksData) ? tasksData : (tasksData?.data ?? []));\r\n        setProjects(projectsData?.data ?? (Array.isArray(projectsData) ? projectsData : []));\r\n        setUsers(usersData?.data ?? (Array.isArray(usersData) ? usersData : []));\r\n\r\n    } catch (e) {\r\n        console.error('TaskTable: Failed to fetch data:', e);\r\n        setError(`Failed to load data: ${e.message}.`);\r\n        setTasks([]); setProjects([]); setUsers([]); // Clear data on error\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => { fetchData(); }, [fetchData]);\r\n\r\n  // --- Modal Handlers ---\r\n  const handleShowCreateModal = () => {\r\n      if (projects.length === 0 && !loading) { setError('Cannot add tasks: No projects available.'); return; }\r\n      if (projects.length > 0) {\r\n          setIsEditing(false); setCurrentTask(null); setModalError(null); setIsSubmitting(false);\r\n          setFormData({\r\n              project_id: projects[0]?.id || '', title: '', description: '', status: 'pending',\r\n              priority: 'medium', assigned_user_id: '', due_date: '',\r\n          });\r\n          setShowModal(true);\r\n      } else if (!loading) { setError('No projects found to assign tasks to.'); }\r\n  };\r\n  const handleShowEditModal = (task) => {\r\n      setIsEditing(true); setCurrentTask(task); setModalError(null); setIsSubmitting(false);\r\n      setFormData({\r\n          project_id: task.project_id, title: task.title, description: task.description || '',\r\n          status: task.status || 'pending', priority: task.priority || 'medium',\r\n          assigned_user_id: task.assigned_user_id || '',\r\n          due_date: task.due_date ? task.due_date.split('T')[0] : '',\r\n      });\r\n      setShowModal(true);\r\n  };\r\n  const handleCloseModal = () => {\r\n      if (isSubmitting) return;\r\n      setShowModal(false); setCurrentTask(null); setModalError(null);\r\n      setIsEditing(false); // Reset editing mode on close\r\n  };\r\n  const handleInputChange = (e) => {\r\n      const { name, value } = e.target;\r\n      setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // --- Form Submission ---\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); setModalError(null);\r\n    // Validation...\r\n    if (!formData.title.trim()) { setModalError('Task title cannot be empty.'); return; }\r\n    if (!formData.project_id) { setModalError('Please select a project.'); return; }\r\n    if (formData.due_date && isNaN(Date.parse(formData.due_date))) { setModalError('Invalid Due Date format.'); return; }\r\n\r\n    setIsSubmitting(true);\r\n    const url = isEditing ? `${API_BASE_URL}/tasks/${currentTask.id}` : `${API_BASE_URL}/tasks`;\r\n    const method = isEditing ? 'PUT' : 'POST';\r\n    // Payload...\r\n    const payload = { ...formData };\r\n    payload.assigned_user_id = formData.assigned_user_id === '' || formData.assigned_user_id === null ? null : parseInt(formData.assigned_user_id, 10);\r\n    payload.project_id = parseInt(formData.project_id, 10);\r\n    if (!formData.due_date) delete payload.due_date;\r\n    payload.description = formData.description || '';\r\n    // Backend handles default status if creating\r\n\r\n    console.log('Payload sending:', JSON.stringify(payload, null, 2));\r\n    try {\r\n      const response = await fetch(url, { method, headers: { /*...*/ }, body: JSON.stringify(payload) });\r\n      if (!response.ok) { /* ... error handling ... */ throw new Error(message); }\r\n      fetchData(); handleCloseModal();\r\n    } catch (e) { /* ... error handling ... */ setModalError(`Failed to save task: ${e.message}`); }\r\n    finally { setIsSubmitting(false); }\r\n  };\r\n\r\n  // --- Deletion Handler ---\r\n  const handleDelete = async (taskId) => {\r\n      if (!window.confirm('Are you sure you want to permanently delete this task?')) return;\r\n      setError(null);\r\n      try {\r\n          const response = await fetch(`${API_BASE_URL}/tasks/${taskId}`, { method: 'DELETE', headers: { /*...*/ } });\r\n          if (!response.ok && response.status !== 204) { /* ... error handling ... */ throw new Error(message); }\r\n          fetchData();\r\n      } catch (e) { /* ... error handling ... */ setError(`Failed to delete task: ${e.message}`); }\r\n  };\r\n\r\n  // --- REMOVED Time Log Modal Handlers ---\r\n  // const handleShowTimeLogModal = ...\r\n  // const handleCloseTimeLogModal = ...\r\n  // const handleTimeLogSaveSuccess = ...\r\n\r\n  // --- REMOVED Start/Stop Timer Handler ---\r\n  // const handleTimerAction = ...\r\n\r\n  // --- ADDED Mark as Complete Handler ---\r\n  const handleMarkAsComplete = async (taskId) => {\r\n      setMarkingDoneTaskId(taskId); // Show spinner on button\r\n      setError(null);\r\n      const url = `${API_BASE_URL}/tasks/${taskId}/complete`; // Use the complete endpoint\r\n      try {\r\n          const response = await fetch(url, {\r\n              method: 'POST', // Use POST as defined in api.php\r\n              headers: { Authorization: `Bearer ${token}`, Accept: 'application/json', 'Content-Type': 'application/json' },\r\n          });\r\n          if (!response.ok) {\r\n               let message = `HTTP error ${response.status}`;\r\n               try{ const err = await response.json(); message = err.message || message; } catch(e){}\r\n               throw new Error(message);\r\n          }\r\n          fetchData(); // Refresh data to show updated status and completed_at\r\n      } catch (e) {\r\n          console.error(`Failed to mark task ${taskId} complete:`, e);\r\n          setError(`Failed to complete task: ${e.message}`); // Show general error\r\n      } finally {\r\n          setMarkingDoneTaskId(null); // Hide spinner regardless of success/fail\r\n      }\r\n  };\r\n\r\n  // --- ADDED Undo Complete Handler ---\r\n  const handleUndoComplete = async (taskId) => {\r\n      setUndoingTaskId(taskId); // Use separate loading state\r\n      setError(null);\r\n      const url = `${API_BASE_URL}/tasks/${taskId}/undo-complete`; // New endpoint\r\n      try {\r\n          const response = await fetch(url, {\r\n              method: 'POST',\r\n              headers: { Authorization: `Bearer ${token}`, Accept: 'application/json', 'Content-Type': 'application/json' },\r\n          });\r\n          if (!response.ok) {\r\n               let message = `HTTP error ${response.status}`;\r\n               try{ const err = await response.json(); message = err.message || message; } catch(e){}\r\n               throw new Error(message);\r\n          }\r\n          fetchData(); // Refresh data to show reverted status\r\n      } catch (e) {\r\n          console.error(`Failed to undo task ${taskId}:`, e);\r\n          setError(`Failed to undo task completion: ${e.message}`);\r\n      } finally {\r\n          setUndoingTaskId(null); // Clear undo loading state\r\n      }\r\n  };\r\n  // --- END ADDED Handlers ---\r\n\r\n\r\n  // --- Render Logic ---\r\n  if (loading) return ( <div className=\"d-flex justify-content-center align-items-center text-light vh-100\"><Spinner animation=\"border\" className=\"me-2\"/> Loading...</div> );\r\n  if (error && !showModal) return ( <Alert variant=\"danger\" className=\"bg-dark text-light border-danger\">{error}</Alert> );\r\n\r\n  return (\r\n    <div className=\"p-md-4\" style={{ minHeight: '100vh', background: 'linear-gradient(135deg, #232323, #1a1a1a)' }}>\r\n      <div className=\"bg-dark p-4 rounded shadow mb-4\">\r\n        {/* Header and Create Button */}\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3 flex-wrap\">\r\n          <h2 className=\"text-light mb-2 mb-md-0\">Tasks</h2>\r\n          <Button variant=\"primary\" onClick={handleShowCreateModal} disabled={projects.length === 0 && !loading}>\r\n            <i className=\"bi bi-plus-lg me-1\"></i> Create New Task\r\n          </Button>\r\n        </div>\r\n\r\n         {/* Display Errors/Info Messages */}\r\n         {error && !showModal && <Alert variant=\"danger\" className=\"bg-dark text-light border-danger\">{error}</Alert>}\r\n         {projects.length === 0 && !loading && <Alert variant=\"warning\" className=\"bg-dark text-warning border-warning\">Create a project before adding tasks.</Alert>}\r\n         {tasks.length === 0 && projects.length > 0 && !loading && <Alert variant=\"info\" className=\"bg-dark text-info border-info mt-3\">No tasks found. Click 'Create New Task' to add one.</Alert>}\r\n\r\n        {/* Task Table */}\r\n        {tasks.length > 0 && (\r\n          <div className=\"table-responsive\">\r\n            <Table variant=\"dark\" striped hover responsive=\"sm\" className=\"align-middle\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Title</th><th>Project</th><th>Status</th><th>Priority</th><th>Due Date</th><th>Assignee</th>\r\n                  {/* --- UPDATED Columns --- */}\r\n                  <th className=\"text-end\">Created</th>\r\n                  <th className=\"text-end\">Completed</th>\r\n                  {/* Duration Removed */}\r\n                  <th className=\"text-center\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tasks.map(task => {\r\n                  const isCompleted = task.status === 'completed';\r\n                  // Use separate loading states\r\n                  const isLoadingComplete = markingDoneTaskId === task.id;\r\n                  const isLoadingUndo = undoingTaskId === task.id;\r\n\r\n                  return (\r\n                      <tr key={task.id}>\r\n                        <td className=\"fw-bold\">{task.title}</td>\r\n                        <td>{task.project?.name || <span className=\"text-muted\">N/A</span>}</td>\r\n                        <td><Badge bg={getTaskStatusColor(task.status)} className=\"text-capitalize p-2\">{task.status || 'N/A'}</Badge></td>\r\n                        <td><Badge bg={getTaskPriorityColor(task.priority)} className=\"text-capitalize p-2\">{task.priority || 'N/A'}</Badge></td>\r\n                        <td>{task.due_date ? new Date(task.due_date).toLocaleDateString() : <span className=\"text-muted\">N/A</span>}</td>\r\n                        <td>{task.assigned_user?.name || <span className=\"text-muted\">Unassigned</span>}</td>\r\n                        {/* --- UPDATED Cells --- */}\r\n                        <td className=\"text-end\">{formatDate(task.created_at)}</td> {/* Display creation time */}\r\n                        <td className=\"text-end\">{formatDate(task.completed_at)}</td> {/* Display completion time */}\r\n                        {/* Duration Removed */}\r\n                        {/* --- END Updates --- */}\r\n                        <td className=\"text-center\">\r\n                           {/* --- Conditional \"Mark as Done\" / \"Undo\" Button --- */}\r\n                           {!isCompleted ? ( // Show \"Done\" if not completed\r\n                               <Button\r\n                                   variant=\"outline-success\"\r\n                                   size=\"sm\"\r\n                                   onClick={() => handleMarkAsComplete(task.id)}\r\n                                   className=\"me-2 py-1 px-2\"\r\n                                   title=\"Mark Task as Done\"\r\n                                   disabled={isLoadingComplete || isLoadingUndo} // Disable if any action loading\r\n                                >\r\n                                   {isLoadingComplete ? <Spinner as=\"span\" animation=\"border\" size=\"sm\" /> : <><i className=\"bi bi-check2-circle me-1\"></i> Done</>}\r\n                               </Button>\r\n                           ) : ( // Show \"Undo\" if completed\r\n                               <Button\r\n                                   variant=\"outline-warning\" // Different color for Undo\r\n                                   size=\"sm\"\r\n                                   onClick={() => handleUndoComplete(task.id)} // Call undo handler\r\n                                   className=\"me-2 py-1 px-2\"\r\n                                   title=\"Undo Completion\"\r\n                                   disabled={isLoadingComplete || isLoadingUndo} // Disable if any action loading\r\n                                >\r\n                                   {isLoadingUndo ? <Spinner as=\"span\" animation=\"border\" size=\"sm\" /> : <><i className=\"bi bi-arrow-counterclockwise me-1\"></i> Undo</>}\r\n                               </Button>\r\n                           )}\r\n                           {/* --- End Conditional Button --- */}\r\n\r\n                           {/* Edit Button */}\r\n                           <Button variant=\"outline-light\" size=\"sm\" onClick={() => handleShowEditModal(task)} className=\"me-2 py-1 px-2\" title=\"Edit Task\" disabled={isLoadingComplete || isLoadingUndo}><i className=\"bi bi-pencil-fill me-1\"></i> Edit</Button>\r\n                           {/* Delete Button */}\r\n                           <Button variant=\"outline-danger\" size=\"sm\" onClick={() => handleDelete(task.id)} title=\"Delete Task\" className=\"py-1 px-2\" disabled={isLoadingComplete || isLoadingUndo}><i className=\"bi bi-trash-fill me-1\"></i> Delete</Button>\r\n                        </td>\r\n                      </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* --- Task Edit/Create Modal --- */}\r\n      <Modal show={showModal} onHide={handleCloseModal} backdrop=\"static\" keyboard={false} centered>\r\n        <Modal.Header closeButton={!isSubmitting} closeVariant=\"white\" className=\"bg-dark border-secondary\">\r\n          <Modal.Title className=\"text-light\">{isEditing ? 'Edit Task' : 'Create New Task'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Modal.Body className=\"bg-dark text-light\">\r\n             {modalError && <Alert variant=\"danger\" className=\"bg-dark text-light border-danger\" onClose={() => setModalError(null)} dismissible>{modalError}</Alert>}\r\n\r\n             {/* Project Select */}\r\n             <Form.Group className=\"mb-3\" controlId=\"taskProjectId\">\r\n                 <Form.Label>Project <span className=\"text-danger\">*</span></Form.Label>\r\n                 <Form.Select name=\"project_id\" value={formData.project_id} onChange={handleInputChange} required className=\"bg-secondary text-white border-secondary focus-ring focus-ring-primary\" disabled={isSubmitting || isEditing}> {/* Optionally disable project change on edit */}\r\n                     <option value=\"\" disabled={formData.project_id !== ''}>-- Select a project --</option>\r\n                     {projects.map(proj => (<option key={proj.id} value={proj.id}>{proj.name}</option>))}\r\n                 </Form.Select>\r\n             </Form.Group>\r\n             {/* Title Input */}\r\n             <Form.Group className=\"mb-3\" controlId=\"taskTitle\">\r\n                 <Form.Label>Title <span className=\"text-danger\">*</span></Form.Label>\r\n                 <Form.Control type=\"text\" name=\"title\" value={formData.title} onChange={handleInputChange} required placeholder=\"Enter task title\" className=\"bg-secondary text-white border-secondary focus-ring focus-ring-primary\" disabled={isSubmitting}/>\r\n             </Form.Group>\r\n             {/* Description Textarea */}\r\n             <Form.Group className=\"mb-3\" controlId=\"taskDescription\">\r\n                 <Form.Label>Description</Form.Label>\r\n                 <Form.Control as=\"textarea\" name=\"description\" rows={3} value={formData.description} onChange={handleInputChange} placeholder=\"Enter task description (optional)\" className=\"bg-secondary text-white border-secondary\" disabled={isSubmitting}/>\r\n             </Form.Group>\r\n             {/* Status (Conditional) & Priority Row */}\r\n             <Row className=\"mb-3\">\r\n                 {isEditing && (\r\n                     <Col md={6}>\r\n                         <Form.Group controlId=\"taskStatus\">\r\n                             <Form.Label>Status</Form.Label>\r\n                             <Form.Select name=\"status\" value={formData.status} onChange={handleInputChange} className=\"bg-secondary text-white border-secondary\" disabled={isSubmitting}>\r\n                                 {taskStatuses.map(s => (<option key={s} value={s} className=\"text-capitalize\">{s}</option>))}\r\n                             </Form.Select>\r\n                         </Form.Group>\r\n                     </Col>\r\n                 )}\r\n                 <Col md={isEditing ? 6 : 12}>\r\n                     <Form.Group controlId=\"taskPriority\">\r\n                         <Form.Label>Priority</Form.Label>\r\n                         <Form.Select name=\"priority\" value={formData.priority} onChange={handleInputChange} className=\"bg-secondary text-white border-secondary\" disabled={isSubmitting}>\r\n                             {taskPriorities.map(p => (<option key={p} value={p} className=\"text-capitalize\">{p}</option>))}\r\n                         </Form.Select>\r\n                     </Form.Group>\r\n                 </Col>\r\n             </Row>\r\n             {/* Due Date & Assignee Row */}\r\n             <Row className=\"mb-3\">\r\n                 <Col md={6}><Form.Group controlId=\"taskDueDate\"><Form.Label>Due Date</Form.Label><Form.Control type=\"date\" name=\"due_date\" value={formData.due_date} onChange={handleInputChange} className=\"bg-secondary text-white border-secondary\" disabled={isSubmitting}/></Form.Group></Col>\r\n                 <Col md={6}><Form.Group controlId=\"taskAssignee\"><Form.Label>Assignee</Form.Label><Form.Select name=\"assigned_user_id\" value={formData.assigned_user_id || ''} onChange={handleInputChange} className=\"bg-secondary text-white border-secondary\" disabled={isSubmitting}><option value=\"\">-- Unassigned --</option>{users.map(user => <option key={user.id} value={user.id}>{user.name}</option>)}</Form.Select></Form.Group></Col>\r\n             </Row>\r\n             {/* No Actual Cost Field */}\r\n          </Modal.Body>\r\n          <Modal.Footer className=\"bg-dark border-secondary\">\r\n            <Button variant=\"secondary\" onClick={handleCloseModal} disabled={isSubmitting}>Cancel</Button>\r\n            <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\r\n               {isSubmitting ? (<><Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/> Saving...</>) : (isEditing ? 'Save Changes' : 'Create Task')}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n      {/* --- End Task Edit/Create Modal --- */}\r\n\r\n      {/* Time Log Modal REMOVED */}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}