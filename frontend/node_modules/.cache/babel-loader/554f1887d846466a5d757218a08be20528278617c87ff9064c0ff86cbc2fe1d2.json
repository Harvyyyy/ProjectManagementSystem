{"ast":null,"code":"var _jsxFileName = \"D:\\\\Harvy\\\\Dev\\\\ProjectManagementSystem\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\TasksTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../../context/AuthContext';\nimport { API_BASE_URL } from '../../App';\nimport { Modal, Button, Form, Badge, Table, Spinner, Alert, Row, Col } from 'react-bootstrap';\n// --- Using only formatDate ---\nimport { formatDate } from '../../utils/formatting'; // Adjust path if needed\n\n// Helper functions\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTaskStatusColor = status => {\n  switch (status === null || status === void 0 ? void 0 : status.toLowerCase()) {\n    case 'pending':\n      return 'secondary';\n    case 'in progress':\n      return 'info';\n    case 'completed':\n      return 'success';\n    default:\n      return 'light';\n  }\n};\nconst getTaskPriorityColor = priority => {\n  switch (priority) {\n    case 'low':\n      return 'success';\n    case 'medium':\n      return 'warning';\n    case 'high':\n      return 'danger';\n    default:\n      return 'light';\n  }\n};\nfunction TaskTable() {\n  _s();\n  const {\n    token\n  } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null); // For general fetch/delete/complete/undo errors\n  const [modalError, setModalError] = useState(null); // Separate state for modal errors\n\n  // State for Edit/Create Task Modal\n  const [showModal, setShowModal] = useState(false);\n  const [isEditing, setIsEditing] = useState(false); // Controls modal mode and conditional fields\n  const [currentTask, setCurrentTask] = useState(null);\n  // formData no longer includes actual_cost\n  const [formData, setFormData] = useState({\n    project_id: '',\n    title: '',\n    description: '',\n    status: 'pending',\n    priority: 'medium',\n    assigned_user_id: '',\n    due_date: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false); // For modal submit button\n\n  // Loading states for row actions\n  const [markingDoneTaskId, setMarkingDoneTaskId] = useState(null);\n  const [undoingTaskId, setUndoingTaskId] = useState(null);\n  const taskStatuses = ['pending', 'in progress', 'completed'];\n  const taskPriorities = ['low', 'medium', 'high'];\n\n  // Data Fetching (Ensure API loads created_at and completed_at)\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      var _tasksDataParsed, _tasksDataParsed$data, _tasksDataParsed$data2, _tasksDataParsed2, _projectsDataParsed$d, _projectsDataParsed, _usersDataParsed$data, _usersDataParsed;\n      const fetchOptions = {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Accept': 'application/json'\n        }\n      };\n      const [tRes, pRes, uRes] = await Promise.all([fetch(`${API_BASE_URL}/tasks`, fetchOptions), fetch(`${API_BASE_URL}/projects`, fetchOptions), fetch(`${API_BASE_URL}/users`, fetchOptions)]);\n      if (!tRes.ok) throw new Error(`Task fetch failed: ${tRes.status} ${tRes.statusText}`);\n      if (!pRes.ok) throw new Error(`Project fetch failed: ${pRes.status} ${pRes.statusText}`);\n      if (!uRes.ok) throw new Error(`User fetch failed: ${uRes.status} ${uRes.statusText}`);\n\n      // Safely parse JSON, provide defaults\n      let tasksDataParsed = [];\n      let projectsDataParsed = {\n        data: []\n      };\n      let usersDataParsed = [];\n      try {\n        const tasksText = await tRes.text();\n        if (tasksText) tasksDataParsed = JSON.parse(tasksText);\n      } catch (e) {\n        console.error(\"Error parsing tasks JSON:\", e);\n      }\n      try {\n        const projectsText = await pRes.text();\n        if (projectsText) projectsDataParsed = JSON.parse(projectsText);\n      } catch (e) {\n        console.error(\"Error parsing projects JSON:\", e);\n      }\n      try {\n        const usersText = await uRes.text();\n        if (usersText) usersDataParsed = JSON.parse(usersText);\n      } catch (e) {\n        console.error(\"Error parsing users JSON:\", e);\n      }\n      console.log(\"DEBUG TaskTable (MarkAsDone/Undo): First Task Received:\", tasksDataParsed[0] || ((_tasksDataParsed = tasksDataParsed) === null || _tasksDataParsed === void 0 ? void 0 : (_tasksDataParsed$data = _tasksDataParsed.data) === null || _tasksDataParsed$data === void 0 ? void 0 : _tasksDataParsed$data[0])); // Check for created_at, completed_at\n\n      setTasks(Array.isArray(tasksDataParsed) ? tasksDataParsed : (_tasksDataParsed$data2 = (_tasksDataParsed2 = tasksDataParsed) === null || _tasksDataParsed2 === void 0 ? void 0 : _tasksDataParsed2.data) !== null && _tasksDataParsed$data2 !== void 0 ? _tasksDataParsed$data2 : []);\n      setProjects((_projectsDataParsed$d = (_projectsDataParsed = projectsDataParsed) === null || _projectsDataParsed === void 0 ? void 0 : _projectsDataParsed.data) !== null && _projectsDataParsed$d !== void 0 ? _projectsDataParsed$d : Array.isArray(projectsDataParsed) ? projectsDataParsed : []);\n      setUsers((_usersDataParsed$data = (_usersDataParsed = usersDataParsed) === null || _usersDataParsed === void 0 ? void 0 : _usersDataParsed.data) !== null && _usersDataParsed$data !== void 0 ? _usersDataParsed$data : Array.isArray(usersDataParsed) ? usersDataParsed : []);\n    } catch (e) {\n      console.error('TaskTable: Failed to fetch data:', e);\n      setError(`Failed to load data: ${e.message}.`);\n      setTasks([]);\n      setProjects([]);\n      setUsers([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [token]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  // --- Edit/Create Modal Handlers ---\n  const handleShowCreateModal = () => {\n    if (projects.length === 0 && !loading) {\n      setError('Cannot add tasks: No projects available.');\n      return;\n    }\n    if (projects.length > 0) {\n      var _projects$;\n      setIsEditing(false);\n      setCurrentTask(null);\n      setModalError(null);\n      setIsSubmitting(false);\n      setFormData({\n        project_id: ((_projects$ = projects[0]) === null || _projects$ === void 0 ? void 0 : _projects$.id) || '',\n        title: '',\n        description: '',\n        status: 'pending',\n        priority: 'medium',\n        assigned_user_id: '',\n        due_date: ''\n      });\n      setShowModal(true);\n    } else if (!loading) {\n      setError('No projects found to assign tasks to.');\n    }\n  };\n  const handleShowEditModal = task => {\n    setIsEditing(true);\n    setCurrentTask(task);\n    setModalError(null);\n    setIsSubmitting(false);\n    setFormData({\n      project_id: task.project_id,\n      title: task.title,\n      description: task.description || '',\n      status: task.status || 'pending',\n      priority: task.priority || 'medium',\n      assigned_user_id: task.assigned_user_id || '',\n      due_date: task.due_date ? task.due_date.split('T')[0] : ''\n    });\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    if (isSubmitting) return;\n    setShowModal(false);\n    setCurrentTask(null);\n    setModalError(null);\n    setIsEditing(false);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // --- Form Submission ---\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setModalError(null);\n    // Validation\n    if (!formData.title.trim()) {\n      setModalError('Task title cannot be empty.');\n      return;\n    }\n    if (!formData.project_id) {\n      setModalError('Please select a project.');\n      return;\n    }\n    if (formData.due_date && isNaN(Date.parse(formData.due_date))) {\n      setModalError('Invalid Due Date format.');\n      return;\n    }\n    setIsSubmitting(true);\n    const url = isEditing ? `${API_BASE_URL}/tasks/${currentTask.id}` : `${API_BASE_URL}/tasks`;\n    const method = isEditing ? 'PUT' : 'POST';\n    // Payload\n    const payload = {\n      ...formData\n    };\n    payload.assigned_user_id = formData.assigned_user_id === '' || formData.assigned_user_id === null ? null : parseInt(formData.assigned_user_id, 10);\n    payload.project_id = parseInt(formData.project_id, 10);\n    if (!formData.due_date) delete payload.due_date;\n    payload.description = formData.description || '';\n    console.log('Payload sending:', JSON.stringify(payload, null, 2));\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        let message = `HTTP error: ${response.status}`;\n        try {\n          const errorData = await response.json();\n          message = errorData.errors ? Object.values(errorData.errors).flat().join(' ') : errorData.message || message;\n        } catch (jsonError) {\n          console.error(\"Non-JSON error response on save:\", await response.text());\n        }\n        throw new Error(message);\n      }\n      fetchData();\n      handleCloseModal();\n    } catch (e) {\n      console.error('Failed to save task:', e);\n      setModalError(`Failed to save task: ${e.message}`); // Correctly use e.message\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // --- Deletion Handler ---\n  const handleDelete = async taskId => {\n    if (!window.confirm('Are you sure you want to permanently delete this task?')) return;\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Accept': 'application/json'\n        }\n      });\n      if (!response.ok && response.status !== 204) {\n        let message = `HTTP error: ${response.status}`;\n        try {\n          const errorData = await response.json();\n          message = errorData.message || message;\n        } catch (jsonError) {/* Use default message */}\n        throw new Error(message);\n      }\n      fetchData();\n    } catch (e) {\n      console.error('Failed to delete task:', e);\n      setError(`Failed to delete task: ${e.message}`); // Correctly use e.message\n    }\n  };\n\n  // --- Mark as Complete Handler ---\n  const handleMarkAsComplete = async taskId => {\n    setMarkingDoneTaskId(taskId);\n    setError(null);\n    const url = `${API_BASE_URL}/tasks/${taskId}/complete`;\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        let message = `HTTP error ${response.status}`;\n        try {\n          const err = await response.json();\n          message = err.message || message;\n        } catch (e) {}\n        throw new Error(message);\n      }\n      fetchData();\n    } catch (e) {\n      setError(`Failed to complete task: ${e.message}`);\n    } // Use e.message\n    finally {\n      setMarkingDoneTaskId(null);\n    }\n  };\n\n  // --- Undo Complete Handler ---\n  const handleUndoComplete = async taskId => {\n    setUndoingTaskId(taskId);\n    setError(null);\n    const url = `${API_BASE_URL}/tasks/${taskId}/undo-complete`;\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        let message = `HTTP error ${response.status}`;\n        try {\n          const err = await response.json();\n          message = err.message || message;\n        } catch (e) {}\n        throw new Error(message);\n      }\n      fetchData();\n    } catch (e) {\n      setError(`Failed to undo task completion: ${e.message}`);\n    } // Use e.message\n    finally {\n      setUndoingTaskId(null);\n    }\n  };\n\n  // --- Render Logic ---\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center align-items-center text-light vh-100\",\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      className: \"me-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 109\n    }, this), \" Loading...\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 25\n  }, this);\n  if (error && !showModal) return /*#__PURE__*/_jsxDEV(Alert, {\n    variant: \"danger\",\n    className: \"bg-dark text-light border-danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 37\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-md-4\",\n    style: {\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #232323, #1a1a1a)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark p-4 rounded shadow mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3 flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-light mb-2 mb-md-0\",\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleShowCreateModal,\n          disabled: projects.length === 0 && !loading,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-plus-lg me-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), \" Create New Task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), error && !showModal && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        className: \"bg-dark text-light border-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 34\n      }, this), projects.length === 0 && !loading && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"warning\",\n        className: \"bg-dark text-warning border-warning\",\n        children: \"Create a project before adding tasks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 48\n      }, this), tasks.length === 0 && projects.length > 0 && !loading && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"info\",\n        className: \"bg-dark text-info border-info mt-3\",\n        children: \"No tasks found. Click 'Create New Task' to add one.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 68\n      }, this), tasks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          variant: \"dark\",\n          striped: true,\n          hover: true,\n          responsive: \"sm\",\n          className: \"align-middle\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 64\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 81\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Assignee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 98\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-end\",\n                children: \"Created\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-end\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tasks.map(task => {\n              var _task$project, _task$assigned_user;\n              const isCompleted = task.status === 'completed';\n              const isLoadingComplete = markingDoneTaskId === task.id;\n              const isLoadingUndo = undoingTaskId === task.id;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"fw-bold\",\n                  children: task.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ((_task$project = task.project) === null || _task$project === void 0 ? void 0 : _task$project.name) || /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-muted\",\n                    children: \"N/A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 52\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Badge, {\n                    bg: getTaskStatusColor(task.status),\n                    className: \"text-capitalize p-2\",\n                    children: task.status || 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Badge, {\n                    bg: getTaskPriorityColor(task.priority),\n                    className: \"text-capitalize p-2\",\n                    children: task.priority || 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.due_date ? new Date(task.due_date).toLocaleDateString() : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-muted\",\n                    children: \"N/A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 93\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ((_task$assigned_user = task.assigned_user) === null || _task$assigned_user === void 0 ? void 0 : _task$assigned_user.name) || /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-muted\",\n                    children: \"Unassigned\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 58\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-end\",\n                  children: formatDate(task.created_at)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-end\",\n                  children: formatDate(task.completed_at)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-center\",\n                  children: [!isCompleted ?\n                  /*#__PURE__*/\n                  // Show \"Done\" if not completed\n                  _jsxDEV(Button, {\n                    variant: \"outline-success\",\n                    size: \"sm\",\n                    onClick: () => handleMarkAsComplete(task.id),\n                    className: \"me-2 py-1 px-2\",\n                    title: \"Mark Task as Done\",\n                    disabled: isLoadingComplete || isLoadingUndo // Disable if any action loading\n                    ,\n                    children: isLoadingComplete ? /*#__PURE__*/_jsxDEV(Spinner, {\n                      as: \"span\",\n                      animation: \"border\",\n                      size: \"sm\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 57\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-check2-circle me-1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 281,\n                        columnNumber: 112\n                      }, this), \" Done\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 32\n                  }, this) :\n                  /*#__PURE__*/\n                  // Show \"Undo\" if completed\n                  _jsxDEV(Button, {\n                    variant: \"outline-warning\" // Different color for Undo\n                    ,\n                    size: \"sm\",\n                    onClick: () => handleUndoComplete(task.id) // Call undo handler\n                    ,\n                    className: \"me-2 py-1 px-2\",\n                    title: \"Undo Completion\",\n                    disabled: isLoadingComplete || isLoadingUndo // Disable if any action loading\n                    ,\n                    children: isLoadingUndo ? /*#__PURE__*/_jsxDEV(Spinner, {\n                      as: \"span\",\n                      animation: \"border\",\n                      size: \"sm\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 53\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-arrow-counterclockwise me-1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 108\n                      }, this), \" Undo\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 32\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-light\",\n                    size: \"sm\",\n                    onClick: () => handleShowEditModal(task),\n                    className: \"me-2 py-1 px-2\",\n                    title: \"Edit Task\",\n                    disabled: isLoadingComplete || isLoadingUndo,\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-pencil-fill me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 203\n                    }, this), \" Edit\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 28\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-danger\",\n                    size: \"sm\",\n                    onClick: () => handleDelete(task.id),\n                    title: \"Delete Task\",\n                    className: \"py-1 px-2\",\n                    disabled: isLoadingComplete || isLoadingUndo,\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-trash-fill me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 197\n                    }, this), \" Delete\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 28\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 25\n                }, this)]\n              }, task.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      backdrop: \"static\",\n      keyboard: false,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: !isSubmitting,\n        closeVariant: \"white\",\n        className: \"bg-dark border-secondary\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          className: \"text-light\",\n          children: isEditing ? 'Edit Task' : 'Create New Task'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          className: \"bg-dark text-light\",\n          children: [modalError && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            className: \"bg-dark text-light border-danger\",\n            onClose: () => setModalError(null),\n            dismissible: true,\n            children: modalError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"taskProjectId\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Project \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"project_id\",\n              value: formData.project_id,\n              onChange: handleInputChange,\n              required: true,\n              className: \"bg-secondary text-white border-secondary focus-ring focus-ring-primary\",\n              disabled: isSubmitting || isEditing,\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: formData.project_id !== '',\n                children: \"-- Select a project --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 22\n              }, this), projects.map(proj => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: proj.id,\n                children: proj.name\n              }, proj.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"taskTitle\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Title \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"title\",\n              value: formData.title,\n              onChange: handleInputChange,\n              required: true,\n              placeholder: \"Enter task title\",\n              className: \"bg-secondary text-white border-secondary focus-ring focus-ring-primary\",\n              disabled: isSubmitting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"taskDescription\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              name: \"description\",\n              rows: 3,\n              value: formData.description,\n              onChange: handleInputChange,\n              placeholder: \"Enter task description (optional)\",\n              className: \"bg-secondary text-white border-secondary\",\n              disabled: isSubmitting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-3\",\n            children: [isEditing &&\n            /*#__PURE__*/\n            // Only show Status when editing\n            _jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"taskStatus\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 30\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  name: \"status\",\n                  value: formData.status,\n                  onChange: handleInputChange,\n                  className: \"bg-secondary text-white border-secondary\",\n                  disabled: isSubmitting,\n                  children: taskStatuses.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: s,\n                    className: \"text-capitalize\",\n                    children: s\n                  }, s, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 58\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: isEditing ? 6 : 12,\n              children: [\" \", /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"taskPriority\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Priority\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 26\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  name: \"priority\",\n                  value: formData.priority,\n                  onChange: handleInputChange,\n                  className: \"bg-secondary text-white border-secondary\",\n                  disabled: isSubmitting,\n                  children: taskPriorities.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: p,\n                    className: \"text-capitalize\",\n                    children: p\n                  }, p, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 56\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 26\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 22\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"taskDueDate\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Due Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 66\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  name: \"due_date\",\n                  value: formData.due_date,\n                  onChange: handleInputChange,\n                  className: \"bg-secondary text-white border-secondary\",\n                  disabled: isSubmitting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 99\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 30\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"taskAssignee\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Assignee\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 67\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  name: \"assigned_user_id\",\n                  value: formData.assigned_user_id || '',\n                  onChange: handleInputChange,\n                  className: \"bg-secondary text-white border-secondary\",\n                  disabled: isSubmitting,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"-- Unassigned --\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 283\n                  }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: user.id,\n                    children: user.name\n                  }, user.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 344\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 100\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 30\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          className: \"bg-dark border-secondary\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleCloseModal,\n            disabled: isSubmitting,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: isSubmitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                as: \"span\",\n                animation: \"border\",\n                size: \"sm\",\n                role: \"status\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 35\n              }, this), \" Saving...\"]\n            }, void 0, true) : isEditing ? 'Save Changes' : 'Create Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskTable, \"kd8RX/iTaZWgXMCImmnb/Cczpc0=\", false, function () {\n  return [useAuth];\n});\n_c = TaskTable;\nexport default TaskTable;\nvar _c;\n$RefreshReg$(_c, \"TaskTable\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useAuth","API_BASE_URL","Modal","Button","Form","Badge","Table","Spinner","Alert","Row","Col","formatDate","jsxDEV","_jsxDEV","Fragment","_Fragment","getTaskStatusColor","status","toLowerCase","getTaskPriorityColor","priority","TaskTable","_s","token","tasks","setTasks","projects","setProjects","users","setUsers","loading","setLoading","error","setError","modalError","setModalError","showModal","setShowModal","isEditing","setIsEditing","currentTask","setCurrentTask","formData","setFormData","project_id","title","description","assigned_user_id","due_date","isSubmitting","setIsSubmitting","markingDoneTaskId","setMarkingDoneTaskId","undoingTaskId","setUndoingTaskId","taskStatuses","taskPriorities","fetchData","_tasksDataParsed","_tasksDataParsed$data","_tasksDataParsed$data2","_tasksDataParsed2","_projectsDataParsed$d","_projectsDataParsed","_usersDataParsed$data","_usersDataParsed","fetchOptions","headers","tRes","pRes","uRes","Promise","all","fetch","ok","Error","statusText","tasksDataParsed","projectsDataParsed","data","usersDataParsed","tasksText","text","JSON","parse","e","console","projectsText","usersText","log","Array","isArray","message","handleShowCreateModal","length","_projects$","id","handleShowEditModal","task","split","handleCloseModal","handleInputChange","name","value","target","prev","handleSubmit","preventDefault","trim","isNaN","Date","url","method","payload","parseInt","stringify","response","body","errorData","json","errors","Object","values","flat","join","jsonError","handleDelete","taskId","window","confirm","handleMarkAsComplete","Authorization","Accept","err","handleUndoComplete","className","children","animation","fileName","_jsxFileName","lineNumber","columnNumber","variant","style","minHeight","background","onClick","disabled","striped","hover","responsive","map","_task$project","_task$assigned_user","isCompleted","isLoadingComplete","isLoadingUndo","project","bg","toLocaleDateString","assigned_user","created_at","completed_at","size","as","show","onHide","backdrop","keyboard","centered","Header","closeButton","closeVariant","Title","onSubmit","Body","onClose","dismissible","Group","controlId","Label","Select","onChange","required","proj","Control","type","placeholder","rows","md","s","p","user","Footer","role","_c","$RefreshReg$"],"sources":["D:/Harvy/Dev/ProjectManagementSystem/frontend/src/components/Dashboard/TasksTable.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { API_BASE_URL } from '../../App';\r\nimport { Modal, Button, Form, Badge, Table, Spinner, Alert, Row, Col } from 'react-bootstrap';\r\n// --- Using only formatDate ---\r\nimport { formatDate } from '../../utils/formatting'; // Adjust path if needed\r\n\r\n// Helper functions\r\nconst getTaskStatusColor = (status) => {\r\n  switch (status?.toLowerCase()) {\r\n    case 'pending': return 'secondary';\r\n    case 'in progress': return 'info';\r\n    case 'completed': return 'success';\r\n    default: return 'light';\r\n  }\r\n};\r\nconst getTaskPriorityColor = (priority) => {\r\n  switch (priority) {\r\n    case 'low': return 'success';\r\n    case 'medium': return 'warning';\r\n    case 'high': return 'danger';\r\n    default: return 'light';\r\n  }\r\n};\r\n\r\nfunction TaskTable() {\r\n  const { token } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null); // For general fetch/delete/complete/undo errors\r\n  const [modalError, setModalError] = useState(null); // Separate state for modal errors\r\n\r\n  // State for Edit/Create Task Modal\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false); // Controls modal mode and conditional fields\r\n  const [currentTask, setCurrentTask] = useState(null);\r\n  // formData no longer includes actual_cost\r\n  const [formData, setFormData] = useState({\r\n    project_id: '', title: '', description: '', status: 'pending', priority: 'medium',\r\n    assigned_user_id: '', due_date: '',\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false); // For modal submit button\r\n\r\n  // Loading states for row actions\r\n  const [markingDoneTaskId, setMarkingDoneTaskId] = useState(null);\r\n  const [undoingTaskId, setUndoingTaskId] = useState(null);\r\n\r\n  const taskStatuses = ['pending', 'in progress', 'completed'];\r\n  const taskPriorities = ['low', 'medium', 'high'];\r\n\r\n  // Data Fetching (Ensure API loads created_at and completed_at)\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true); setError(null);\r\n    try {\r\n        const fetchOptions = { headers: { 'Authorization': `Bearer ${token}`, 'Accept': 'application/json' } };\r\n        const [tRes, pRes, uRes] = await Promise.all([\r\n            fetch(`${API_BASE_URL}/tasks`, fetchOptions),\r\n            fetch(`${API_BASE_URL}/projects`, fetchOptions),\r\n            fetch(`${API_BASE_URL}/users`, fetchOptions),\r\n        ]);\r\n\r\n        if (!tRes.ok) throw new Error(`Task fetch failed: ${tRes.status} ${tRes.statusText}`);\r\n        if (!pRes.ok) throw new Error(`Project fetch failed: ${pRes.status} ${pRes.statusText}`);\r\n        if (!uRes.ok) throw new Error(`User fetch failed: ${uRes.status} ${uRes.statusText}`);\r\n\r\n        // Safely parse JSON, provide defaults\r\n        let tasksDataParsed = [];\r\n        let projectsDataParsed = { data: [] };\r\n        let usersDataParsed = [];\r\n\r\n        try { const tasksText = await tRes.text(); if (tasksText) tasksDataParsed = JSON.parse(tasksText); }\r\n        catch (e) { console.error(\"Error parsing tasks JSON:\", e); }\r\n        try { const projectsText = await pRes.text(); if (projectsText) projectsDataParsed = JSON.parse(projectsText); }\r\n        catch (e) { console.error(\"Error parsing projects JSON:\", e); }\r\n        try { const usersText = await uRes.text(); if (usersText) usersDataParsed = JSON.parse(usersText); }\r\n        catch (e) { console.error(\"Error parsing users JSON:\", e); }\r\n\r\n\r\n        console.log(\"DEBUG TaskTable (MarkAsDone/Undo): First Task Received:\", tasksDataParsed[0] || tasksDataParsed?.data?.[0]); // Check for created_at, completed_at\r\n\r\n        setTasks(Array.isArray(tasksDataParsed) ? tasksDataParsed : (tasksDataParsed?.data ?? []));\r\n        setProjects(projectsDataParsed?.data ?? (Array.isArray(projectsDataParsed) ? projectsDataParsed : []));\r\n        setUsers(usersDataParsed?.data ?? (Array.isArray(usersDataParsed) ? usersDataParsed : []));\r\n\r\n    } catch (e) {\r\n        console.error('TaskTable: Failed to fetch data:', e);\r\n        setError(`Failed to load data: ${e.message}.`);\r\n        setTasks([]); setProjects([]); setUsers([]);\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => { fetchData(); }, [fetchData]);\r\n\r\n  // --- Edit/Create Modal Handlers ---\r\n  const handleShowCreateModal = () => {\r\n      if (projects.length === 0 && !loading) { setError('Cannot add tasks: No projects available.'); return; }\r\n      if (projects.length > 0) {\r\n          setIsEditing(false); setCurrentTask(null); setModalError(null); setIsSubmitting(false);\r\n          setFormData({\r\n              project_id: projects[0]?.id || '', title: '', description: '', status: 'pending',\r\n              priority: 'medium', assigned_user_id: '', due_date: '',\r\n          });\r\n          setShowModal(true);\r\n      } else if (!loading) { setError('No projects found to assign tasks to.'); }\r\n  };\r\n  const handleShowEditModal = (task) => {\r\n      setIsEditing(true); setCurrentTask(task); setModalError(null); setIsSubmitting(false);\r\n      setFormData({\r\n          project_id: task.project_id, title: task.title, description: task.description || '',\r\n          status: task.status || 'pending', priority: task.priority || 'medium',\r\n          assigned_user_id: task.assigned_user_id || '',\r\n          due_date: task.due_date ? task.due_date.split('T')[0] : '',\r\n      });\r\n      setShowModal(true);\r\n  };\r\n  const handleCloseModal = () => {\r\n      if (isSubmitting) return;\r\n      setShowModal(false); setCurrentTask(null); setModalError(null); setIsEditing(false);\r\n  };\r\n  const handleInputChange = (e) => {\r\n      const { name, value } = e.target;\r\n      setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // --- Form Submission ---\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); setModalError(null);\r\n    // Validation\r\n    if (!formData.title.trim()) { setModalError('Task title cannot be empty.'); return; }\r\n    if (!formData.project_id) { setModalError('Please select a project.'); return; }\r\n    if (formData.due_date && isNaN(Date.parse(formData.due_date))) { setModalError('Invalid Due Date format.'); return; }\r\n\r\n    setIsSubmitting(true);\r\n    const url = isEditing ? `${API_BASE_URL}/tasks/${currentTask.id}` : `${API_BASE_URL}/tasks`;\r\n    const method = isEditing ? 'PUT' : 'POST';\r\n    // Payload\r\n    const payload = { ...formData };\r\n    payload.assigned_user_id = formData.assigned_user_id === '' || formData.assigned_user_id === null ? null : parseInt(formData.assigned_user_id, 10);\r\n    payload.project_id = parseInt(formData.project_id, 10);\r\n    if (!formData.due_date) delete payload.due_date;\r\n    payload.description = formData.description || '';\r\n\r\n    console.log('Payload sending:', JSON.stringify(payload, null, 2));\r\n    try {\r\n      const response = await fetch(url, { method, headers: { 'Authorization': `Bearer ${token}`, 'Content-Type': 'application/json', 'Accept': 'application/json' }, body: JSON.stringify(payload) });\r\n      if (!response.ok) {\r\n         let message = `HTTP error: ${response.status}`;\r\n         try { const errorData = await response.json(); message = errorData.errors ? Object.values(errorData.errors).flat().join(' ') : (errorData.message || message); }\r\n         catch(jsonError) { console.error(\"Non-JSON error response on save:\", await response.text()); }\r\n         throw new Error(message);\r\n      }\r\n      fetchData(); handleCloseModal();\r\n    } catch (e) {\r\n      console.error('Failed to save task:', e);\r\n      setModalError(`Failed to save task: ${e.message}`); // Correctly use e.message\r\n    } finally {\r\n       setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // --- Deletion Handler ---\r\n  const handleDelete = async (taskId) => {\r\n      if (!window.confirm('Are you sure you want to permanently delete this task?')) return;\r\n      setError(null);\r\n      try {\r\n          const response = await fetch(`${API_BASE_URL}/tasks/${taskId}`, { method: 'DELETE', headers: { 'Authorization': `Bearer ${token}`, 'Accept': 'application/json' } });\r\n          if (!response.ok && response.status !== 204) {\r\n             let message = `HTTP error: ${response.status}`;\r\n             try { const errorData = await response.json(); message = errorData.message || message; }\r\n             catch(jsonError) { /* Use default message */ }\r\n             throw new Error(message);\r\n          }\r\n          fetchData();\r\n      } catch (e) {\r\n          console.error('Failed to delete task:', e);\r\n          setError(`Failed to delete task: ${e.message}`); // Correctly use e.message\r\n      }\r\n  };\r\n\r\n  // --- Mark as Complete Handler ---\r\n  const handleMarkAsComplete = async (taskId) => {\r\n      setMarkingDoneTaskId(taskId); setError(null);\r\n      const url = `${API_BASE_URL}/tasks/${taskId}/complete`;\r\n      try {\r\n          const response = await fetch(url, { method: 'POST', headers: { Authorization: `Bearer ${token}`, Accept: 'application/json', 'Content-Type': 'application/json' } });\r\n          if (!response.ok) {\r\n               let message = `HTTP error ${response.status}`;\r\n               try{ const err = await response.json(); message = err.message || message; } catch(e){}\r\n               throw new Error(message);\r\n          }\r\n          fetchData();\r\n      } catch (e) { setError(`Failed to complete task: ${e.message}`); } // Use e.message\r\n      finally { setMarkingDoneTaskId(null); }\r\n  };\r\n\r\n  // --- Undo Complete Handler ---\r\n  const handleUndoComplete = async (taskId) => {\r\n      setUndoingTaskId(taskId); setError(null);\r\n      const url = `${API_BASE_URL}/tasks/${taskId}/undo-complete`;\r\n      try {\r\n          const response = await fetch(url, { method: 'POST', headers: { Authorization: `Bearer ${token}`, Accept: 'application/json', 'Content-Type': 'application/json' } });\r\n          if (!response.ok) {\r\n               let message = `HTTP error ${response.status}`;\r\n               try{ const err = await response.json(); message = err.message || message; } catch(e){}\r\n               throw new Error(message);\r\n          }\r\n          fetchData();\r\n      } catch (e) { setError(`Failed to undo task completion: ${e.message}`); } // Use e.message\r\n      finally { setUndoingTaskId(null); }\r\n  };\r\n\r\n\r\n  // --- Render Logic ---\r\n  if (loading) return ( <div className=\"d-flex justify-content-center align-items-center text-light vh-100\"><Spinner animation=\"border\" className=\"me-2\"/> Loading...</div> );\r\n  if (error && !showModal) return ( <Alert variant=\"danger\" className=\"bg-dark text-light border-danger\">{error}</Alert> );\r\n\r\n  return (\r\n    <div className=\"p-md-4\" style={{ minHeight: '100vh', background: 'linear-gradient(135deg, #232323, #1a1a1a)' }}>\r\n      <div className=\"bg-dark p-4 rounded shadow mb-4\">\r\n        {/* Header and Create Button */}\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3 flex-wrap\">\r\n          <h2 className=\"text-light mb-2 mb-md-0\">Tasks</h2>\r\n          <Button variant=\"primary\" onClick={handleShowCreateModal} disabled={projects.length === 0 && !loading}>\r\n            <i className=\"bi bi-plus-lg me-1\"></i> Create New Task\r\n          </Button>\r\n        </div>\r\n\r\n         {/* Display Errors/Info Messages */}\r\n         {error && !showModal && <Alert variant=\"danger\" className=\"bg-dark text-light border-danger\">{error}</Alert>}\r\n         {projects.length === 0 && !loading && <Alert variant=\"warning\" className=\"bg-dark text-warning border-warning\">Create a project before adding tasks.</Alert>}\r\n         {tasks.length === 0 && projects.length > 0 && !loading && <Alert variant=\"info\" className=\"bg-dark text-info border-info mt-3\">No tasks found. Click 'Create New Task' to add one.</Alert>}\r\n\r\n        {/* Task Table */}\r\n        {tasks.length > 0 && (\r\n          <div className=\"table-responsive\">\r\n            <Table variant=\"dark\" striped hover responsive=\"sm\" className=\"align-middle\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Title</th><th>Project</th><th>Status</th><th>Priority</th><th>Due Date</th><th>Assignee</th>\r\n                  {/* UPDATED Columns */}\r\n                  <th className=\"text-end\">Created</th>\r\n                  <th className=\"text-end\">Completed</th>\r\n                  {/* Duration Removed */}\r\n                  <th className=\"text-center\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tasks.map(task => {\r\n                  const isCompleted = task.status === 'completed';\r\n                  const isLoadingComplete = markingDoneTaskId === task.id;\r\n                  const isLoadingUndo = undoingTaskId === task.id;\r\n\r\n                  return (\r\n                      <tr key={task.id}>\r\n                        <td className=\"fw-bold\">{task.title}</td>\r\n                        <td>{task.project?.name || <span className=\"text-muted\">N/A</span>}</td>\r\n                        <td><Badge bg={getTaskStatusColor(task.status)} className=\"text-capitalize p-2\">{task.status || 'N/A'}</Badge></td>\r\n                        <td><Badge bg={getTaskPriorityColor(task.priority)} className=\"text-capitalize p-2\">{task.priority || 'N/A'}</Badge></td>\r\n                        <td>{task.due_date ? new Date(task.due_date).toLocaleDateString() : <span className=\"text-muted\">N/A</span>}</td>\r\n                        <td>{task.assigned_user?.name || <span className=\"text-muted\">Unassigned</span>}</td>\r\n                        {/* Display Created/Completed Dates */}\r\n                        <td className=\"text-end\">{formatDate(task.created_at)}</td> {/* Display creation time */}\r\n                        <td className=\"text-end\">{formatDate(task.completed_at)}</td> {/* Display completion time */}\r\n                        {/* Duration Removed */}\r\n                        {/* Actions Cell */}\r\n                        <td className=\"text-center\">\r\n                           {/* --- Conditional \"Mark as Done\" / \"Undo\" Button --- */}\r\n                           {!isCompleted ? ( // Show \"Done\" if not completed\r\n                               <Button\r\n                                   variant=\"outline-success\"\r\n                                   size=\"sm\"\r\n                                   onClick={() => handleMarkAsComplete(task.id)}\r\n                                   className=\"me-2 py-1 px-2\"\r\n                                   title=\"Mark Task as Done\"\r\n                                   disabled={isLoadingComplete || isLoadingUndo} // Disable if any action loading\r\n                                >\r\n                                   {isLoadingComplete ? <Spinner as=\"span\" animation=\"border\" size=\"sm\" /> : <><i className=\"bi bi-check2-circle me-1\"></i> Done</>}\r\n                               </Button>\r\n                           ) : ( // Show \"Undo\" if completed\r\n                               <Button\r\n                                   variant=\"outline-warning\" // Different color for Undo\r\n                                   size=\"sm\"\r\n                                   onClick={() => handleUndoComplete(task.id)} // Call undo handler\r\n                                   className=\"me-2 py-1 px-2\"\r\n                                   title=\"Undo Completion\"\r\n                                   disabled={isLoadingComplete || isLoadingUndo} // Disable if any action loading\r\n                                >\r\n                                   {isLoadingUndo ? <Spinner as=\"span\" animation=\"border\" size=\"sm\" /> : <><i className=\"bi bi-arrow-counterclockwise me-1\"></i> Undo</>}\r\n                               </Button>\r\n                           )}\r\n                           {/* --- End Conditional Button --- */}\r\n\r\n                           {/* Edit Button */}\r\n                           <Button variant=\"outline-light\" size=\"sm\" onClick={() => handleShowEditModal(task)} className=\"me-2 py-1 px-2\" title=\"Edit Task\" disabled={isLoadingComplete || isLoadingUndo}><i className=\"bi bi-pencil-fill me-1\"></i> Edit</Button>\r\n                           {/* Delete Button */}\r\n                           <Button variant=\"outline-danger\" size=\"sm\" onClick={() => handleDelete(task.id)} title=\"Delete Task\" className=\"py-1 px-2\" disabled={isLoadingComplete || isLoadingUndo}><i className=\"bi bi-trash-fill me-1\"></i> Delete</Button>\r\n                        </td>\r\n                      </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* --- Task Edit/Create Modal --- */}\r\n      <Modal show={showModal} onHide={handleCloseModal} backdrop=\"static\" keyboard={false} centered>\r\n        <Modal.Header closeButton={!isSubmitting} closeVariant=\"white\" className=\"bg-dark border-secondary\">\r\n          <Modal.Title className=\"text-light\">{isEditing ? 'Edit Task' : 'Create New Task'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Modal.Body className=\"bg-dark text-light\">\r\n             {modalError && <Alert variant=\"danger\" className=\"bg-dark text-light border-danger\" onClose={() => setModalError(null)} dismissible>{modalError}</Alert>}\r\n\r\n             {/* Project Select */}\r\n             <Form.Group className=\"mb-3\" controlId=\"taskProjectId\">\r\n                 <Form.Label>Project <span className=\"text-danger\">*</span></Form.Label>\r\n                 <Form.Select name=\"project_id\" value={formData.project_id} onChange={handleInputChange} required className=\"bg-secondary text-white border-secondary focus-ring focus-ring-primary\" disabled={isSubmitting || isEditing}> {/* Optionally disable project change on edit */}\r\n                     <option value=\"\" disabled={formData.project_id !== ''}>-- Select a project --</option>\r\n                     {projects.map(proj => (<option key={proj.id} value={proj.id}>{proj.name}</option>))}\r\n                 </Form.Select>\r\n             </Form.Group>\r\n             {/* Title Input */}\r\n             <Form.Group className=\"mb-3\" controlId=\"taskTitle\">\r\n                 <Form.Label>Title <span className=\"text-danger\">*</span></Form.Label>\r\n                 <Form.Control type=\"text\" name=\"title\" value={formData.title} onChange={handleInputChange} required placeholder=\"Enter task title\" className=\"bg-secondary text-white border-secondary focus-ring focus-ring-primary\" disabled={isSubmitting}/>\r\n             </Form.Group>\r\n             {/* Description Textarea */}\r\n             <Form.Group className=\"mb-3\" controlId=\"taskDescription\">\r\n                 <Form.Label>Description</Form.Label>\r\n                 <Form.Control as=\"textarea\" name=\"description\" rows={3} value={formData.description} onChange={handleInputChange} placeholder=\"Enter task description (optional)\" className=\"bg-secondary text-white border-secondary\" disabled={isSubmitting}/>\r\n             </Form.Group>\r\n             {/* Status (Conditional) & Priority Row */}\r\n             <Row className=\"mb-3\">\r\n                 {isEditing && ( // Only show Status when editing\r\n                     <Col md={6}>\r\n                         <Form.Group controlId=\"taskStatus\">\r\n                             <Form.Label>Status</Form.Label>\r\n                             <Form.Select name=\"status\" value={formData.status} onChange={handleInputChange} className=\"bg-secondary text-white border-secondary\" disabled={isSubmitting}>\r\n                                 {taskStatuses.map(s => (<option key={s} value={s} className=\"text-capitalize\">{s}</option>))}\r\n                             </Form.Select>\r\n                         </Form.Group>\r\n                     </Col>\r\n                 )}\r\n                 <Col md={isEditing ? 6 : 12}> {/* Adjust Priority width */}\r\n                     <Form.Group controlId=\"taskPriority\">\r\n                         <Form.Label>Priority</Form.Label>\r\n                         <Form.Select name=\"priority\" value={formData.priority} onChange={handleInputChange} className=\"bg-secondary text-white border-secondary\" disabled={isSubmitting}>\r\n                             {taskPriorities.map(p => (<option key={p} value={p} className=\"text-capitalize\">{p}</option>))}\r\n                         </Form.Select>\r\n                     </Form.Group>\r\n                 </Col>\r\n             </Row>\r\n             {/* Due Date & Assignee Row */}\r\n             <Row className=\"mb-3\">\r\n                 <Col md={6}><Form.Group controlId=\"taskDueDate\"><Form.Label>Due Date</Form.Label><Form.Control type=\"date\" name=\"due_date\" value={formData.due_date} onChange={handleInputChange} className=\"bg-secondary text-white border-secondary\" disabled={isSubmitting}/></Form.Group></Col>\r\n                 <Col md={6}><Form.Group controlId=\"taskAssignee\"><Form.Label>Assignee</Form.Label><Form.Select name=\"assigned_user_id\" value={formData.assigned_user_id || ''} onChange={handleInputChange} className=\"bg-secondary text-white border-secondary\" disabled={isSubmitting}><option value=\"\">-- Unassigned --</option>{users.map(user => <option key={user.id} value={user.id}>{user.name}</option>)}</Form.Select></Form.Group></Col>\r\n             </Row>\r\n             {/* No Actual Cost Field */}\r\n          </Modal.Body>\r\n          <Modal.Footer className=\"bg-dark border-secondary\">\r\n            <Button variant=\"secondary\" onClick={handleCloseModal} disabled={isSubmitting}>Cancel</Button>\r\n            <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\r\n               {isSubmitting ? (<><Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/> Saving...</>) : (isEditing ? 'Save Changes' : 'Create Task')}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n      {/* --- End Task Edit/Create Modal --- */}\r\n\r\n      {/* Time Log Modal Removed */}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}