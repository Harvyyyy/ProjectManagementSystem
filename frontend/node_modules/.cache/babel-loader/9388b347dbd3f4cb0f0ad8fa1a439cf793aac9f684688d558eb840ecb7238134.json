{"ast":null,"code":"var _jsxFileName = \"D:\\\\Harvy\\\\Dev\\\\ProjectManagementSystem\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\CommentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAuth } from '../../context/AuthContext'; // Adjust path if needed\nimport { API_BASE_URL } from '../../App'; // Adjust path if needed\nimport { Form, Button, Spinner, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentForm({\n  taskId,\n  onCommentAdded\n}) {\n  _s();\n  const {\n    token\n  } = useAuth();\n  const [body, setBody] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!body.trim()) {\n      setError('Comment cannot be empty.');\n      return;\n    }\n    setError(null);\n    setIsSubmitting(true);\n    const url = `${API_BASE_URL}/tasks/${taskId}/comments`; // POST endpoint\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          body: body\n        }) // Send comment body\n      });\n      if (!response.ok) {\n        let message = `Error ${response.status}`;\n        try {\n          const errData = await response.json();\n          message = errData.errors ? Object.values(errData.errors).flat().join(' ') : errData.message || message;\n        } catch (jsonError) {\n          console.error(\"Failed to parse error JSON\");\n        }\n        throw new Error(message);\n      }\n\n      // const newComment = await response.json(); // Optional: use new comment data if needed\n\n      setBody(''); // Clear the form\n      if (onCommentAdded) {\n        onCommentAdded(); // Notify parent to refresh comment list\n      }\n    } catch (err) {\n      console.error(\"Failed to submit comment:\", err);\n      setError(err.message || \"Failed to add comment.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    className: \"mt-4\",\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      onClose: () => setError(null),\n      dismissible: true,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"commentBody\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"text-light\",\n        children: \"Add a Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        rows: 3,\n        value: body,\n        onChange: e => setBody(e.target.value),\n        placeholder: \"Enter your comment...\",\n        required: true,\n        className: \"bg-secondary text-white border-secondary mb-2\",\n        disabled: isSubmitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      disabled: isSubmitting || !body.trim(),\n      children: isSubmitting ? /*#__PURE__*/_jsxDEV(Spinner, {\n        as: \"span\",\n        animation: \"border\",\n        size: \"sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }, this) : 'Submit Comment'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(CommentForm, \"A2nXZTNEIRsIE3XAjUsGUOoNL/M=\", false, function () {\n  return [useAuth];\n});\n_c = CommentForm;\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useState","useAuth","API_BASE_URL","Form","Button","Spinner","Alert","jsxDEV","_jsxDEV","CommentForm","taskId","onCommentAdded","_s","token","body","setBody","isSubmitting","setIsSubmitting","error","setError","handleSubmit","e","preventDefault","trim","url","response","fetch","method","headers","JSON","stringify","ok","message","status","errData","json","errors","Object","values","flat","join","jsonError","console","Error","err","onSubmit","className","children","variant","onClose","dismissible","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","as","rows","value","onChange","target","placeholder","required","disabled","type","animation","size","_c","$RefreshReg$"],"sources":["D:/Harvy/Dev/ProjectManagementSystem/frontend/src/components/Dashboard/CommentForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAuth } from '../../context/AuthContext'; // Adjust path if needed\r\nimport { API_BASE_URL } from '../../App'; // Adjust path if needed\r\nimport { Form, Button, Spinner, Alert } from 'react-bootstrap';\r\n\r\nfunction CommentForm({ taskId, onCommentAdded }) {\r\n    const { token } = useAuth();\r\n    const [body, setBody] = useState('');\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!body.trim()) {\r\n            setError('Comment cannot be empty.');\r\n            return;\r\n        }\r\n        setError(null);\r\n        setIsSubmitting(true);\r\n\r\n        const url = `${API_BASE_URL}/tasks/${taskId}/comments`; // POST endpoint\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                },\r\n                body: JSON.stringify({ body: body }), // Send comment body\r\n            });\r\n\r\n            if (!response.ok) {\r\n                let message = `Error ${response.status}`;\r\n                try {\r\n                    const errData = await response.json();\r\n                    message = errData.errors ? Object.values(errData.errors).flat().join(' ') : (errData.message || message);\r\n                } catch (jsonError) { console.error(\"Failed to parse error JSON\"); }\r\n                throw new Error(message);\r\n            }\r\n\r\n            // const newComment = await response.json(); // Optional: use new comment data if needed\r\n\r\n            setBody(''); // Clear the form\r\n            if (onCommentAdded) {\r\n                onCommentAdded(); // Notify parent to refresh comment list\r\n            }\r\n\r\n        } catch (err) {\r\n            console.error(\"Failed to submit comment:\", err);\r\n            setError(err.message || \"Failed to add comment.\");\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit} className=\"mt-4\">\r\n            {error && <Alert variant=\"danger\" onClose={() => setError(null)} dismissible>{error}</Alert>}\r\n            <Form.Group controlId=\"commentBody\">\r\n                <Form.Label className=\"text-light\">Add a Comment</Form.Label>\r\n                <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={3}\r\n                    value={body}\r\n                    onChange={(e) => setBody(e.target.value)}\r\n                    placeholder=\"Enter your comment...\"\r\n                    required\r\n                    className=\"bg-secondary text-white border-secondary mb-2\"\r\n                    disabled={isSubmitting}\r\n                />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting || !body.trim()}>\r\n                {isSubmitting ? <Spinner as=\"span\" animation=\"border\" size=\"sm\" /> : 'Submit Comment'}\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default CommentForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}