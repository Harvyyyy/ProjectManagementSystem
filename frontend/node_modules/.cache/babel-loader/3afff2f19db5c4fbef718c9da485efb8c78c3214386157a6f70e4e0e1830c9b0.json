{"ast":null,"code":"var _jsxFileName = \"D:\\\\Harvy\\\\Dev\\\\ProjectManagementSystem\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\ExpendituresTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../../context/AuthContext';\nimport { API_BASE_URL } from '../../App';\nimport { Table, Button, Spinner, Alert } from 'react-bootstrap'; // Modal removed from here, handled by form\nimport ExpenditureForm from './ExpenditureForm'; // Import the modal form\nimport { formatCurrency, formatDate } from '../../utils/formatting'; // Import formatters\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ExpendituresTable({\n  projectId,\n  onExpenditureUpdate\n}) {\n  _s();\n  // Receive projectId and callback\n  const {\n    token\n  } = useAuth();\n  const [expenditures, setExpenditures] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // State for Add Modal\n  const [showAddModal, setShowAddModal] = useState(false);\n\n  // --- NEW: State for Edit Modal ---\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [expenditureToEdit, setExpenditureToEdit] = useState(null);\n  // --- END NEW ---\n\n  const fetchExpenditures = useCallback(async () => {\n    if (!projectId) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/projects/${projectId}/expenditures`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error ${response.status}: Could not fetch expenditures.`);\n      }\n      const data = await response.json();\n      setExpenditures(data.data ? data.data : Array.isArray(data) ? data : []);\n    } catch (e) {\n      console.error(\"Fetch expenditures error:\", e);\n      setError(e.message || 'Failed to load expenditures.');\n    } finally {\n      setLoading(false);\n    }\n  }, [projectId, token]);\n  useEffect(() => {\n    fetchExpenditures();\n  }, [fetchExpenditures]); // Re-run when projectId changes\n\n  // --- Modal Handlers ---\n  const handleShowAddModal = () => {\n    setExpenditureToEdit(null); // Ensure edit state is clear\n    setShowAddModal(true);\n  };\n  const handleCloseAddModal = () => setShowAddModal(false);\n\n  // --- NEW: Edit Modal Handlers ---\n  const handleShowEditModal = expenditure => {\n    setExpenditureToEdit(expenditure); // Set the expenditure to edit\n    setShowEditModal(true); // Show the edit modal\n  };\n  const handleCloseEditModal = () => {\n    setShowEditModal(false);\n    setExpenditureToEdit(null); // Clear selection on close\n  };\n  // --- END NEW ---\n\n  // Unified Save Success Handler (for both Add and Edit)\n  const handleSaveSuccess = () => {\n    setShowAddModal(false); // Close Add modal if open\n    setShowEditModal(false); // Close Edit modal if open\n    setExpenditureToEdit(null); // Clear edit selection\n    fetchExpenditures(); // Refresh the expenditures list for this project\n    if (onExpenditureUpdate) {\n      onExpenditureUpdate(); // Call the callback to refresh the project list (updates remaining budget)\n    }\n  };\n\n  // --- Delete Handler ---\n  const handleDeleteExpenditure = async expenditureId => {\n    if (!window.confirm(\"Are you sure you want to delete this expenditure?\")) return;\n    // Set loading state specific to delete? Optional.\n    setError(null); // Clear previous errors\n    try {\n      // Use the non-nested route for delete (assuming shallow or separate resource route)\n      const response = await fetch(`${API_BASE_URL}/expenditures/${expenditureId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/json'\n        }\n      });\n      if (!response.ok && response.status !== 204) {\n        let msg = `HTTP error ${response.status}`;\n        try {\n          const err = await response.json();\n          msg = err.message || msg;\n        } catch (e) {}\n        throw new Error(msg);\n      }\n      fetchExpenditures(); // Refresh list\n      if (onExpenditureUpdate) {\n        onExpenditureUpdate(); // Refresh project list\n      }\n    } catch (e) {\n      console.error(\"Delete expenditure error:\", e);\n      // Display error specific to this table\n      setError(`Failed to delete expenditure: ${e.message}`);\n    }\n  };\n  // --- End Delete ---\n\n  // --- Render Logic ---\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center text-light\",\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      size: \"sm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 63\n    }, this), \" Loading Expenditures...\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 23\n  }, this);\n  // Display error specific to this table\n  if (error) return /*#__PURE__*/_jsxDEV(Alert, {\n    variant: \"warning\",\n    className: \"bg-dark text-warning border-warning\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-end mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: handleShowAddModal,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-plus-lg me-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), \" Add Expenditure\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), expenditures.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"secondary\",\n      className: \"bg-dark text-secondary border-secondary\",\n      children: \"No expenditures recorded for this project yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 37\n    }, this), expenditures.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n      variant: \"dark\",\n      striped: true,\n      hover: true,\n      responsive: \"sm\",\n      size: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-end\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Recorded By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: expenditures.map(exp => {\n          var _exp$recorder;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: exp.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-end\",\n              children: formatCurrency(exp.amount, 'USD')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatDate(exp.expense_date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_exp$recorder = exp.recorder) === null || _exp$recorder === void 0 ? void 0 : _exp$recorder.name) || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-light\",\n                size: \"xs\" // Extra small button\n                ,\n                className: \"me-1 py-0 px-1\" // Minimal padding\n                ,\n                onClick: () => handleShowEditModal(exp) // Call edit handler\n                ,\n                title: \"Edit Expenditure\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-pencil-fill small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-danger\",\n                size: \"xs\",\n                className: \"py-0 px-1\",\n                onClick: () => handleDeleteExpenditure(exp.id) // Call delete handler\n                ,\n                title: \"Delete Expenditure\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-trash-fill small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)]\n          }, exp.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ExpenditureForm, {\n      show: showAddModal,\n      handleClose: handleCloseAddModal,\n      projectId: projectId // Pass the current project ID for adding\n      ,\n      onSaveSuccess: handleSaveSuccess // Pass the success callback\n      // expenditureToEdit is null here, so form knows it's for creating\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), expenditureToEdit &&\n    /*#__PURE__*/\n    // Only render if an expenditure is selected for editing\n    _jsxDEV(ExpenditureForm, {\n      show: showEditModal // Controlled by separate state\n      ,\n      handleClose: handleCloseEditModal // Use edit modal closer\n      // projectId is not strictly needed for editing if using non-nested PUT route\n      // projectId={projectId}\n      ,\n      expenditureToEdit: expenditureToEdit // Pass the data to edit\n      ,\n      onSaveSuccess: handleSaveSuccess // Re-use same success callback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n_s(ExpendituresTable, \"8yekI3lA+GdqifXnFkmxhlLsMpE=\", false, function () {\n  return [useAuth];\n});\n_c = ExpendituresTable;\nexport default ExpendituresTable;\nvar _c;\n$RefreshReg$(_c, \"ExpendituresTable\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useAuth","API_BASE_URL","Table","Button","Spinner","Alert","ExpenditureForm","formatCurrency","formatDate","jsxDEV","_jsxDEV","Fragment","_Fragment","ExpendituresTable","projectId","onExpenditureUpdate","_s","token","expenditures","setExpenditures","loading","setLoading","error","setError","showAddModal","setShowAddModal","showEditModal","setShowEditModal","expenditureToEdit","setExpenditureToEdit","fetchExpenditures","response","fetch","headers","Authorization","Accept","ok","Error","status","data","json","Array","isArray","e","console","message","handleShowAddModal","handleCloseAddModal","handleShowEditModal","expenditure","handleCloseEditModal","handleSaveSuccess","handleDeleteExpenditure","expenditureId","window","confirm","method","msg","err","className","children","animation","size","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","length","striped","hover","responsive","map","exp","_exp$recorder","description","amount","expense_date","recorder","name","title","id","show","handleClose","onSaveSuccess","_c","$RefreshReg$"],"sources":["D:/Harvy/Dev/ProjectManagementSystem/frontend/src/components/Dashboard/ExpendituresTable.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { API_BASE_URL } from '../../App';\r\nimport { Table, Button, Spinner, Alert } from 'react-bootstrap'; // Modal removed from here, handled by form\r\nimport ExpenditureForm from './ExpenditureForm'; // Import the modal form\r\nimport { formatCurrency, formatDate } from '../../utils/formatting'; // Import formatters\r\n\r\nfunction ExpendituresTable({ projectId, onExpenditureUpdate }) { // Receive projectId and callback\r\n  const { token } = useAuth();\r\n  const [expenditures, setExpenditures] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // State for Add Modal\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n\r\n  // --- NEW: State for Edit Modal ---\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [expenditureToEdit, setExpenditureToEdit] = useState(null);\r\n  // --- END NEW ---\r\n\r\n\r\n  const fetchExpenditures = useCallback(async () => {\r\n    if (!projectId) return;\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/projects/${projectId}/expenditures`, {\r\n        headers: { Authorization: `Bearer ${token}`, Accept: 'application/json' },\r\n      });\r\n      if (!response.ok) {\r\n          throw new Error(`HTTP error ${response.status}: Could not fetch expenditures.`);\r\n      }\r\n      const data = await response.json();\r\n      setExpenditures(data.data ? data.data : (Array.isArray(data) ? data : []));\r\n    } catch (e) {\r\n      console.error(\"Fetch expenditures error:\", e);\r\n      setError(e.message || 'Failed to load expenditures.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [projectId, token]);\r\n\r\n  useEffect(() => {\r\n    fetchExpenditures();\r\n  }, [fetchExpenditures]); // Re-run when projectId changes\r\n\r\n  // --- Modal Handlers ---\r\n  const handleShowAddModal = () => {\r\n      setExpenditureToEdit(null); // Ensure edit state is clear\r\n      setShowAddModal(true);\r\n  };\r\n  const handleCloseAddModal = () => setShowAddModal(false);\r\n\r\n  // --- NEW: Edit Modal Handlers ---\r\n  const handleShowEditModal = (expenditure) => {\r\n      setExpenditureToEdit(expenditure); // Set the expenditure to edit\r\n      setShowEditModal(true); // Show the edit modal\r\n  };\r\n  const handleCloseEditModal = () => {\r\n      setShowEditModal(false);\r\n      setExpenditureToEdit(null); // Clear selection on close\r\n  };\r\n  // --- END NEW ---\r\n\r\n  // Unified Save Success Handler (for both Add and Edit)\r\n  const handleSaveSuccess = () => {\r\n    setShowAddModal(false); // Close Add modal if open\r\n    setShowEditModal(false); // Close Edit modal if open\r\n    setExpenditureToEdit(null); // Clear edit selection\r\n    fetchExpenditures();    // Refresh the expenditures list for this project\r\n    if (onExpenditureUpdate) {\r\n         onExpenditureUpdate(); // Call the callback to refresh the project list (updates remaining budget)\r\n    }\r\n  };\r\n\r\n  // --- Delete Handler ---\r\n  const handleDeleteExpenditure = async (expenditureId) => {\r\n      if (!window.confirm(\"Are you sure you want to delete this expenditure?\")) return;\r\n      // Set loading state specific to delete? Optional.\r\n      setError(null); // Clear previous errors\r\n      try {\r\n          // Use the non-nested route for delete (assuming shallow or separate resource route)\r\n          const response = await fetch(`${API_BASE_URL}/expenditures/${expenditureId}`, {\r\n              method: 'DELETE',\r\n              headers: { Authorization: `Bearer ${token}`, Accept: 'application/json' },\r\n          });\r\n          if (!response.ok && response.status !== 204) {\r\n              let msg = `HTTP error ${response.status}`;\r\n              try { const err = await response.json(); msg = err.message || msg; } catch(e) {}\r\n              throw new Error(msg);\r\n          }\r\n          fetchExpenditures(); // Refresh list\r\n          if (onExpenditureUpdate) {\r\n              onExpenditureUpdate(); // Refresh project list\r\n          }\r\n      } catch (e) {\r\n          console.error(\"Delete expenditure error:\", e);\r\n          // Display error specific to this table\r\n          setError(`Failed to delete expenditure: ${e.message}`);\r\n      }\r\n  }\r\n  // --- End Delete ---\r\n\r\n\r\n  // --- Render Logic ---\r\n  if (loading) return <div className=\"text-center text-light\"><Spinner animation=\"border\" size=\"sm\" /> Loading Expenditures...</div>;\r\n  // Display error specific to this table\r\n  if (error) return <Alert variant=\"warning\" className=\"bg-dark text-warning border-warning\">{error}</Alert>;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-end mb-3\">\r\n        <Button variant=\"success\" onClick={handleShowAddModal}>\r\n          <i className=\"bi bi-plus-lg me-1\"></i> Add Expenditure\r\n        </Button>\r\n      </div>\r\n\r\n      {expenditures.length === 0 && <Alert variant=\"secondary\" className=\"bg-dark text-secondary border-secondary\">No expenditures recorded for this project yet.</Alert>}\r\n\r\n      {expenditures.length > 0 && (\r\n        <Table variant=\"dark\" striped hover responsive=\"sm\" size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>Description</th>\r\n              <th className=\"text-end\">Amount</th>\r\n              <th>Date</th>\r\n              <th>Recorded By</th>\r\n              <th className=\"text-center\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {expenditures.map(exp => (\r\n              <tr key={exp.id}>\r\n                <td>{exp.description}</td>\r\n                {/* Ensure project data or default currency is available if needed by formatCurrency */}\r\n                <td className=\"text-end\">{formatCurrency(exp.amount, 'USD')}</td> {/* Simplified currency for example */}\r\n                <td>{formatDate(exp.expense_date)}</td>\r\n                <td>{exp.recorder?.name || 'N/A'}</td>\r\n                <td className=\"text-center\">\r\n                   {/* --- Edit Button --- */}\r\n                   <Button\r\n                       variant=\"outline-light\"\r\n                       size=\"xs\" // Extra small button\r\n                       className=\"me-1 py-0 px-1\" // Minimal padding\r\n                       onClick={() => handleShowEditModal(exp)} // Call edit handler\r\n                       title=\"Edit Expenditure\"\r\n                   >\r\n                       <i className=\"bi bi-pencil-fill small\"></i>\r\n                   </Button>\r\n                   {/* --- Delete Button --- */}\r\n                   <Button\r\n                       variant=\"outline-danger\"\r\n                       size=\"xs\"\r\n                       className=\"py-0 px-1\"\r\n                       onClick={() => handleDeleteExpenditure(exp.id)} // Call delete handler\r\n                       title=\"Delete Expenditure\"\r\n                    >\r\n                       <i className=\"bi bi-trash-fill small\"></i>\r\n                   </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n\r\n      {/* Render the Expenditure Form Modal for ADDING */}\r\n      <ExpenditureForm\r\n         show={showAddModal}\r\n         handleClose={handleCloseAddModal}\r\n         projectId={projectId} // Pass the current project ID for adding\r\n         onSaveSuccess={handleSaveSuccess} // Pass the success callback\r\n         // expenditureToEdit is null here, so form knows it's for creating\r\n      />\r\n\r\n      {/* --- Render the Expenditure Form Modal for EDITING --- */}\r\n      {expenditureToEdit && ( // Only render if an expenditure is selected for editing\r\n          <ExpenditureForm\r\n             show={showEditModal} // Controlled by separate state\r\n             handleClose={handleCloseEditModal} // Use edit modal closer\r\n             // projectId is not strictly needed for editing if using non-nested PUT route\r\n             // projectId={projectId}\r\n             expenditureToEdit={expenditureToEdit} // Pass the data to edit\r\n             onSaveSuccess={handleSaveSuccess} // Re-use same success callback\r\n          />\r\n      )}\r\n      {/* --- End Edit Modal Rendering --- */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ExpendituresTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}