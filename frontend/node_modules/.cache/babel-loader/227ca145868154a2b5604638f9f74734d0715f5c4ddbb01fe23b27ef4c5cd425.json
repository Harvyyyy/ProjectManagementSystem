{"ast":null,"code":"var _jsxFileName = \"D:\\\\Harvy\\\\Dev\\\\ProjectManagementSystem\\\\frontend\\\\src\\\\components\\\\Notifications\\\\NotificationBell.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react'; // Import useRef\nimport { Dropdown, Badge, Spinner, ListGroup, Button, Alert } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext'; // Adjust path if needed\nimport { API_BASE_URL } from '../../App'; // Adjust path if needed\nimport { formatDate } from '../../utils/formatting'; // Adjust path if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NotificationBell() {\n  _s();\n  const {\n    token\n  } = useAuth();\n  const navigate = useNavigate();\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [isLoading, setIsLoading] = useState(false); // State for UI loading indicator\n  const [error, setError] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  // --- FIX: Use a ref to track if a fetch is in progress ---\n  const isFetchingRef = useRef(false);\n\n  // Fetch notifications from the API\n  const fetchNotifications = useCallback(async () => {\n    // --- FIX: Check the ref, not the state, to prevent concurrent fetches ---\n    if (isFetchingRef.current || !token) {\n      console.log('Fetch skipped:', {\n        isFetching: isFetchingRef.current,\n        hasToken: !!token\n      });\n      return;\n    }\n    console.log('Starting fetch...');\n    isFetchingRef.current = true; // Mark as fetching (using ref)\n    setIsLoading(true); // Set state for UI spinner\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/notifications`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/json'\n        }\n      });\n      if (!response.ok) {\n        let errorMsg = `HTTP error ${response.status}`;\n        try {\n          const errData = await response.json();\n          errorMsg = errData.message || errorMsg;\n        } catch (parseError) {\n          console.warn(\"Could not parse error response as JSON\");\n        }\n        throw new Error(errorMsg);\n      }\n      const data = await response.json();\n      console.log(\"Notifications Data Received:\", data);\n      const fetchedNotifications = data.data || [];\n      setNotifications(fetchedNotifications);\n      const currentUnreadCount = fetchedNotifications.filter(n => !n.read_at).length;\n      setUnreadCount(currentUnreadCount);\n    } catch (err) {\n      console.error(\"Failed to fetch notifications:\", err);\n      setError(\"Couldn't load notifications.\");\n      setUnreadCount(0);\n      setNotifications([]);\n    } finally {\n      console.log('Finished fetch.');\n      isFetchingRef.current = false; // Mark as not fetching (using ref)\n      setIsLoading(false); // Set state to hide UI spinner\n    }\n    // Dependency array is correct now, as 'isLoading' state is not read here\n  }, [token]);\n\n  // Initial fetch on component mount\n  useEffect(() => {\n    if (token) {\n      fetchNotifications();\n    } else {\n      console.log(\"Skipping initial fetch: No token\");\n    }\n  }, [fetchNotifications, token]); // Depends on token and the stable fetchNotifications\n\n  // --- Rest of the component remains the same ---\n  // handleToggle, handleMarkAsRead, handleNotificationClick, handleMarkAllAsRead, CustomToggle, render...\n  // (Ensure the rest of your component code is included below)\n\n  const handleToggle = nextShowState => {\n    setIsOpen(nextShowState);\n  };\n  const handleMarkAsRead = async (notificationId, e) => {\n    e.stopPropagation();\n    const targetNotification = notifications.find(n => n.id === notificationId);\n    if (!targetNotification || targetNotification.read_at) return;\n    const previousNotifications = [...notifications];\n    const previousUnreadCount = unreadCount;\n    setNotifications(prev => prev.map(n => n.id === notificationId ? {\n      ...n,\n      read_at: new Date().toISOString()\n    } : n));\n    setUnreadCount(prev => Math.max(0, prev - 1));\n    try {\n      const response = await fetch(`${API_BASE_URL}/notifications/${notificationId}/read`, {\n        method: 'PATCH',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Server failed to mark as read: ${response.status}`);\n      }\n    } catch (err) {\n      console.error(\"Failed to mark notification as read:\", err);\n      setError(\"Failed to update notification status.\");\n      setNotifications(previousNotifications);\n      setUnreadCount(previousUnreadCount);\n    }\n  };\n  const handleNotificationClick = (notification, e) => {\n    var _notification$data;\n    if (!notification.read_at) {\n      handleMarkAsRead(notification.id, e);\n    }\n    if ((_notification$data = notification.data) !== null && _notification$data !== void 0 && _notification$data.action_url) {\n      navigate(notification.data.action_url);\n      setIsOpen(false);\n    }\n  };\n  const handleMarkAllAsRead = async e => {\n    e.stopPropagation();\n    if (unreadCount === 0) return;\n    const previousNotifications = [...notifications];\n    const previousUnreadCount = unreadCount;\n    setNotifications(prev => prev.map(n => !n.read_at ? {\n      ...n,\n      read_at: new Date().toISOString()\n    } : n));\n    setUnreadCount(0);\n    try {\n      const response = await fetch(`${API_BASE_URL}/notifications/mark-all-read`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Server failed to mark all as read: ${response.status}`);\n      }\n    } catch (err) {\n      console.error(\"Failed to mark all notifications as read:\", err);\n      setError(\"Failed to update all notifications.\");\n      setNotifications(previousNotifications);\n      setUnreadCount(previousUnreadCount);\n    }\n  };\n  const CustomToggle = /*#__PURE__*/React.forwardRef(({\n    children,\n    onClick\n  }, ref) => /*#__PURE__*/_jsxDEV(Button, {\n    ref: ref,\n    onClick: e => {\n      e.preventDefault();\n      onClick(e);\n    },\n    variant: \"link\",\n    className: \"position-relative text-decoration-none border-0 p-0 me-2\",\n    \"aria-label\": \"Notifications\",\n    title: `${unreadCount} unread notifications`,\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"bi bi-bell-fill text-white fs-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(Badge, {\n      pill: true,\n      bg: \"danger\",\n      className: \"position-absolute top-0 start-100 translate-middle\",\n      style: {\n        fontSize: '0.6em',\n        padding: '0.3em 0.5em'\n      },\n      children: [unreadCount > 9 ? '9+' : unreadCount, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"unread notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 213\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    onToggle: handleToggle,\n    show: isOpen,\n    align: \"end\",\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      as: CustomToggle,\n      id: \"dropdown-notification-bell\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      variant: \"dark\",\n      className: \"shadow mt-2 dropdown-menu-scrollable\",\n      style: {\n        minWidth: '350px',\n        maxWidth: '400px',\n        maxHeight: '450px',\n        overflowY: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Header, {\n        className: \"d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-light\",\n          size: \"sm\",\n          onClick: handleMarkAllAsRead,\n          title: \"Mark all as read\",\n          children: \"Mark All Read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {\n        className: \"mt-1 mb-0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-3 text-muted\",\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          size: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 75\n        }, this), \" Loading...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 31\n      }, this), \" \", error && !isLoading && /*#__PURE__*/_jsxDEV(Dropdown.ItemText, {\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          className: \"mb-0 mx-2\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 41\n      }, this), !isLoading && !error && notifications.length === 0 && /*#__PURE__*/_jsxDEV(Dropdown.ItemText, {\n        className: \"text-muted text-center p-3\",\n        children: \"You have no notifications.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 73\n      }, this), !isLoading && !error && notifications.length > 0 && /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: notifications.map(notification => {\n          var _notification$data2;\n          return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            action: true,\n            onClick: e => handleNotificationClick(notification, e),\n            \"data-read\": !!notification.read_at,\n            className: `bg-dark text-light border-secondary px-3 py-2 d-flex flex-column ${!notification.read_at ? 'notification-unread fw-bold' : 'notification-read text-muted'}`,\n            style: {\n              cursor: 'pointer',\n              opacity: !notification.read_at ? 1 : 0.8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between align-items-start mb-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                style: {\n                  fontSize: '0.9em',\n                  marginRight: '10px',\n                  flexGrow: 1\n                },\n                children: ((_notification$data2 = notification.data) === null || _notification$data2 === void 0 ? void 0 : _notification$data2.message) || 'Notification message missing.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 37\n              }, this), !notification.read_at && /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                size: \"sm\",\n                className: \"ms-auto border-0 flex-shrink-0 p-0\",\n                style: {\n                  lineHeight: '1'\n                },\n                onClick: e => handleMarkAsRead(notification.id, e),\n                title: \"Mark as read\",\n                \"aria-label\": \"Mark notification as read\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-check-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 299\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 64\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"d-block text-info\",\n              style: {\n                fontSize: '0.75em'\n              },\n              children: formatDate(notification.created_at, {\n                dateStyle: 'short',\n                timeStyle: 'short'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this)]\n          }, notification.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n}\n_s(NotificationBell, \"QoGppgLrqNPZeggBNfxJNmyFKMg=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = NotificationBell;\nexport default NotificationBell;\nvar _c;\n$RefreshReg$(_c, \"NotificationBell\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Dropdown","Badge","Spinner","ListGroup","Button","Alert","useNavigate","useAuth","API_BASE_URL","formatDate","jsxDEV","_jsxDEV","NotificationBell","_s","token","navigate","notifications","setNotifications","unreadCount","setUnreadCount","isLoading","setIsLoading","error","setError","isOpen","setIsOpen","isFetchingRef","fetchNotifications","current","console","log","isFetching","hasToken","response","fetch","headers","Authorization","Accept","ok","errorMsg","status","errData","json","message","parseError","warn","Error","data","fetchedNotifications","currentUnreadCount","filter","n","read_at","length","err","handleToggle","nextShowState","handleMarkAsRead","notificationId","e","stopPropagation","targetNotification","find","id","previousNotifications","previousUnreadCount","prev","map","Date","toISOString","Math","max","method","handleNotificationClick","notification","_notification$data","action_url","handleMarkAllAsRead","CustomToggle","forwardRef","children","onClick","ref","preventDefault","variant","className","title","fileName","_jsxFileName","lineNumber","columnNumber","pill","bg","style","fontSize","padding","onToggle","show","align","Toggle","as","Menu","minWidth","maxWidth","maxHeight","overflowY","Header","size","Divider","animation","ItemText","_notification$data2","Item","action","cursor","opacity","marginRight","flexGrow","lineHeight","created_at","dateStyle","timeStyle","_c","$RefreshReg$"],"sources":["D:/Harvy/Dev/ProjectManagementSystem/frontend/src/components/Notifications/NotificationBell.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react'; // Import useRef\r\nimport { Dropdown, Badge, Spinner, ListGroup, Button, Alert } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext'; // Adjust path if needed\r\nimport { API_BASE_URL } from '../../App'; // Adjust path if needed\r\nimport { formatDate } from '../../utils/formatting'; // Adjust path if needed\r\n\r\nfunction NotificationBell() {\r\n  const { token } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false); // State for UI loading indicator\r\n  const [error, setError] = useState(null);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  // --- FIX: Use a ref to track if a fetch is in progress ---\r\n  const isFetchingRef = useRef(false);\r\n\r\n  // Fetch notifications from the API\r\n  const fetchNotifications = useCallback(async () => {\r\n    // --- FIX: Check the ref, not the state, to prevent concurrent fetches ---\r\n    if (isFetchingRef.current || !token) {\r\n       console.log('Fetch skipped:', { isFetching: isFetchingRef.current, hasToken: !!token });\r\n       return;\r\n    }\r\n\r\n    console.log('Starting fetch...');\r\n    isFetchingRef.current = true; // Mark as fetching (using ref)\r\n    setIsLoading(true);           // Set state for UI spinner\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/notifications`, {\r\n        headers: { Authorization: `Bearer ${token}`, Accept: 'application/json' },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        let errorMsg = `HTTP error ${response.status}`;\r\n         try { const errData = await response.json(); errorMsg = errData.message || errorMsg; }\r\n         catch (parseError) { console.warn(\"Could not parse error response as JSON\"); }\r\n        throw new Error(errorMsg);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"Notifications Data Received:\", data);\r\n\r\n      const fetchedNotifications = data.data || [];\r\n      setNotifications(fetchedNotifications);\r\n      const currentUnreadCount = fetchedNotifications.filter(n => !n.read_at).length;\r\n      setUnreadCount(currentUnreadCount);\r\n\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch notifications:\", err);\r\n      setError(\"Couldn't load notifications.\");\r\n      setUnreadCount(0);\r\n      setNotifications([]);\r\n    } finally {\r\n      console.log('Finished fetch.');\r\n      isFetchingRef.current = false; // Mark as not fetching (using ref)\r\n      setIsLoading(false);           // Set state to hide UI spinner\r\n    }\r\n    // Dependency array is correct now, as 'isLoading' state is not read here\r\n  }, [token]);\r\n\r\n  // Initial fetch on component mount\r\n  useEffect(() => {\r\n    if (token) {\r\n        fetchNotifications();\r\n    } else {\r\n        console.log(\"Skipping initial fetch: No token\");\r\n    }\r\n  }, [fetchNotifications, token]); // Depends on token and the stable fetchNotifications\r\n\r\n  // --- Rest of the component remains the same ---\r\n  // handleToggle, handleMarkAsRead, handleNotificationClick, handleMarkAllAsRead, CustomToggle, render...\r\n  // (Ensure the rest of your component code is included below)\r\n\r\n  const handleToggle = (nextShowState) => {\r\n     setIsOpen(nextShowState);\r\n  };\r\n\r\n  const handleMarkAsRead = async (notificationId, e) => {\r\n      e.stopPropagation();\r\n      const targetNotification = notifications.find(n => n.id === notificationId);\r\n      if (!targetNotification || targetNotification.read_at) return;\r\n\r\n      const previousNotifications = [...notifications];\r\n      const previousUnreadCount = unreadCount;\r\n\r\n      setNotifications(prev => prev.map(n => n.id === notificationId ? { ...n, read_at: new Date().toISOString() } : n));\r\n      setUnreadCount(prev => Math.max(0, prev - 1));\r\n\r\n      try {\r\n          const response = await fetch(`${API_BASE_URL}/notifications/${notificationId}/read`, {\r\n              method: 'PATCH',\r\n              headers: { Authorization: `Bearer ${token}`, Accept: 'application/json' },\r\n          });\r\n          if (!response.ok) { throw new Error(`Server failed to mark as read: ${response.status}`); }\r\n      } catch (err) {\r\n          console.error(\"Failed to mark notification as read:\", err);\r\n          setError(\"Failed to update notification status.\");\r\n          setNotifications(previousNotifications);\r\n          setUnreadCount(previousUnreadCount);\r\n      }\r\n  };\r\n\r\n    const handleNotificationClick = (notification, e) => {\r\n        if (!notification.read_at) {\r\n            handleMarkAsRead(notification.id, e);\r\n        }\r\n        if (notification.data?.action_url) {\r\n            navigate(notification.data.action_url);\r\n            setIsOpen(false);\r\n        }\r\n    };\r\n\r\n    const handleMarkAllAsRead = async (e) => {\r\n        e.stopPropagation();\r\n        if (unreadCount === 0) return;\r\n\r\n        const previousNotifications = [...notifications];\r\n        const previousUnreadCount = unreadCount;\r\n\r\n        setNotifications(prev => prev.map(n => !n.read_at ? { ...n, read_at: new Date().toISOString() } : n));\r\n        setUnreadCount(0);\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/notifications/mark-all-read`, {\r\n                method: 'POST',\r\n                headers: { Authorization: `Bearer ${token}`, Accept: 'application/json' },\r\n            });\r\n            if (!response.ok) { throw new Error(`Server failed to mark all as read: ${response.status}`); }\r\n        } catch (err) {\r\n            console.error(\"Failed to mark all notifications as read:\", err);\r\n            setError(\"Failed to update all notifications.\");\r\n            setNotifications(previousNotifications);\r\n            setUnreadCount(previousUnreadCount);\r\n        }\r\n    };\r\n\r\n    const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n        <Button ref={ref} onClick={(e) => { e.preventDefault(); onClick(e); }} variant=\"link\" className=\"position-relative text-decoration-none border-0 p-0 me-2\" aria-label=\"Notifications\" title={`${unreadCount} unread notifications`}>\r\n            <i className=\"bi bi-bell-fill text-white fs-5\"></i>\r\n            {unreadCount > 0 && (<Badge pill bg=\"danger\" className=\"position-absolute top-0 start-100 translate-middle\" style={{ fontSize: '0.6em', padding: '0.3em 0.5em' }}>{unreadCount > 9 ? '9+' : unreadCount}<span className=\"visually-hidden\">unread notifications</span></Badge>)}\r\n        </Button>\r\n    ));\r\n\r\n    return (\r\n        <Dropdown onToggle={handleToggle} show={isOpen} align=\"end\">\r\n            <Dropdown.Toggle as={CustomToggle} id=\"dropdown-notification-bell\" />\r\n            <Dropdown.Menu variant=\"dark\" className=\"shadow mt-2 dropdown-menu-scrollable\" style={{minWidth: '350px', maxWidth:'400px', maxHeight: '450px', overflowY: 'auto'}}>\r\n                <Dropdown.Header className=\"d-flex justify-content-between align-items-center\">\r\n                    <span>Notifications</span>\r\n                    {unreadCount > 0 && (<Button variant=\"outline-light\" size=\"sm\" onClick={handleMarkAllAsRead} title=\"Mark all as read\">Mark All Read</Button>)}\r\n                </Dropdown.Header>\r\n                <Dropdown.Divider className=\"mt-1 mb-0\"/>\r\n                {isLoading && <div className=\"text-center p-3 text-muted\"><Spinner animation=\"border\" size=\"sm\" /> Loading...</div>} {/* Still uses isLoading state */}\r\n                {error && !isLoading && <Dropdown.ItemText><Alert variant=\"danger\" className=\"mb-0 mx-2\">{error}</Alert></Dropdown.ItemText>}\r\n                {!isLoading && !error && notifications.length === 0 && (<Dropdown.ItemText className=\"text-muted text-center p-3\">You have no notifications.</Dropdown.ItemText>)}\r\n                {!isLoading && !error && notifications.length > 0 && (\r\n                    <ListGroup variant=\"flush\">\r\n                        {notifications.map(notification => (\r\n                            <ListGroup.Item key={notification.id} action onClick={(e) => handleNotificationClick(notification, e)} data-read={!!notification.read_at} className={`bg-dark text-light border-secondary px-3 py-2 d-flex flex-column ${!notification.read_at ? 'notification-unread fw-bold' : 'notification-read text-muted'}`} style={{ cursor: 'pointer', opacity: !notification.read_at ? 1 : 0.8 }}>\r\n                                <div className=\"d-flex justify-content-between align-items-start mb-1\">\r\n                                    <small style={{fontSize: '0.9em', marginRight: '10px', flexGrow: 1}}>{notification.data?.message || 'Notification message missing.'}</small>\r\n                                    {!notification.read_at && (<Button variant=\"outline-secondary\" size=\"sm\" className=\"ms-auto border-0 flex-shrink-0 p-0\" style={{ lineHeight: '1' }} onClick={(e) => handleMarkAsRead(notification.id, e)} title=\"Mark as read\" aria-label=\"Mark notification as read\"><i className=\"bi bi-check-circle\"></i></Button>)}\r\n                                </div>\r\n                                <small className=\"d-block text-info\" style={{fontSize: '0.75em'}}>{formatDate(notification.created_at, { dateStyle: 'short', timeStyle: 'short' })}</small>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    );\r\n}\r\nexport default NotificationBell;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}