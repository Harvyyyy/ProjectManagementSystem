{"ast":null,"code":"var _jsxFileName = \"D:\\\\Harvy\\\\Dev\\\\ProjectManagementSystem\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\TasksTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../../context/AuthContext';\nimport { API_BASE_URL } from '../../App';\nimport { Modal, Button, Form, Badge, Table, Spinner, Alert, Row, Col } from 'react-bootstrap';\n// Assuming formatCurrency and formatDuration are correctly imported from your utils\nimport { formatCurrency, formatDuration } from '../../utils/formatting'; // Adjust path if needed\nimport TimeLogForm from './TimeLogForm'; // <-- IMPORT TimeLogForm\n\n// Helper functions (define outside or import)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getTaskStatusColor = status => {\n  switch (status === null || status === void 0 ? void 0 : status.toLowerCase()) {\n    case 'pending':\n      return 'secondary';\n    case 'in progress':\n      return 'info';\n    case 'completed':\n      return 'success';\n    default:\n      return 'light';\n  }\n};\nconst getTaskPriorityColor = priority => {\n  switch (priority) {\n    case 'low':\n      return 'success';\n    case 'medium':\n      return 'warning';\n    case 'high':\n      return 'danger';\n    default:\n      return 'light';\n  }\n};\nfunction TaskTable() {\n  _s();\n  const {\n    token\n  } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [modalError, setModalError] = useState(null);\n\n  // State for Edit/Create Task Modal\n  const [showModal, setShowModal] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [formData, setFormData] = useState({\n    project_id: '',\n    title: '',\n    description: '',\n    status: 'pending',\n    priority: 'medium',\n    assigned_user_id: '',\n    due_date: '',\n    actual_cost: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // --- NEW: State for Time Log Modal ---\n  const [showTimeLogModal, setShowTimeLogModal] = useState(false);\n  const [selectedTaskForLog, setSelectedTaskForLog] = useState(null); // Store {id, title} of task\n  // --- END NEW ---\n\n  const taskStatuses = ['pending', 'in progress', 'completed'];\n  const taskPriorities = ['low', 'medium', 'high'];\n\n  // --- Data Fetching ---\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [tasksResponse, projectsResponse, usersResponse] = await Promise.all([\n      // IMPORTANT: Ensure your API loads project.currency AND task.total_time_spent\n      // e.g., Laravel: Task::with(['project:id,name,currency', 'assignedUser:id,name', 'owner:id,name'])->get();\n      // The total_time_spent should be included automatically via $appends in Task model\n      fetch(`${API_BASE_URL}/tasks`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Accept': 'application/json'\n        }\n      }), fetch(`${API_BASE_URL}/projects`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Accept': 'application/json'\n        }\n      }), fetch(`${API_BASE_URL}/users`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Accept': 'application/json'\n        }\n      })]);\n\n      // ... (Response checking remains the same) ...\n      if (!tasksResponse.ok) throw new Error(`Task fetch failed: ${tasksResponse.status} ${tasksResponse.statusText}`);\n      if (!projectsResponse.ok) throw new Error(`Project fetch failed: ${projectsResponse.status} ${projectsResponse.statusText}`);\n      if (!usersResponse.ok) throw new Error(`User fetch failed: ${usersResponse.status} ${usersResponse.statusText}`);\n      const tasksData = await tasksResponse.json();\n      const projectsData = await projectsResponse.json();\n      const usersData = await usersResponse.json();\n\n      // ... (Setting state remains the same, assuming API provides needed data) ...\n      setTasks(Array.isArray(tasksData) ? tasksData : tasksData !== null && tasksData !== void 0 && tasksData.data && Array.isArray(tasksData.data) ? tasksData.data : []);\n      if (projectsData && Array.isArray(projectsData.data)) {\n        setProjects(projectsData.data);\n      } else if (Array.isArray(projectsData)) {\n        setProjects(projectsData);\n      } else {\n        console.error(\"API did not return expected projects structure:\", projectsData);\n        setProjects([]);\n        setError(prev => prev ? `${prev}\\nCould not load projects.` : 'Could not load projects.');\n      }\n      setUsers(Array.isArray(usersData) ? usersData : usersData !== null && usersData !== void 0 && usersData.data && Array.isArray(usersData.data) ? usersData.data : []);\n    } catch (e) {\n      console.error('Failed to fetch data:', e);\n      setError(`Failed to load data: ${e.message}.`);\n    } finally {\n      setLoading(false);\n    }\n  }, [token]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  // --- Modal Handlers ---\n  const handleShowCreateModal = () => {/* ... (remains same) ... */};\n  const handleShowEditModal = task => {/* ... (remains same) ... */};\n  const handleCloseModal = () => {/* ... (remains same) ... */};\n  const handleInputChange = e => {/* ... (remains same) ... */};\n\n  // --- Form Submission ---\n  const handleSubmit = async e => {/* ... (remains same) ... */};\n\n  // --- Deletion Handler ---\n  const handleDelete = async taskId => {/* ... (remains same) ... */};\n\n  // --- NEW: Time Log Modal Handlers ---\n  const handleShowTimeLogModal = task => {\n    setSelectedTaskForLog({\n      id: task.id,\n      title: task.title\n    }); // Store needed info\n    setShowTimeLogModal(true);\n  };\n  const handleCloseTimeLogModal = () => {\n    setShowTimeLogModal(false);\n    setSelectedTaskForLog(null);\n  };\n\n  // This function is passed to TimeLogForm and called on successful save\n  const handleTimeLogSaveSuccess = () => {\n    handleCloseTimeLogModal();\n    fetchData(); // Refresh task list to show updated total time\n  };\n  // --- END NEW ---\n\n  // --- Render Logic ---\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center align-items-center text-light vh-100\",\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      className: \"me-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 109\n    }, this), \" Loading...\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 25\n  }, this);\n  // Hide main error if any modal is open\n  if (error && !showModal && !showTimeLogModal) return /*#__PURE__*/_jsxDEV(Alert, {\n    variant: \"danger\",\n    className: \"bg-dark text-light border-danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 58\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-md-4\",\n    style: {\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #232323, #1a1a1a)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark p-4 rounded shadow mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3 flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-light mb-2 mb-md-0\",\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleShowCreateModal,\n          disabled: projects.length === 0 && !loading,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-plus-lg me-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), \" Create New Task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), error && !showModal && !showTimeLogModal && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        className: \"bg-dark text-light border-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 55\n      }, this), projects.length === 0 && !loading && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"warning\",\n        className: \"bg-dark text-warning border-warning\",\n        children: \"Create a project before adding tasks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 48\n      }, this), tasks.length === 0 && projects.length > 0 && !loading && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"info\",\n        className: \"bg-dark text-info border-info mt-3\",\n        children: \"No tasks found. Click 'Create New Task' to add one.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 68\n      }, this), tasks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          variant: \"dark\",\n          striped: true,\n          hover: true,\n          responsive: \"sm\",\n          className: \"align-middle\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Assignee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-end\",\n                children: \"Cost\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-end\",\n                children: \"Time Spent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tasks.map(task => {\n              var _task$project, _task$assigned_user, _task$project2;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"fw-bold\",\n                  children: task.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ((_task$project = task.project) === null || _task$project === void 0 ? void 0 : _task$project.name) || /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-muted\",\n                    children: \"N/A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 48\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Badge, {\n                    bg: getTaskStatusColor(task.status),\n                    className: \"text-capitalize p-2\",\n                    children: task.status || 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.due_date ? new Date(task.due_date).toLocaleDateString() : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-muted\",\n                    children: \"N/A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 89\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ((_task$assigned_user = task.assigned_user) === null || _task$assigned_user === void 0 ? void 0 : _task$assigned_user.name) || /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-muted\",\n                    children: \"Unassigned\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 54\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-end\",\n                  children: task.actual_cost !== null && task.actual_cost > 0 ? formatCurrency(task.actual_cost, ((_task$project2 = task.project) === null || _task$project2 === void 0 ? void 0 : _task$project2.currency) || 'PHP') // Assuming PHP default if needed\n                  : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-muted\",\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-end\",\n                  children: task.total_time_spent !== null && task.total_time_spent > 0 // Check if data exists\n                  ? formatDuration(task.total_time_spent) // Format minutes\n                  : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-muted\",\n                    children: \"0m\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 27\n                  }, this) // Show 0m if none or null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-info\" // Changed color for distinction\n                    ,\n                    size: \"sm\",\n                    onClick: () => handleShowTimeLogModal(task) // Calls new handler\n                    ,\n                    className: \"me-2 py-1 px-2\",\n                    title: \"Log Time Spent on Task\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-clock-history me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 28\n                    }, this), \" Log\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-light\",\n                    size: \"sm\",\n                    onClick: () => handleShowEditModal(task),\n                    className: \"me-2 py-1 px-2\",\n                    title: \"Edit Task Details\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-pencil-fill me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 27\n                    }, this), \" Edit\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 24\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-danger\",\n                    size: \"sm\",\n                    onClick: () => handleDelete(task.id),\n                    title: \"Delete Task\",\n                    className: \"py-1 px-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-trash-fill me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 27\n                    }, this), \" Delete\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this)]\n              }, task.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      backdrop: \"static\",\n      keyboard: false,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), selectedTaskForLog && /*#__PURE__*/_jsxDEV(TimeLogForm, {\n      show: showTimeLogModal,\n      handleClose: handleCloseTimeLogModal,\n      taskId: selectedTaskForLog.id,\n      taskTitle: selectedTaskForLog.title,\n      onSaveSuccess: handleTimeLogSaveSuccess // Pass the callback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskTable, \"+FW97hk3AAjr2DBD1vRk6GoUcpM=\", false, function () {\n  return [useAuth];\n});\n_c = TaskTable;\nexport default TaskTable;\nvar _c;\n$RefreshReg$(_c, \"TaskTable\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useAuth","API_BASE_URL","Modal","Button","Form","Badge","Table","Spinner","Alert","Row","Col","formatCurrency","formatDuration","TimeLogForm","jsxDEV","_jsxDEV","getTaskStatusColor","status","toLowerCase","getTaskPriorityColor","priority","TaskTable","_s","token","tasks","setTasks","projects","setProjects","users","setUsers","loading","setLoading","error","setError","modalError","setModalError","showModal","setShowModal","isEditing","setIsEditing","currentTask","setCurrentTask","formData","setFormData","project_id","title","description","assigned_user_id","due_date","actual_cost","isSubmitting","setIsSubmitting","showTimeLogModal","setShowTimeLogModal","selectedTaskForLog","setSelectedTaskForLog","taskStatuses","taskPriorities","fetchData","tasksResponse","projectsResponse","usersResponse","Promise","all","fetch","headers","ok","Error","statusText","tasksData","json","projectsData","usersData","Array","isArray","data","console","prev","e","message","handleShowCreateModal","handleShowEditModal","task","handleCloseModal","handleInputChange","handleSubmit","handleDelete","taskId","handleShowTimeLogModal","id","handleCloseTimeLogModal","handleTimeLogSaveSuccess","className","children","animation","fileName","_jsxFileName","lineNumber","columnNumber","variant","style","minHeight","background","onClick","disabled","length","striped","hover","responsive","map","_task$project","_task$assigned_user","_task$project2","project","name","bg","Date","toLocaleDateString","assigned_user","currency","total_time_spent","size","show","onHide","backdrop","keyboard","centered","Header","onSubmit","Body","Footer","handleClose","taskTitle","onSaveSuccess","_c","$RefreshReg$"],"sources":["D:/Harvy/Dev/ProjectManagementSystem/frontend/src/components/Dashboard/TasksTable.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { API_BASE_URL } from '../../App';\r\nimport { Modal, Button, Form, Badge, Table, Spinner, Alert, Row, Col } from 'react-bootstrap';\r\n// Assuming formatCurrency and formatDuration are correctly imported from your utils\r\nimport { formatCurrency, formatDuration } from '../../utils/formatting'; // Adjust path if needed\r\nimport TimeLogForm from './TimeLogForm'; // <-- IMPORT TimeLogForm\r\n\r\n// Helper functions (define outside or import)\r\nconst getTaskStatusColor = (status) => {\r\n  switch (status?.toLowerCase()) {\r\n    case 'pending': return 'secondary';\r\n    case 'in progress': return 'info';\r\n    case 'completed': return 'success';\r\n    default: return 'light';\r\n  }\r\n};\r\n\r\nconst getTaskPriorityColor = (priority) => {\r\n  switch (priority) {\r\n    case 'low': return 'success';\r\n    case 'medium': return 'warning';\r\n    case 'high': return 'danger';\r\n    default: return 'light';\r\n  }\r\n};\r\n\r\n\r\nfunction TaskTable() {\r\n  const { token } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [modalError, setModalError] = useState(null);\r\n\r\n  // State for Edit/Create Task Modal\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentTask, setCurrentTask] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    project_id: '', title: '', description: '', status: 'pending', priority: 'medium',\r\n    assigned_user_id: '', due_date: '', actual_cost: '',\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // --- NEW: State for Time Log Modal ---\r\n  const [showTimeLogModal, setShowTimeLogModal] = useState(false);\r\n  const [selectedTaskForLog, setSelectedTaskForLog] = useState(null); // Store {id, title} of task\r\n  // --- END NEW ---\r\n\r\n  const taskStatuses = ['pending', 'in progress', 'completed'];\r\n  const taskPriorities = ['low', 'medium', 'high'];\r\n\r\n  // --- Data Fetching ---\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const [tasksResponse, projectsResponse, usersResponse] = await Promise.all([\r\n        // IMPORTANT: Ensure your API loads project.currency AND task.total_time_spent\r\n        // e.g., Laravel: Task::with(['project:id,name,currency', 'assignedUser:id,name', 'owner:id,name'])->get();\r\n        // The total_time_spent should be included automatically via $appends in Task model\r\n        fetch(`${API_BASE_URL}/tasks`, { headers: { 'Authorization': `Bearer ${token}`, 'Accept': 'application/json' } }),\r\n        fetch(`${API_BASE_URL}/projects`, { headers: { 'Authorization': `Bearer ${token}`, 'Accept': 'application/json' } }),\r\n        fetch(`${API_BASE_URL}/users`, { headers: { 'Authorization': `Bearer ${token}`, 'Accept': 'application/json' } }),\r\n      ]);\r\n\r\n      // ... (Response checking remains the same) ...\r\n       if (!tasksResponse.ok) throw new Error(`Task fetch failed: ${tasksResponse.status} ${tasksResponse.statusText}`);\r\n       if (!projectsResponse.ok) throw new Error(`Project fetch failed: ${projectsResponse.status} ${projectsResponse.statusText}`);\r\n       if (!usersResponse.ok) throw new Error(`User fetch failed: ${usersResponse.status} ${usersResponse.statusText}`);\r\n\r\n      const tasksData = await tasksResponse.json();\r\n      const projectsData = await projectsResponse.json();\r\n      const usersData = await usersResponse.json();\r\n\r\n      // ... (Setting state remains the same, assuming API provides needed data) ...\r\n      setTasks(Array.isArray(tasksData) ? tasksData : (tasksData?.data && Array.isArray(tasksData.data) ? tasksData.data : []));\r\n      if (projectsData && Array.isArray(projectsData.data)) { setProjects(projectsData.data); }\r\n      else if (Array.isArray(projectsData)) { setProjects(projectsData); }\r\n      else { console.error(\"API did not return expected projects structure:\", projectsData); setProjects([]); setError(prev => prev ? `${prev}\\nCould not load projects.` : 'Could not load projects.'); }\r\n      setUsers(Array.isArray(usersData) ? usersData : (usersData?.data && Array.isArray(usersData.data) ? usersData.data : []));\r\n\r\n\r\n    } catch (e) {\r\n      console.error('Failed to fetch data:', e);\r\n      setError(`Failed to load data: ${e.message}.`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  // --- Modal Handlers ---\r\n  const handleShowCreateModal = () => { /* ... (remains same) ... */ };\r\n  const handleShowEditModal = (task) => { /* ... (remains same) ... */ };\r\n  const handleCloseModal = () => { /* ... (remains same) ... */ };\r\n  const handleInputChange = (e) => { /* ... (remains same) ... */ };\r\n\r\n  // --- Form Submission ---\r\n  const handleSubmit = async (e) => { /* ... (remains same) ... */ };\r\n\r\n  // --- Deletion Handler ---\r\n  const handleDelete = async (taskId) => { /* ... (remains same) ... */ };\r\n\r\n  // --- NEW: Time Log Modal Handlers ---\r\n  const handleShowTimeLogModal = (task) => {\r\n      setSelectedTaskForLog({ id: task.id, title: task.title }); // Store needed info\r\n      setShowTimeLogModal(true);\r\n  };\r\n\r\n  const handleCloseTimeLogModal = () => {\r\n      setShowTimeLogModal(false);\r\n      setSelectedTaskForLog(null);\r\n  };\r\n\r\n  // This function is passed to TimeLogForm and called on successful save\r\n  const handleTimeLogSaveSuccess = () => {\r\n      handleCloseTimeLogModal();\r\n      fetchData(); // Refresh task list to show updated total time\r\n  };\r\n  // --- END NEW ---\r\n\r\n\r\n  // --- Render Logic ---\r\n  if (loading) return ( <div className=\"d-flex justify-content-center align-items-center text-light vh-100\"><Spinner animation=\"border\" className=\"me-2\"/> Loading...</div> );\r\n  // Hide main error if any modal is open\r\n  if (error && !showModal && !showTimeLogModal) return ( <Alert variant=\"danger\" className=\"bg-dark text-light border-danger\">{error}</Alert> );\r\n\r\n  return (\r\n    <div className=\"p-md-4\" style={{ minHeight: '100vh', background: 'linear-gradient(135deg, #232323, #1a1a1a)' }}>\r\n      <div className=\"bg-dark p-4 rounded shadow mb-4\">\r\n        {/* Header and Create Button */}\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3 flex-wrap\">\r\n          <h2 className=\"text-light mb-2 mb-md-0\">Tasks</h2>\r\n          <Button variant=\"primary\" onClick={handleShowCreateModal} disabled={projects.length === 0 && !loading}>\r\n            <i className=\"bi bi-plus-lg me-1\"></i> Create New Task\r\n          </Button>\r\n        </div>\r\n\r\n         {/* Display Errors/Info Messages */}\r\n         {error && !showModal && !showTimeLogModal && <Alert variant=\"danger\" className=\"bg-dark text-light border-danger\">{error}</Alert>}\r\n         {projects.length === 0 && !loading && <Alert variant=\"warning\" className=\"bg-dark text-warning border-warning\">Create a project before adding tasks.</Alert>}\r\n         {tasks.length === 0 && projects.length > 0 && !loading && <Alert variant=\"info\" className=\"bg-dark text-info border-info mt-3\">No tasks found. Click 'Create New Task' to add one.</Alert>}\r\n\r\n        {/* Task Table - UPDATED */}\r\n        {tasks.length > 0 && (\r\n          <div className=\"table-responsive\">\r\n            <Table variant=\"dark\" striped hover responsive=\"sm\" className=\"align-middle\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Title</th>\r\n                  <th>Project</th>\r\n                  <th>Status</th>\r\n                  {/*<th>Priority</th> */} {/* Can hide Priority if table gets too wide */}\r\n                  <th>Due Date</th>\r\n                  <th>Assignee</th>\r\n                  <th className=\"text-end\">Cost</th>\r\n                  <th className=\"text-end\">Time Spent</th> {/* <-- ADDED Header */}\r\n                  <th className=\"text-center\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tasks.map(task => (\r\n                  <tr key={task.id}>\r\n                    <td className=\"fw-bold\">{task.title}</td>\r\n                    <td>{task.project?.name || <span className=\"text-muted\">N/A</span>}</td>\r\n                    <td><Badge bg={getTaskStatusColor(task.status)} className=\"text-capitalize p-2\">{task.status || 'N/A'}</Badge></td>\r\n                    {/* <td><Badge bg={getTaskPriorityColor(task.priority)} className=\"text-capitalize p-2\">{task.priority || 'N/A'}</Badge></td> */}\r\n                    <td>{task.due_date ? new Date(task.due_date).toLocaleDateString() : <span className=\"text-muted\">N/A</span>}</td>\r\n                    <td>{task.assigned_user?.name || <span className=\"text-muted\">Unassigned</span>}</td>\r\n                    <td className=\"text-end\">\r\n                      {task.actual_cost !== null && task.actual_cost > 0\r\n                        ? formatCurrency(task.actual_cost, task.project?.currency || 'PHP') // Assuming PHP default if needed\r\n                        : <span className=\"text-muted\">-</span>\r\n                      }\r\n                    </td>\r\n                    {/* --- ADDED Time Spent Cell --- */}\r\n                    <td className=\"text-end\">\r\n                      {/* Use total_time_spent from backend accessor */}\r\n                      {task.total_time_spent !== null && task.total_time_spent > 0 // Check if data exists\r\n                        ? formatDuration(task.total_time_spent) // Format minutes\r\n                        : <span className=\"text-muted\">0m</span> // Show 0m if none or null\r\n                      }\r\n                    </td>\r\n                    {/* --- END Time Spent Cell --- */}\r\n                    <td className=\"text-center\">\r\n                        {/* --- ADDED Log Time Button --- */}\r\n                        <Button\r\n                            variant=\"outline-info\" // Changed color for distinction\r\n                            size=\"sm\"\r\n                            onClick={() => handleShowTimeLogModal(task)} // Calls new handler\r\n                            className=\"me-2 py-1 px-2\"\r\n                            title=\"Log Time Spent on Task\"\r\n                        >\r\n                           <i className=\"bi bi-clock-history me-1\"></i> Log\r\n                       </Button>\r\n                       {/* --- END Log Time Button --- */}\r\n\r\n                       <Button variant=\"outline-light\" size=\"sm\" onClick={() => handleShowEditModal(task)} className=\"me-2 py-1 px-2\" title=\"Edit Task Details\">\r\n                          <i className=\"bi bi-pencil-fill me-1\"></i> Edit\r\n                        </Button>\r\n                        <Button variant=\"outline-danger\" size=\"sm\" onClick={() => handleDelete(task.id)} title=\"Delete Task\" className=\"py-1 px-2\">\r\n                          <i className=\"bi bi-trash-fill me-1\"></i> Delete\r\n                        </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* --- Edit/Create Task Modal (remains unchanged from your provided code) --- */}\r\n      <Modal show={showModal} onHide={handleCloseModal} backdrop=\"static\" keyboard={false} centered>\r\n        {/* ... Structure from your code ... */}\r\n        <Modal.Header /* ... */ >{/* ... */}</Modal.Header>\r\n        <Form onSubmit={handleSubmit}>\r\n            <Modal.Body /* ... */ >\r\n                {/* ... All existing form fields including Actual Cost ... */}\r\n            </Modal.Body>\r\n            <Modal.Footer /* ... */ >{/* ... */}</Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n      {/* --- End Edit/Create Modal --- */}\r\n\r\n\r\n      {/* --- NEW: Render Time Log Modal --- */}\r\n      {selectedTaskForLog && (\r\n          <TimeLogForm\r\n              show={showTimeLogModal}\r\n              handleClose={handleCloseTimeLogModal}\r\n              taskId={selectedTaskForLog.id}\r\n              taskTitle={selectedTaskForLog.title}\r\n              onSaveSuccess={handleTimeLogSaveSuccess} // Pass the callback\r\n          />\r\n      )}\r\n      {/* --- END NEW --- */}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}