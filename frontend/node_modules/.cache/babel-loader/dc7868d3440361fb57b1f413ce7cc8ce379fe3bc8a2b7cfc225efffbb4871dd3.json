{"ast":null,"code":"var _jsxFileName = \"D:\\\\Harvy\\\\Dev\\\\ProjectManagementSystem\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\TasksTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../../context/AuthContext';\nimport { API_BASE_URL } from '../../App';\nimport { Modal, Button, Form, Badge, Table, Spinner, Alert, Row, Col } from 'react-bootstrap';\n// Assuming formatCurrency and formatDuration are correctly imported from your utils\nimport { formatCurrency, formatDuration } from '../../utils/formatting'; // Adjust path if needed\nimport TimeLogForm from './TimeLogForm'; // Import TimeLogForm\n\n// Helper functions\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTaskStatusColor = status => {\n  switch (status === null || status === void 0 ? void 0 : status.toLowerCase()) {\n    case 'pending':\n      return 'secondary';\n    case 'in progress':\n      return 'info';\n    case 'completed':\n      return 'success';\n    default:\n      return 'light';\n  }\n};\nconst getTaskPriorityColor = priority => {\n  switch (priority) {\n    case 'low':\n      return 'success';\n    case 'medium':\n      return 'warning';\n    case 'high':\n      return 'danger';\n    default:\n      return 'light';\n  }\n};\nfunction TaskTable() {\n  _s();\n  const {\n    token\n  } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [modalError, setModalError] = useState(null);\n\n  // State for Edit/Create Task Modal\n  const [showModal, setShowModal] = useState(false);\n  const [isEditing, setIsEditing] = useState(false); // This flag controls conditional rendering\n  const [currentTask, setCurrentTask] = useState(null);\n  const [formData, setFormData] = useState({\n    project_id: '',\n    title: '',\n    description: '',\n    status: 'pending',\n    priority: 'medium',\n    assigned_user_id: '',\n    due_date: '',\n    actual_cost: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // State for Time Log Modal\n  const [showTimeLogModal, setShowTimeLogModal] = useState(false);\n  const [selectedTaskForLog, setSelectedTaskForLog] = useState(null);\n  const taskStatuses = ['pending', 'in progress', 'completed'];\n  const taskPriorities = ['low', 'medium', 'high'];\n\n  // Data Fetching Logic (remains the same)\n  const fetchData = useCallback(async () => {/* ... */}, [token]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  // --- Edit/Create Modal Handlers ---\n  const handleShowCreateModal = () => {\n    var _projects$;\n    setIsEditing(false); // Set editing to false for create modal\n    setCurrentTask(null);\n    setModalError(null);\n    setIsSubmitting(false);\n    setFormData({\n      project_id: ((_projects$ = projects[0]) === null || _projects$ === void 0 ? void 0 : _projects$.id) || '',\n      title: '',\n      description: '',\n      status: 'pending',\n      // Set default in state, but field is hidden\n      priority: 'medium',\n      assigned_user_id: '',\n      due_date: '',\n      actual_cost: ''\n    });\n    setShowModal(true);\n    // } else if (!loading) { /* ... error handling ... */ } // Simplified\n  };\n  const handleShowEditModal = task => {\n    setIsEditing(true); // Set editing to true for edit modal\n    setCurrentTask(task);\n    setModalError(null);\n    setIsSubmitting(false);\n    setFormData({\n      // Populate including status\n      project_id: task.project_id,\n      title: task.title,\n      description: task.description || '',\n      status: task.status || 'pending',\n      // Populate status for editing\n      priority: task.priority || 'medium',\n      assigned_user_id: task.assigned_user_id || '',\n      due_date: task.due_date ? task.due_date.split('T')[0] : '',\n      actual_cost: task.actual_cost !== null && task.actual_cost !== undefined ? String(task.actual_cost) : ''\n    });\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {/* ... (remains same) ... */};\n  const handleInputChange = e => {/* ... (remains same) ... */};\n\n  // Form Submission (Backend handles default status on create)\n  const handleSubmit = async e => {/* ... (remains same) ... */};\n\n  // Deletion Handler\n  const handleDelete = async taskId => {/* ... (remains same) ... */};\n\n  // Time Log Modal Handlers\n  const handleShowTimeLogModal = task => {/* ... (remains same) ... */};\n  const handleCloseTimeLogModal = () => {/* ... (remains same) ... */};\n  const handleTimeLogSaveSuccess = () => {/* ... (remains same) ... */};\n\n  // --- Render Logic ---\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center align-items-center text-light vh-100\",\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      className: \"me-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 109\n    }, this), \" Loading...\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 25\n  }, this);\n  if (error && !showModal && !showTimeLogModal) return /*#__PURE__*/_jsxDEV(Alert, {\n    variant: \"danger\",\n    className: \"bg-dark text-light border-danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 58\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-md-4\",\n    style: {\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #232323, #1a1a1a)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark p-4 rounded shadow mb-4\",\n      children: tasks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          variant: \"dark\",\n          striped: true,\n          hover: true,\n          responsive: \"sm\",\n          className: \"align-middle\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 50\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 65\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 82\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Assignee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 99\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-end\",\n                children: \"Cost\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 116\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-end\",\n                children: \"Time Spent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 150\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 190\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {}, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 39\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      backdrop: \"static\",\n      keyboard: false,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: !isSubmitting,\n        closeVariant: \"white\",\n        className: \"bg-dark border-secondary\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          className: \"text-light\",\n          children: isEditing ? 'Edit Task' : 'Create New Task'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          className: \"bg-dark text-light\",\n          children: [modalError && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            className: \"bg-dark text-light border-danger\",\n            onClose: () => setModalError(null),\n            dismissible: true,\n            children: modalError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"taskProjectId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"taskTitle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"taskDescription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-3\",\n            children: [isEditing && /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"taskStatus\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 28\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  name: \"status\",\n                  value: formData.status,\n                  onChange: handleInputChange,\n                  className: \"bg-secondary text-white border-secondary\",\n                  disabled: isSubmitting,\n                  children: taskStatuses.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: s,\n                    className: \"text-capitalize\",\n                    children: s\n                  }, s, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 54\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: isEditing ? 6 : 12,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"taskPriority\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Priority\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 24\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  name: \"priority\",\n                  value: formData.priority,\n                  onChange: handleInputChange,\n                  className: \"bg-secondary text-white border-secondary\",\n                  disabled: isSubmitting,\n                  children: taskPriorities.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: p,\n                    className: \"text-capitalize\",\n                    children: p\n                  }, p, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 52\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 24\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-3\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"taskDueDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 37\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"taskAssignee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 128\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 116\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"taskActualCost\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 20\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          className: \"bg-dark border-secondary\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleCloseModal,\n            disabled: isSubmitting,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: isSubmitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"...\"\n            }, void 0, false) : isEditing ? 'Save Changes' : 'Create Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), selectedTaskForLog && /*#__PURE__*/_jsxDEV(TimeLogForm /* ... props ... */, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskTable, \"+FW97hk3AAjr2DBD1vRk6GoUcpM=\", false, function () {\n  return [useAuth];\n});\n_c = TaskTable;\nexport default TaskTable;\nvar _c;\n$RefreshReg$(_c, \"TaskTable\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useAuth","API_BASE_URL","Modal","Button","Form","Badge","Table","Spinner","Alert","Row","Col","formatCurrency","formatDuration","TimeLogForm","jsxDEV","_jsxDEV","Fragment","_Fragment","getTaskStatusColor","status","toLowerCase","getTaskPriorityColor","priority","TaskTable","_s","token","tasks","setTasks","projects","setProjects","users","setUsers","loading","setLoading","error","setError","modalError","setModalError","showModal","setShowModal","isEditing","setIsEditing","currentTask","setCurrentTask","formData","setFormData","project_id","title","description","assigned_user_id","due_date","actual_cost","isSubmitting","setIsSubmitting","showTimeLogModal","setShowTimeLogModal","selectedTaskForLog","setSelectedTaskForLog","taskStatuses","taskPriorities","fetchData","handleShowCreateModal","_projects$","id","handleShowEditModal","task","split","undefined","String","handleCloseModal","handleInputChange","e","handleSubmit","handleDelete","taskId","handleShowTimeLogModal","handleCloseTimeLogModal","handleTimeLogSaveSuccess","className","children","animation","fileName","_jsxFileName","lineNumber","columnNumber","variant","style","minHeight","background","length","striped","hover","responsive","map","show","onHide","backdrop","keyboard","centered","Header","closeButton","closeVariant","Title","onSubmit","Body","onClose","dismissible","Group","controlId","md","Label","Select","name","value","onChange","disabled","s","p","Footer","onClick","type","_c","$RefreshReg$"],"sources":["D:/Harvy/Dev/ProjectManagementSystem/frontend/src/components/Dashboard/TasksTable.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { API_BASE_URL } from '../../App';\r\nimport { Modal, Button, Form, Badge, Table, Spinner, Alert, Row, Col } from 'react-bootstrap';\r\n// Assuming formatCurrency and formatDuration are correctly imported from your utils\r\nimport { formatCurrency, formatDuration } from '../../utils/formatting'; // Adjust path if needed\r\nimport TimeLogForm from './TimeLogForm'; // Import TimeLogForm\r\n\r\n// Helper functions\r\nconst getTaskStatusColor = (status) => {\r\n  switch (status?.toLowerCase()) {\r\n    case 'pending': return 'secondary';\r\n    case 'in progress': return 'info';\r\n    case 'completed': return 'success';\r\n    default: return 'light';\r\n  }\r\n};\r\nconst getTaskPriorityColor = (priority) => {\r\n  switch (priority) {\r\n    case 'low': return 'success';\r\n    case 'medium': return 'warning';\r\n    case 'high': return 'danger';\r\n    default: return 'light';\r\n  }\r\n};\r\n\r\n\r\nfunction TaskTable() {\r\n  const { token } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [modalError, setModalError] = useState(null);\r\n\r\n  // State for Edit/Create Task Modal\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false); // This flag controls conditional rendering\r\n  const [currentTask, setCurrentTask] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    project_id: '', title: '', description: '', status: 'pending', priority: 'medium',\r\n    assigned_user_id: '', due_date: '', actual_cost: '',\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // State for Time Log Modal\r\n  const [showTimeLogModal, setShowTimeLogModal] = useState(false);\r\n  const [selectedTaskForLog, setSelectedTaskForLog] = useState(null);\r\n\r\n  const taskStatuses = ['pending', 'in progress', 'completed'];\r\n  const taskPriorities = ['low', 'medium', 'high'];\r\n\r\n  // Data Fetching Logic (remains the same)\r\n  const fetchData = useCallback(async () => { /* ... */ }, [token]);\r\n  useEffect(() => { fetchData(); }, [fetchData]);\r\n\r\n  // --- Edit/Create Modal Handlers ---\r\n  const handleShowCreateModal = () => {\r\n      setIsEditing(false); // Set editing to false for create modal\r\n      setCurrentTask(null);\r\n      setModalError(null);\r\n      setIsSubmitting(false);\r\n      setFormData({\r\n          project_id: projects[0]?.id || '', title: '', description: '',\r\n          status: 'pending', // Set default in state, but field is hidden\r\n          priority: 'medium', assigned_user_id: '', due_date: '', actual_cost: '',\r\n      });\r\n      setShowModal(true);\r\n     // } else if (!loading) { /* ... error handling ... */ } // Simplified\r\n  };\r\n  const handleShowEditModal = (task) => {\r\n      setIsEditing(true); // Set editing to true for edit modal\r\n      setCurrentTask(task);\r\n      setModalError(null);\r\n      setIsSubmitting(false);\r\n      setFormData({ // Populate including status\r\n          project_id: task.project_id, title: task.title, description: task.description || '',\r\n          status: task.status || 'pending', // Populate status for editing\r\n          priority: task.priority || 'medium',\r\n          assigned_user_id: task.assigned_user_id || '',\r\n          due_date: task.due_date ? task.due_date.split('T')[0] : '',\r\n          actual_cost: task.actual_cost !== null && task.actual_cost !== undefined ? String(task.actual_cost) : '',\r\n      });\r\n      setShowModal(true);\r\n  };\r\n  const handleCloseModal = () => { /* ... (remains same) ... */ };\r\n  const handleInputChange = (e) => { /* ... (remains same) ... */ };\r\n\r\n  // Form Submission (Backend handles default status on create)\r\n  const handleSubmit = async (e) => { /* ... (remains same) ... */ };\r\n\r\n  // Deletion Handler\r\n  const handleDelete = async (taskId) => { /* ... (remains same) ... */ };\r\n\r\n  // Time Log Modal Handlers\r\n  const handleShowTimeLogModal = (task) => { /* ... (remains same) ... */ };\r\n  const handleCloseTimeLogModal = () => { /* ... (remains same) ... */ };\r\n  const handleTimeLogSaveSuccess = () => { /* ... (remains same) ... */ };\r\n\r\n\r\n  // --- Render Logic ---\r\n  if (loading) return ( <div className=\"d-flex justify-content-center align-items-center text-light vh-100\"><Spinner animation=\"border\" className=\"me-2\"/> Loading...</div> );\r\n  if (error && !showModal && !showTimeLogModal) return ( <Alert variant=\"danger\" className=\"bg-dark text-light border-danger\">{error}</Alert> );\r\n\r\n  return (\r\n    <div className=\"p-md-4\" style={{ minHeight: '100vh', background: 'linear-gradient(135deg, #232323, #1a1a1a)' }}>\r\n      <div className=\"bg-dark p-4 rounded shadow mb-4\">\r\n        {/* Header, Create Button, Info Messages */}\r\n        {/* ... */}\r\n\r\n        {/* Task Table */}\r\n        {tasks.length > 0 && (\r\n          <div className=\"table-responsive\">\r\n             {/* ... Table structure ... */}\r\n             <Table variant=\"dark\" striped hover responsive=\"sm\" className=\"align-middle\">\r\n               <thead>\r\n                 <tr>\r\n                   <th>Title</th><th>Project</th><th>Status</th><th>Priority</th><th>Due Date</th><th>Assignee</th><th className=\"text-end\">Cost</th><th className=\"text-end\">Time Spent</th><th className=\"text-center\">Actions</th>\r\n                 </tr>\r\n               </thead>\r\n               <tbody>\r\n                 {tasks.map(task => ( <tr key={task.id}>{/* ... table cells ... */}</tr> ))}\r\n               </tbody>\r\n             </Table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* --- Task Edit/Create Modal --- */}\r\n      <Modal show={showModal} onHide={handleCloseModal} backdrop=\"static\" keyboard={false} centered>\r\n        <Modal.Header closeButton={!isSubmitting} closeVariant=\"white\" className=\"bg-dark border-secondary\">\r\n          <Modal.Title className=\"text-light\">{isEditing ? 'Edit Task' : 'Create New Task'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Modal.Body className=\"bg-dark text-light\">\r\n             {modalError && <Alert variant=\"danger\" className=\"bg-dark text-light border-danger\" onClose={() => setModalError(null)} dismissible>{modalError}</Alert>}\r\n\r\n             {/* Project, Title, Description remain the same */}\r\n             <Form.Group className=\"mb-3\" controlId=\"taskProjectId\">{/* ... */}</Form.Group>\r\n             <Form.Group className=\"mb-3\" controlId=\"taskTitle\">{/* ... */}</Form.Group>\r\n             <Form.Group className=\"mb-3\" controlId=\"taskDescription\">{/* ... */}</Form.Group>\r\n\r\n             {/* --- Status (Conditional) & Priority --- */}\r\n             <Row className=\"mb-3\">\r\n                {/* Conditionally render Status ONLY IF EDITING */}\r\n                {isEditing && (\r\n                    <Col md={6}>\r\n                         <Form.Group controlId=\"taskStatus\">\r\n                           <Form.Label>Status</Form.Label>\r\n                           <Form.Select name=\"status\" value={formData.status} onChange={handleInputChange} className=\"bg-secondary text-white border-secondary\" disabled={isSubmitting}>\r\n                             {taskStatuses.map(s => (<option key={s} value={s} className=\"text-capitalize\">{s}</option>))}\r\n                           </Form.Select>\r\n                         </Form.Group>\r\n                    </Col>\r\n                )}\r\n                 {/* Adjust Priority Column width based on whether Status is shown */}\r\n                 <Col md={isEditing ? 6 : 12}>\r\n                     <Form.Group controlId=\"taskPriority\">\r\n                       <Form.Label>Priority</Form.Label>\r\n                       <Form.Select name=\"priority\" value={formData.priority} onChange={handleInputChange} className=\"bg-secondary text-white border-secondary\" disabled={isSubmitting}>\r\n                         {taskPriorities.map(p => (<option key={p} value={p} className=\"text-capitalize\">{p}</option>))}\r\n                       </Form.Select>\r\n                     </Form.Group>\r\n                 </Col>\r\n             </Row>\r\n             {/* --- End Status & Priority --- */}\r\n\r\n             {/* Due Date, Assignee, Actual Cost remain the same */}\r\n             <Row className=\"mb-3\"> <Col md={6}><Form.Group controlId=\"taskDueDate\">{/* ... */}</Form.Group></Col> <Col md={6}><Form.Group controlId=\"taskAssignee\">{/* ... */}</Form.Group></Col> </Row>\r\n             <Row> <Col md={6}><Form.Group className=\"mb-3\" controlId=\"taskActualCost\">{/* ... */}</Form.Group></Col> </Row>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer className=\"bg-dark border-secondary\">\r\n            <Button variant=\"secondary\" onClick={handleCloseModal} disabled={isSubmitting}>Cancel</Button>\r\n            <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\r\n               {isSubmitting ? (<>...</>) : (isEditing ? 'Save Changes' : 'Create Task')}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n      {/* --- End Task Edit/Create Modal --- */}\r\n\r\n\r\n      {/* --- Time Log Modal Rendering (remains the same) --- */}\r\n      {selectedTaskForLog && (\r\n          <TimeLogForm /* ... props ... */ />\r\n      )}\r\n      {/* --- End Time Log Modal Rendering --- */}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}