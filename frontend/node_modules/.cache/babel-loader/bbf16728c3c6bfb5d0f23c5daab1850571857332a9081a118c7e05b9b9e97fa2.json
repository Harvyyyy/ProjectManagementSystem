{"ast":null,"code":"var _jsxFileName = \"D:\\\\Harvy\\\\Dev\\\\ProjectManagementSystem\\\\frontend\\\\src\\\\components\\\\Notifications\\\\NotificationBell.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\n// --- CORRECTED IMPORT ---\nimport { Dropdown, Badge, Spinner, ListGroup, Button, Alert } from 'react-bootstrap';\n// --- END CORRECTION ---\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext'; // Adjust path\nimport { API_BASE_URL } from '../../App'; // Adjust path\nimport { formatDate } from '../../utils/formatting'; // Adjust path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NotificationBell() {\n  _s();\n  const {\n    token\n  } = useAuth();\n  const navigate = useNavigate();\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isOpen, setIsOpen] = useState(false); // Manage dropdown visibility\n\n  const fetchNotifications = useCallback(async (fetchType = 'unread') => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      var _data$meta$unread_cou, _data$meta;\n      const response = await fetch(`${API_BASE_URL}/notifications?status=${fetchType}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"Notifications Data:\", data);\n      setNotifications(data.data || []);\n      setUnreadCount((_data$meta$unread_cou = (_data$meta = data.meta) === null || _data$meta === void 0 ? void 0 : _data$meta.unread_count) !== null && _data$meta$unread_cou !== void 0 ? _data$meta$unread_cou : 0);\n    } catch (err) {\n      console.error(\"Failed to fetch notifications:\", err);\n      setError(\"Couldn't load notifications.\");\n      setUnreadCount(0);\n      setNotifications([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [token]);\n\n  // Initial fetch\n  useEffect(() => {\n    fetchNotifications('unread');\n    // Optional: Setup polling interval\n    // const intervalId = setInterval(() => fetchNotifications('unread'), 60000);\n    // return () => clearInterval(intervalId);\n  }, [fetchNotifications]);\n  const handleToggle = nextShowState => {\n    setIsOpen(nextShowState);\n    // Fetch more/all when dropdown opens\n    if (nextShowState) {\n      fetchNotifications('all'); // Fetch all when opening for simplicity now\n    }\n  };\n  const handleMarkAsRead = async (notificationId, e) => {\n    e.stopPropagation(); // Prevent dropdown close\n    // Find the notification to potentially update UI optimistically\n    const targetNotification = notifications.find(n => n.id === notificationId);\n    if (!targetNotification || targetNotification.read_at) return; // Already read or not found\n\n    // Optimistic UI update (mark as read visually immediately)\n    setNotifications(prev => prev.map(n => n.id === notificationId ? {\n      ...n,\n      read_at: new Date().toISOString()\n    } : n));\n    setUnreadCount(prev => Math.max(0, prev - 1)); // Decrease count\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/notifications/${notificationId}/read`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to mark as read on server');\n      }\n      // Optionally re-fetch on success if optimistic update isn't fully trusted\n      // fetchNotifications(isOpen ? 'all' : 'unread');\n    } catch (err) {\n      console.error(\"Failed to mark notification as read:\", err);\n      setError(\"Failed to update notification.\");\n      // Revert optimistic UI update on error\n      setNotifications(prev => prev.map(n => n.id === notificationId ? {\n        ...n,\n        read_at: null\n      } : n // Revert read_at\n      ));\n      setUnreadCount(prev => prev + 1); // Increment count back\n    }\n  };\n  const handleNotificationClick = (notification, e) => {\n    var _notification$data;\n    // Mark as read first if unread\n    if (!notification.read_at) {\n      handleMarkAsRead(notification.id, e);\n    }\n    // Then navigate if URL exists\n    if ((_notification$data = notification.data) !== null && _notification$data !== void 0 && _notification$data.url) {\n      navigate(notification.data.url);\n      setIsOpen(false); // Close dropdown after navigation\n    }\n  };\n\n  // Custom Dropdown Toggle Component\n  const CustomToggle = /*#__PURE__*/React.forwardRef(({\n    children,\n    onClick\n  }, ref) => /*#__PURE__*/_jsxDEV(Button, {\n    ref: ref,\n    onClick: e => {\n      e.preventDefault();\n      onClick(e);\n    },\n    variant: \"dark\",\n    className: \"position-relative border-0 p-0 me-2\" // Adjust padding/margin\n    ,\n    \"aria-label\": \"Notifications\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"bi bi-bell-fill text-white fs-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(Badge, {\n      pill: true,\n      bg: \"danger\",\n      className: \"position-absolute top-0 start-100 translate-middle\",\n      style: {\n        fontSize: '0.6em',\n        padding: '0.3em 0.5em'\n      },\n      children: [unreadCount > 9 ? '9+' : unreadCount, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"unread notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    onToggle: handleToggle,\n    show: isOpen,\n    align: \"end\",\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      as: CustomToggle,\n      id: \"dropdown-custom-components\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      variant: \"dark\",\n      className: \"shadow mt-2 dropdown-menu-scrollable\",\n      style: {\n        minWidth: '300px',\n        maxHeight: '400px',\n        overflowY: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Header, {\n        className: \"d-flex justify-content-between align-items-center\",\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 10\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-3 text-muted\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          size: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 23\n      }, this), error && !isLoading && /*#__PURE__*/_jsxDEV(Dropdown.ItemText, {\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          size: \"sm\",\n          className: \"mb-0\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }, this), !isLoading && !error && notifications.length === 0 && /*#__PURE__*/_jsxDEV(Dropdown.ItemText, {\n        className: \"text-muted text-center p-3\",\n        children: \"No notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), !isLoading && !error && notifications.length > 0 && /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: notifications.map(notification => {\n          var _notification$data2;\n          return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            action: true // Makes it look clickable\n            ,\n            onClick: e => handleNotificationClick(notification, e)\n            // Apply styles based on read status\n            ,\n            className: `bg-dark text-light border-secondary px-3 py-2 ${!notification.read_at ? 'bg-opacity-75 fw-bold notification-unread' : 'notification-read'}`,\n            style: {\n              cursor: 'pointer',\n              opacity: !notification.read_at ? 1 : 0.7\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between align-items-start\",\n              children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                style: {\n                  fontSize: '0.9em',\n                  marginRight: '5px'\n                },\n                children: ((_notification$data2 = notification.data) === null || _notification$data2 === void 0 ? void 0 : _notification$data2.message) || 'Notification message missing.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 28\n              }, this), !notification.read_at && /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\" // More subtle button\n                ,\n                size: \"sm\",\n                className: \"ms-auto border-0 flex-shrink-0\" // Prevent button from shrinking message\n                ,\n                style: {\n                  lineHeight: '1',\n                  padding: '0.1rem 0.3rem'\n                },\n                onClick: e => handleMarkAsRead(notification.id, e),\n                title: \"Mark as read\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-check-lg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 36\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"d-block text-muted\",\n              style: {\n                fontSize: '0.75em'\n              },\n              children: formatDate(notification.created_at, {\n                dateStyle: 'short',\n                timeStyle: 'short'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 24\n            }, this)]\n          }, notification.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(NotificationBell, \"QgVOi2Dd6d6fVwwELrP7FoUANlU=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = NotificationBell;\nexport default NotificationBell;\nvar _c;\n$RefreshReg$(_c, \"NotificationBell\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Dropdown","Badge","Spinner","ListGroup","Button","Alert","Link","useNavigate","useAuth","API_BASE_URL","formatDate","jsxDEV","_jsxDEV","NotificationBell","_s","token","navigate","notifications","setNotifications","unreadCount","setUnreadCount","isLoading","setIsLoading","error","setError","isOpen","setIsOpen","fetchNotifications","fetchType","_data$meta$unread_cou","_data$meta","response","fetch","headers","Authorization","Accept","ok","Error","status","data","json","console","log","meta","unread_count","err","handleToggle","nextShowState","handleMarkAsRead","notificationId","e","stopPropagation","targetNotification","find","n","id","read_at","prev","map","Date","toISOString","Math","max","method","handleNotificationClick","notification","_notification$data","url","CustomToggle","forwardRef","children","onClick","ref","preventDefault","variant","className","fileName","_jsxFileName","lineNumber","columnNumber","pill","bg","style","fontSize","padding","onToggle","show","align","Toggle","as","Menu","minWidth","maxHeight","overflowY","Header","Divider","animation","size","ItemText","length","_notification$data2","Item","action","cursor","opacity","marginRight","message","lineHeight","title","created_at","dateStyle","timeStyle","_c","$RefreshReg$"],"sources":["D:/Harvy/Dev/ProjectManagementSystem/frontend/src/components/Notifications/NotificationBell.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\n// --- CORRECTED IMPORT ---\r\nimport { Dropdown, Badge, Spinner, ListGroup, Button, Alert } from 'react-bootstrap';\r\n// --- END CORRECTION ---\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext'; // Adjust path\r\nimport { API_BASE_URL } from '../../App'; // Adjust path\r\nimport { formatDate } from '../../utils/formatting'; // Adjust path\r\n\r\nfunction NotificationBell() {\r\n  const { token } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isOpen, setIsOpen] = useState(false); // Manage dropdown visibility\r\n\r\n  const fetchNotifications = useCallback(async (fetchType = 'unread') => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/notifications?status=${fetchType}`, {\r\n        headers: { Authorization: `Bearer ${token}`, Accept: 'application/json' },\r\n      });\r\n      if (!response.ok) { throw new Error(`HTTP error ${response.status}`); }\r\n      const data = await response.json();\r\n      console.log(\"Notifications Data:\", data);\r\n      setNotifications(data.data || []);\r\n      setUnreadCount(data.meta?.unread_count ?? 0);\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch notifications:\", err);\r\n      setError(\"Couldn't load notifications.\");\r\n      setUnreadCount(0);\r\n      setNotifications([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  // Initial fetch\r\n  useEffect(() => {\r\n    fetchNotifications('unread');\r\n    // Optional: Setup polling interval\r\n    // const intervalId = setInterval(() => fetchNotifications('unread'), 60000);\r\n    // return () => clearInterval(intervalId);\r\n  }, [fetchNotifications]);\r\n\r\n  const handleToggle = (nextShowState) => {\r\n     setIsOpen(nextShowState);\r\n     // Fetch more/all when dropdown opens\r\n     if (nextShowState) {\r\n          fetchNotifications('all'); // Fetch all when opening for simplicity now\r\n     }\r\n  };\r\n\r\n  const handleMarkAsRead = async (notificationId, e) => {\r\n      e.stopPropagation(); // Prevent dropdown close\r\n      // Find the notification to potentially update UI optimistically\r\n      const targetNotification = notifications.find(n => n.id === notificationId);\r\n      if (!targetNotification || targetNotification.read_at) return; // Already read or not found\r\n\r\n      // Optimistic UI update (mark as read visually immediately)\r\n      setNotifications(prev => prev.map(n =>\r\n          n.id === notificationId ? { ...n, read_at: new Date().toISOString() } : n\r\n      ));\r\n      setUnreadCount(prev => Math.max(0, prev - 1)); // Decrease count\r\n\r\n      try {\r\n          const response = await fetch(`${API_BASE_URL}/notifications/${notificationId}/read`, {\r\n              method: 'POST',\r\n              headers: { Authorization: `Bearer ${token}`, Accept: 'application/json', 'Content-Type': 'application/json' },\r\n          });\r\n          if (!response.ok) { throw new Error('Failed to mark as read on server'); }\r\n          // Optionally re-fetch on success if optimistic update isn't fully trusted\r\n          // fetchNotifications(isOpen ? 'all' : 'unread');\r\n      } catch (err) {\r\n          console.error(\"Failed to mark notification as read:\", err);\r\n          setError(\"Failed to update notification.\");\r\n          // Revert optimistic UI update on error\r\n          setNotifications(prev => prev.map(n =>\r\n              n.id === notificationId ? { ...n, read_at: null } : n // Revert read_at\r\n          ));\r\n          setUnreadCount(prev => prev + 1); // Increment count back\r\n      }\r\n  };\r\n\r\n  const handleNotificationClick = (notification, e) => {\r\n    // Mark as read first if unread\r\n    if (!notification.read_at) {\r\n       handleMarkAsRead(notification.id, e);\r\n    }\r\n    // Then navigate if URL exists\r\n    if (notification.data?.url) {\r\n        navigate(notification.data.url);\r\n        setIsOpen(false); // Close dropdown after navigation\r\n    }\r\n  };\r\n\r\n  // Custom Dropdown Toggle Component\r\n  const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n    <Button\r\n      ref={ref}\r\n      onClick={(e) => { e.preventDefault(); onClick(e); }}\r\n      variant=\"dark\"\r\n      className=\"position-relative border-0 p-0 me-2\" // Adjust padding/margin\r\n      aria-label=\"Notifications\"\r\n    >\r\n      <i className=\"bi bi-bell-fill text-white fs-5\"></i>\r\n      {unreadCount > 0 && (\r\n        <Badge\r\n          pill bg=\"danger\"\r\n          className=\"position-absolute top-0 start-100 translate-middle\"\r\n          style={{ fontSize: '0.6em', padding: '0.3em 0.5em' }}\r\n        >\r\n          {unreadCount > 9 ? '9+' : unreadCount}\r\n          <span className=\"visually-hidden\">unread notifications</span>\r\n        </Badge>\r\n      )}\r\n    </Button>\r\n  ));\r\n\r\n  return (\r\n    <Dropdown onToggle={handleToggle} show={isOpen} align=\"end\">\r\n      <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\" />\r\n\r\n      <Dropdown.Menu variant=\"dark\" className=\"shadow mt-2 dropdown-menu-scrollable\" style={{minWidth: '300px', maxHeight: '400px', overflowY: 'auto'}}>\r\n         <Dropdown.Header className=\"d-flex justify-content-between align-items-center\">\r\n             Notifications\r\n             {/* Optional: Mark All Read Button */}\r\n         </Dropdown.Header>\r\n         <Dropdown.Divider />\r\n\r\n        {/* Loading State */}\r\n        {isLoading && <div className=\"text-center p-3 text-muted\"><Spinner animation=\"border\" size=\"sm\" /></div>}\r\n\r\n        {/* Error State */}\r\n        {error && !isLoading && <Dropdown.ItemText><Alert variant=\"danger\" size=\"sm\" className=\"mb-0\">{error}</Alert></Dropdown.ItemText>}\r\n\r\n        {/* No Notifications State */}\r\n        {!isLoading && !error && notifications.length === 0 && (\r\n          <Dropdown.ItemText className=\"text-muted text-center p-3\">No notifications</Dropdown.ItemText>\r\n        )}\r\n\r\n        {/* Notifications List */}\r\n        {!isLoading && !error && notifications.length > 0 && (\r\n             <ListGroup variant=\"flush\">\r\n                 {notifications.map(notification => (\r\n                     <ListGroup.Item\r\n                        key={notification.id}\r\n                        action // Makes it look clickable\r\n                        onClick={(e) => handleNotificationClick(notification, e)}\r\n                        // Apply styles based on read status\r\n                        className={`bg-dark text-light border-secondary px-3 py-2 ${!notification.read_at ? 'bg-opacity-75 fw-bold notification-unread' : 'notification-read'}`}\r\n                        style={{ cursor: 'pointer', opacity: !notification.read_at ? 1 : 0.7 }}\r\n                      >\r\n                       <div className=\"d-flex justify-content-between align-items-start\">\r\n                           <small style={{fontSize: '0.9em', marginRight: '5px'}}>\r\n                               {notification.data?.message || 'Notification message missing.'}\r\n                            </small>\r\n                            {/* Show mark as read button only if unread */}\r\n                            {!notification.read_at && (\r\n                                <Button\r\n                                    variant=\"outline-secondary\" // More subtle button\r\n                                    size=\"sm\"\r\n                                    className=\"ms-auto border-0 flex-shrink-0\" // Prevent button from shrinking message\r\n                                    style={{ lineHeight: '1', padding: '0.1rem 0.3rem'}}\r\n                                    onClick={(e) => handleMarkAsRead(notification.id, e)}\r\n                                    title=\"Mark as read\"\r\n                                >\r\n                                   <i className=\"bi bi-check-lg\"></i>\r\n                                </Button>\r\n                            )}\r\n                       </div>\r\n                       <small className=\"d-block text-muted\" style={{fontSize: '0.75em'}}>\r\n                           {formatDate(notification.created_at, { dateStyle: 'short', timeStyle: 'short' })}\r\n                        </small>\r\n                     </ListGroup.Item>\r\n                 ))}\r\n             </ListGroup>\r\n        )}\r\n         {/* Optional: Link to see all notifications */}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n}\r\n\r\nexport default NotificationBell;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}